[{"path":"https://emf-creaf.github.io/meteoland/articles/examples/interpolation-senegal.html","id":"accessing-weather-station-data","dir":"Articles > Examples","previous_headings":"","what":"Accessing weather station data","title":"Daily weather interpolation over Senegal","text":"start loading package worldmet, provides access 30.000 weather stations across globe: order download weather data, must first obtain codes weather stations available study area. can done using function getMeta() worldmet, use know available weather stations Senegal neighbouring countries: station metadata looks like : Let’s assume want interpolate weather year 2020. can download hourly weather station data selected stations year 2020 using function importNOAA() programming loop stations:","code":"library(worldmet) # Country codes: #   Senegal - SG #   Gambia - GA  #   Guinea - GV #   Mali - ML  #   Mauritania - MR #   Guinea bissau - PU sg_st <- dplyr::bind_rows(worldmet::getMeta(country=\"SG\", plot = FALSE),                           worldmet::getMeta(country=\"GA\", plot = FALSE),                           worldmet::getMeta(country=\"GV\", plot = FALSE),                           worldmet::getMeta(country=\"ML\", plot = FALSE),                           worldmet::getMeta(country=\"MR\", plot = FALSE),                           worldmet::getMeta(country=\"PU\", plot = FALSE)) sg_st ## # A tibble: 57 × 12 ##    usaf  wban  station ctry  st    call  latitude longitude `elev(m)` begin      ##    <chr> <chr> <chr>   <chr> <chr> <chr>    <dbl>     <dbl>     <dbl> <date>     ##  1 6160… 99999 SAINT … SG    NA    GOSS      16.1     -16.5       2.7 1949-04-01 ##  2 6161… 99999 PODOR   SG    NA    GOSP      16.6     -15.0       7   1973-01-01 ##  3 6162… 99999 LINGUE… SG    NA    GOOG      15.4     -15.1      21   1950-03-04 ##  4 6163… 99999 MATAM/… SG    NA    GOSM      15.6     -13.2      17   1949-04-23 ##  5 6164… 99999 LEOPOL… SG    NA    GOOY      14.7     -17.5      25.9 1943-04-01 ##  6 6166… 99999 DIOURB… SG    NA    GOOD      14.6     -16.2       9   1950-02-06 ##  7 6167… 99999 KAOLACK SG    NA    GOOK      14.1     -16.1       7.9 1950-02-05 ##  8 6168… 99999 TAMBAC… SG    NA    GOTT      13.7     -13.7      49.1 1949-05-01 ##  9 6169… 99999 ZIGUIN… SG    NA    GOGG      12.6     -16.3      22.9 1949-04-02 ## 10 6169… 99999 CAP SK… SG    NA    GOGS      12.4     -16.7      15.8 1977-11-01 ## # ℹ 47 more rows ## # ℹ 2 more variables: end <date>, code <chr> hourData <- NULL for(i in 1:length(sg_st$code)) {   cat(paste0(sg_st$code[i],\" \"))   tryCatch({     hi <- worldmet::importNOAA(code = sg_st$code[i], year=2020, quiet=TRUE)     if(is.null(hourData))  {hourData <- hi}     else {hourData <- dplyr::bind_rows(hourData,hi)}     cat(\" [success].\")   }, error = function(e) {cat(\"[failed].\")}) }"},{"path":"https://emf-creaf.github.io/meteoland/articles/examples/interpolation-senegal.html","id":"processing-weather-station-data-for-interpolation","dir":"Articles > Examples","previous_headings":"","what":"Processing weather station data for interpolation","title":"Daily weather interpolation over Senegal","text":"stations missing data year 2020 excluded output. Using function worldmet2meteoland() meteoland, can reshape hourly data remaining stations daily data form sf object: interpolator object needs created interpolation, containing station weather topographic data also interpolation parameters. can obtained using function create_meteo_interpolator(): warning message indicates default interpolation parameters set serious application calibrate parameters using reference data interpolation. interpolator object class stars: needed, can display location weather stations map country limits. useful know station density study area. case use following code:","code":"sf_sen <- worldmet2meteoland(hourData, complete = TRUE) sf_sen interpolator_sen <- meteoland::create_meteo_interpolator(sf_sen, verbose = FALSE) ## Warning: No interpolation parameters provided, using defaults ## ℹ Set the `params` argument to modify parameter default values interpolator_sen ## stars object with 2 dimensions and 13 attributes ## attribute(s): ##                                 Min.   1st Qu.     Median       Mean   3rd Qu. ## Temperature               11.0000000 26.450000  28.537500  28.750958  30.91154 ## MinTemperature             8.5000000 21.000000  24.000000  23.712257  26.00000 ## MaxTemperature            11.0000000 31.000000  34.050000  34.322865  38.00000 ## RelativeHumidity           0.2667855 34.205043  57.318043  55.513283  77.66032 ## Precipitation              0.0000000  0.500000   3.750000  11.342697  13.00000 ## Radiation                  6.6175299 17.168025  19.766780  19.375520  22.35280 ## WindDirection              0.0000000 52.937535 192.002116 171.436844 270.00000 ## WindSpeed                  0.0000000  1.500000   2.311111   2.605188   3.31099 ## elevation                  1.0000000 17.000000  51.500000 172.636383 289.00000 ## aspect                     0.0000000  0.000000   0.000000   0.000000   0.00000 ## slope                      0.0000000  0.000000   0.000000   0.000000   0.00000 ## SmoothedPrecipitation      0.1000000  3.000000   8.000000  11.312237  14.66667 ## SmoothedTemperatureRange   0.0000000  5.555667   9.225806   9.525796  14.16504 ##                                 Max.  NA's ## Temperature                 48.00000  3893 ## MinTemperature              48.00000  3893 ## MaxTemperature              48.20000  3893 ## RelativeHumidity           100.00000  3893 ## Precipitation              381.30000 15778 ## Radiation                   28.92108  3893 ## WindDirection              360.00000  4464 ## WindSpeed                   33.50000  3983 ## elevation                 1035.10000     0 ## aspect                       0.00000     0 ## slope                        0.00000     0 ## SmoothedPrecipitation      137.30000 12897 ## SmoothedTemperatureRange    21.40484  1816 ## dimension(s): ##         from  to         offset  delta  refsys point ## date       1 366 2020-01-01 UTC 1 days POSIXct FALSE ## station    1  47             NA     NA  WGS 84  TRUE ##                                                        values ## date                                                     NULL ## station POINT (-9.35 15.23333),...,POINT (-8.833333 7.733333) data(\"africountries\") senegal <- africountries[africountries$name==\"Senegal\",] ggplot()+   geom_sf(data = sf::st_geometry(africountries))+   geom_sf(data = sf::st_geometry(senegal), fill= \"red\")+   geom_sf(data = sf_sen[1], size = 0.5)+   xlim(c(-20,0))+ ylim(c(0,30))+   theme_bw()"},{"path":"https://emf-creaf.github.io/meteoland/articles/examples/interpolation-senegal.html","id":"accessing-and-arranging-topographic-data","dir":"Articles > Examples","previous_headings":"","what":"Accessing and arranging topographic data","title":"Daily weather interpolation over Senegal","text":"perform weather interpolation, need topography (elevation, slope, aspect) target area. can use function elevation_30s() package geodata download elevation data Senegal: previous function return SpatRaster object (package terra). order estimate slope aspect can use function terrain() terra package: can plot three rasters using ggplot() using geom_spatraster() package tidyterra:  now assemble three rasters single object: resolution raster quite high, make interpolation quite slow. reason, use function aggregate() package terra lower resolution speed-calculations, one may skip step. Finally, reshape raster object package stars:","code":"elev_raster <- geodata::elevation_30s(country=\"SEN\", path = tempdir()) names(elev_raster) <- \"elevation\" elev_raster ## class       : SpatRaster  ## dimensions  : 564, 780, 1  (nrow, ncol, nlyr) ## resolution  : 0.008333333, 0.008333333  (x, y) ## extent      : -17.7, -11.2, 12.1, 16.8  (xmin, xmax, ymin, ymax) ## coord. ref. : lon/lat WGS 84 (EPSG:4326)  ## source      : SEN_elv_msk.tif  ## name        : elevation  ## min value   :        -7  ## max value   :       542 slope_raster <- terra::terrain(elev_raster, v = \"slope\", unit=\"degrees\") aspect_raster <- terra::terrain(elev_raster, v = \"aspect\", unit=\"degrees\") p1 <- ggplot()+   tidyterra::geom_spatraster(data = elev_raster) p2 <- ggplot()+   tidyterra::geom_spatraster(data = slope_raster) p3 <- ggplot()+   tidyterra::geom_spatraster(data = aspect_raster) cowplot::plot_grid(p1, p2, p3, nrow=3) topo_spatraster <- c(elev_raster, slope_raster, aspect_raster) fact <- 10 topo_spatraster_agg <- terra::aggregate(topo_spatraster, fact = fact) topo_stars_agg <- stars::st_as_stars(topo_spatraster_agg, as_attributes=TRUE)"},{"path":"https://emf-creaf.github.io/meteoland/articles/examples/interpolation-senegal.html","id":"performing-interpolation","dir":"Articles > Examples","previous_headings":"","what":"Performing interpolation","title":"Daily weather interpolation over Senegal","text":"now ready perform interpolation weather study area. can simply call function interpolate_data() meteoland. restrict interpolation two dates 2020 speed calculations: Warnings raised raster locations (ocean) outside convex hull stations interpolator object. result interpolation raster object class stars: can display maps specific dates variables using:","code":"raster_interpolated <- topo_stars_agg |>   interpolate_data(interpolator_sen, dates = c(as.Date(\"2020-01-01\"), as.Date(\"2020-07-01\")),                     verbose = FALSE) ## Warning: Some points are outside the convex hull of the `interpolator` object. ## ✖ Indexes of outside points are \"1\", \"2\", \"3\", \"79\", \"80\", \"81\", \"157\", \"158\", ##   \"159\", \"235\", \"236\", \"237\", \"313\", \"314\", \"315\", \"391\", \"392\", \"393\", …, ##   \"4381\", and \"4382\" ## Warning: Some/All dates for points 189, 190, 191, 196, 263, 264, 265, 266, 267, 268, ## 269, 270, 271, 272, 273, 274, 275, 330, …, 4121, and 4122 have missing ## precipitation values, assuming clear days when interpolating radiation for ## these days raster_interpolated ## stars object with 3 dimensions and 14 attributes ## attribute(s): ##                              Min.      1st Qu.     Median        Mean ## MeanTemperature       25.65364684  26.23864756  28.345599  28.7768531 ## MinTemperature        17.80178919  18.59377204  22.771621  22.6439269 ## MaxTemperature        30.54605716  31.19507875  32.304597  32.7642672 ## Precipitation          3.21585191   3.52096659   3.978737   4.3363956 ## MeanRelativeHumidity  28.25354806  32.85716167  51.729265  51.1044770 ## MinRelativeHumidity   21.21382417  24.69259011  41.347453  41.6214869 ## MaxRelativeHumidity   44.86207590  52.05561466  74.291399  71.4489409 ## Radiation              2.80195474  15.55513556  16.100066  16.8713725 ## WindSpeed              0.41014585   2.10398623   2.703641   2.8029064 ## WindDirection          0.14994145  47.96274583  59.838221  63.5942582 ## PET                    1.12632050   4.29583587   4.646448   4.8194632 ## elevation              1.31000000  34.45750000  48.660000  54.0612085 ## slope                  0.01792378   0.09556268   0.188352   0.2429773 ## aspect                67.35251383 168.39402989 192.848440 189.9267863 ##                           3rd Qu.       Max. NA's ## MeanTemperature        31.4373275  32.148596 4556 ## MinTemperature         26.7186160  27.303999 4556 ## MaxTemperature         34.4804223  35.541945 4556 ## Precipitation           4.9962097   7.225850 6724 ## MeanRelativeHumidity   68.7716839  74.486197 4556 ## MinRelativeHumidity    58.1442049  65.381005 4556 ## MaxRelativeHumidity    89.7925874  94.773621 4556 ## Radiation              18.5510236  20.952236 4556 ## WindSpeed               3.2935873   5.768750 4556 ## WindDirection          74.5020305 359.999997 6724 ## PET                     5.2584016   7.192732 4556 ## elevation              62.6900000 215.770000 4556 ## slope                   0.3307207   2.613510 4616 ## aspect                213.6666970 287.613543 4616 ## dimension(s): ##      from to     offset    delta refsys point x/y ## x       1 78     -17.66  0.08333 WGS 84 FALSE [x] ## y       1 57      16.76 -0.08333 WGS 84 FALSE [y] ## date    1  2 2020-01-01 182 days   Date FALSE p1 <- ggplot()+       geom_stars(data = raster_interpolated[\"MeanTemperature\",,,1])+       scale_fill_viridis_c()+       labs(title = \"2020-01-01\") p2 <- ggplot()+       geom_stars(data = raster_interpolated[\"MeanTemperature\",,,2])+       scale_fill_viridis_c()+       labs(title = \"2020-07-01\") cowplot::plot_grid(p1, p2, nrow = 2)"},{"path":"https://emf-creaf.github.io/meteoland/articles/reshaping-meteo.html","id":"meteorological-data-format","dir":"Articles","previous_headings":"","what":"Meteorological data format","title":"Reshaping meteorological data for meteoland","text":"interpolation meteorological variables target locations, need meteorological data reference set locations. meteoland sf object spatial coordinates reference locations (usually meteorological stations) daily values meteorological variables needed perform interpolation, .e.: meteoland expects names example: mandatory variables MinTemperature MaxTemperature. variables (Precipitation, WindSpeed…), present, allow complete interpolation.","code":"meteoland_meteo_example #> Simple feature collection with 5652 features and 18 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 0.30565 ymin: 40.55786 xmax: 3.18165 ymax: 42.77011 #> Geodetic CRS:  WGS 84 #> # A tibble: 5,652 × 19 #>    dates               service stationID station_name station_province elevation #>  * <dttm>              <chr>   <chr>     <chr>        <chr>                <dbl> #>  1 2022-04-01 00:00:00 meteoc… C6        Castellnou … Lleida                264  #>  2 2022-04-01 00:00:00 meteoc… C7        Tàrrega      Lleida                427  #>  3 2022-04-01 00:00:00 meteoc… C8        Cervera      Lleida                554  #>  4 2022-04-01 00:00:00 meteoc… C9        Mas de Barb… Tarragona             240  #>  5 2022-04-01 00:00:00 meteoc… CC        Orís         Barcelona             626  #>  6 2022-04-01 00:00:00 meteoc… CD        la Seu d'Ur… Lleida                849  #>  7 2022-04-01 00:00:00 meteoc… CE        els Hostale… Barcelona             316  #>  8 2022-04-01 00:00:00 meteoc… CG        Molló - Fab… Girona               1405  #>  9 2022-04-01 00:00:00 meteoc… CI        Sant Pau de… Girona                852  #> 10 2022-04-01 00:00:00 meteoc… CJ        Organyà      Lleida                566. #> # ℹ 5,642 more rows #> # ℹ 13 more variables: MeanTemperature <dbl>, MinTemperature <dbl>, #> #   MaxTemperature <dbl>, MeanRelativeHumidity <dbl>, #> #   MinRelativeHumidity <dbl>, MaxRelativeHumidity <dbl>, Precipitation <dbl>, #> #   WindDirection <dbl>, WindSpeed <dbl>, Radiation <dbl>, geom <POINT [°]>, #> #   aspect <dbl>, slope <dbl> names(meteoland_meteo_example) #>  [1] \"dates\"                \"service\"              \"stationID\"            #>  [4] \"station_name\"         \"station_province\"     \"elevation\"            #>  [7] \"MeanTemperature\"      \"MinTemperature\"       \"MaxTemperature\"       #> [10] \"MeanRelativeHumidity\" \"MinRelativeHumidity\"  \"MaxRelativeHumidity\"  #> [13] \"Precipitation\"        \"WindDirection\"        \"WindSpeed\"            #> [16] \"Radiation\"            \"geom\"                 \"aspect\"               #> [19] \"slope\""},{"path":"https://emf-creaf.github.io/meteoland/articles/reshaping-meteo.html","id":"converting-meteorological-data-to-meteoland-format","dir":"Articles","previous_headings":"","what":"Converting meteorological data to meteoland format","title":"Reshaping meteorological data for meteoland","text":"Meteorological data can come many formats different names variables. saw , need convert meteoland compliant format (sf object correct names).","code":""},{"path":"https://emf-creaf.github.io/meteoland/articles/reshaping-meteo.html","id":"converting-from-data-frames","dir":"Articles","previous_headings":"Converting meteorological data to meteoland format","what":"Converting from data frames","title":"Reshaping meteorological data for meteoland","text":"meteorological data data.frame (.e. obtained weather stations, download source format) can just simply transform desired format: voilà, meteo data correct format","code":"unformatted_meteo #> # A tibble: 15 × 7 #>    date       station latitude longitude min_temp max_temp    rh #>    <date>     <chr>      <dbl>     <dbl>    <dbl>    <dbl> <dbl> #>  1 2022-12-01 a           41.4     -0.33    1.60      6.01  73.4 #>  2 2022-12-02 a           41.4     -0.33   11.5      20.0   54.4 #>  3 2022-12-03 a           41.4     -0.33   -4.62      5.22  56.1 #>  4 2022-12-04 a           41.4     -0.33    9.97     21.6   90.6 #>  5 2022-12-05 a           41.4     -0.33   13.7      21.0   52.8 #>  6 2022-12-01 b           40.1      0.12   16.9      28.3   46.7 #>  7 2022-12-02 b           40.1      0.12   -0.931    10.2   20   #>  8 2022-12-03 b           40.1      0.12    8.52     14.6   43.0 #>  9 2022-12-04 b           40.1      0.12    8.53     20.7   42.2 #> 10 2022-12-05 b           40.1      0.12    8.30     24.0   76.7 #> 11 2022-12-01 c           42        1.12    6.68     16.4   51.8 #> 12 2022-12-02 c           42        1.12   13.8      21.0   34.0 #> 13 2022-12-03 c           42        1.12   22.4      32.3   48.8 #> 14 2022-12-04 c           42        1.12    0.214     7.73  43.7 #> 15 2022-12-05 c           42        1.12   13.1      18.5   61.1 ready_meteo <- unformatted_meteo |>   # convert names to correct ones   dplyr::mutate(     MinTemperature = min_temp,     MaxTemperature = max_temp,     MeanRelativeHumidity = rh   ) |>   # transform to sf (WGS84)   sf::st_as_sf(     coords = c(\"longitude\", \"latitude\"),     crs = sf::st_crs(4326)   )  ready_meteo #> Simple feature collection with 15 features and 8 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -0.33 ymin: 40.11 xmax: 1.12 ymax: 42 #> Geodetic CRS:  WGS 84 #> # A tibble: 15 × 9 #>    date       station min_temp max_temp    rh MinTemperature MaxTemperature #>  * <date>     <chr>      <dbl>    <dbl> <dbl>          <dbl>          <dbl> #>  1 2022-12-01 a          1.60      6.01  73.4          1.60            6.01 #>  2 2022-12-02 a         11.5      20.0   54.4         11.5            20.0  #>  3 2022-12-03 a         -4.62      5.22  56.1         -4.62            5.22 #>  4 2022-12-04 a          9.97     21.6   90.6          9.97           21.6  #>  5 2022-12-05 a         13.7      21.0   52.8         13.7            21.0  #>  6 2022-12-01 b         16.9      28.3   46.7         16.9            28.3  #>  7 2022-12-02 b         -0.931    10.2   20           -0.931          10.2  #>  8 2022-12-03 b          8.52     14.6   43.0          8.52           14.6  #>  9 2022-12-04 b          8.53     20.7   42.2          8.53           20.7  #> 10 2022-12-05 b          8.30     24.0   76.7          8.30           24.0  #> 11 2022-12-01 c          6.68     16.4   51.8          6.68           16.4  #> 12 2022-12-02 c         13.8      21.0   34.0         13.8            21.0  #> 13 2022-12-03 c         22.4      32.3   48.8         22.4            32.3  #> 14 2022-12-04 c          0.214     7.73  43.7          0.214           7.73 #> 15 2022-12-05 c         13.1      18.5   61.1         13.1            18.5  #> # ℹ 2 more variables: MeanRelativeHumidity <dbl>, geometry <POINT [°]>"},{"path":"https://emf-creaf.github.io/meteoland/articles/reshaping-meteo.html","id":"meteorological-data-from-other-r-packages","dir":"Articles","previous_headings":"Converting meteorological data to meteoland format","what":"Meteorological data from other R packages","title":"Reshaping meteorological data for meteoland","text":"meteoland offers transformation functions meteorological data downloaded meteospain worldmet R packages.","code":""},{"path":"https://emf-creaf.github.io/meteoland/articles/reshaping-meteo.html","id":"meteospain-data","dir":"Articles","previous_headings":"Converting meteorological data to meteoland format > Meteorological data from other R packages","what":"meteospain data","title":"Reshaping meteorological data for meteoland","text":"data coming meteospain package meteospain2meteoland function transforming data us:","code":"library(meteospain) get_meteo_from(   \"meteogalicia\",   meteogalicia_options('daily', as.Date(\"2022-12-01\"), as.Date(\"2022-12-05\")) ) |>   meteospain2meteoland()"},{"path":"https://emf-creaf.github.io/meteoland/articles/reshaping-meteo.html","id":"worldmet-data","dir":"Articles","previous_headings":"Converting meteorological data to meteoland format > Meteorological data from other R packages","what":"worldmet data","title":"Reshaping meteorological data for meteoland","text":"data coming worldmet package worldmet2meteoland function reshaping us:","code":"library(worldmet) worldmet::importNOAA(\"081120-99999\", year = 2022) |>   worldmet2meteoland()"},{"path":"https://emf-creaf.github.io/meteoland/articles/reshaping-meteo.html","id":"meteorological-data-from-raster-sources","dir":"Articles","previous_headings":"Converting meteorological data to meteoland format","what":"Meteorological data from raster sources","title":"Reshaping meteorological data for meteoland","text":"seen, need meteorological reference data sf object (points). able create interpolator raster, need transform cell values points (.e. using cell center coordinates) variable day use create interpolator. multi-layered raster several dates meteorological data: need convert points: now can use build interpolator object:","code":"> Remember that the raster, besides the meteo data, needs to contain also the topographic (elevation, aspect and slope) data for the interpolator to work. raster_meteo_reference #> stars object with 3 dimensions and 14 attributes #> attribute(s): #>                               Min.     1st Qu.     Median       Mean #> MeanTemperature         3.47453413  11.4535839  13.940206  13.471788 #> MinTemperature         -3.27100714   4.3824425   6.969667   5.860040 #> MaxTemperature          7.16265820  14.7798101  18.901768  18.420680 #> Precipitation           0.00000000   0.0000000   0.000000   1.217155 #> MeanRelativeHumidity   35.08268335  56.7720829  64.269391  65.520741 #> MinRelativeHumidity    26.85783275  38.7257795  45.058448  48.591400 #> MaxRelativeHumidity    53.84205927 100.0000000 100.000000  96.878881 #> Radiation               7.54372475  15.9837124  20.690395  19.595816 #> WindSpeed               0.02164994   0.9119314   1.252240   1.385929 #> WindDirection           0.18621266  71.4293342 198.955399 181.615512 #> PET                     1.09027039   2.4105288   3.176816   3.087621 #> elevation             240.00000000 370.0000000 447.000000 460.322314 #> slope                   1.43209624   5.7204332  11.348120  13.073426 #> aspect                  5.19442749  74.7448807 174.369324 181.679232 #>                           3rd Qu.       Max. NA's #> MeanTemperature        16.1442989  20.781408    0 #> MinTemperature          8.2924049  11.071295    0 #> MaxTemperature         22.0316730  28.801911    0 #> Precipitation           0.2922964  21.000409    0 #> MeanRelativeHumidity   75.5124486 100.000000    0 #> MinRelativeHumidity    55.7307897  90.243329    0 #> MaxRelativeHumidity   100.0000000 100.000000    0 #> Radiation              23.7299248  27.982274    0 #> WindSpeed               1.7444530   5.811866   30 #> WindDirection         264.0404014 359.908196 1350 #> PET                     3.7736818   5.625855    0 #> elevation             525.0000000 786.000000    0 #> slope                  19.7585106  31.071896    0 #> aspect                291.0375061 360.000000    0 #> dimension(s): #>      from to         offset    delta  refsys point x/y #> x       1 11          1.671  0.01058  WGS 84 FALSE [x] #> y       1 11          41.76 -0.01058  WGS 84 FALSE [y] #> date    1 30 2022-04-01 UTC   1 days POSIXct FALSE points_meteo_reference <- names(raster_meteo_reference) |>   # for each variable   purrr::map(     # take the variable raster     ~ raster_meteo_reference[.x] |>       # convert to sf       sf::st_as_sf(as_points = TRUE, na.rm = FALSE) |>       # pivot the data for dates to be in one column       tidyr::pivot_longer(cols = -geometry, names_to = \"dates\", values_to = .x) |>       # convert to tibble to fasten the process       dplyr::as_tibble() |>       # convert to date and create stationID       dplyr::mutate(         dates = as.Date(dates),         stationID = as.character(geometry)       )   ) |>   # join all variables   purrr::reduce(dplyr::left_join) |>   # create the points sf object   sf::st_as_sf() #> Joining with `by = join_by(geometry, dates, stationID)` #> Joining with `by = join_by(geometry, dates, stationID)` #> Joining with `by = join_by(geometry, dates, stationID)` #> Joining with `by = join_by(geometry, dates, stationID)` #> Joining with `by = join_by(geometry, dates, stationID)` #> Joining with `by = join_by(geometry, dates, stationID)` #> Joining with `by = join_by(geometry, dates, stationID)` #> Joining with `by = join_by(geometry, dates, stationID)` #> Joining with `by = join_by(geometry, dates, stationID)` #> Joining with `by = join_by(geometry, dates, stationID)` #> Joining with `by = join_by(geometry, dates, stationID)` #> Joining with `by = join_by(geometry, dates, stationID)` #> Joining with `by = join_by(geometry, dates, stationID)`  points_meteo_reference #> Simple feature collection with 3630 features and 16 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 1.6762 ymin: 41.65133 xmax: 1.781988 ymax: 41.75712 #> Geodetic CRS:  WGS 84 #> # A tibble: 3,630 × 17 #>             geometry dates      MeanTemperature stationID         MinTemperature #>          <POINT [°]> <date>               <dbl> <chr>                      <dbl> #>  1 (1.6762 41.75712) 2022-04-01            6.24 c(1.676199866843…          0.541 #>  2 (1.6762 41.75712) 2022-04-02            6.64 c(1.676199866843…         -1.50  #>  3 (1.6762 41.75712) 2022-04-03            4.82 c(1.676199866843…         -3.13  #>  4 (1.6762 41.75712) 2022-04-04            6.53 c(1.676199866843…         -1.59  #>  5 (1.6762 41.75712) 2022-04-05            9.05 c(1.676199866843…         -1.51  #>  6 (1.6762 41.75712) 2022-04-06           11.8  c(1.676199866843…          3.70  #>  7 (1.6762 41.75712) 2022-04-07           14.1  c(1.676199866843…          3.67  #>  8 (1.6762 41.75712) 2022-04-08           15.1  c(1.676199866843…          7.71  #>  9 (1.6762 41.75712) 2022-04-09           13.6  c(1.676199866843…          6.79  #> 10 (1.6762 41.75712) 2022-04-10           11.6  c(1.676199866843…          4.94  #> # ℹ 3,620 more rows #> # ℹ 12 more variables: MaxTemperature <dbl>, Precipitation <dbl>, #> #   MeanRelativeHumidity <dbl>, MinRelativeHumidity <dbl>, #> #   MaxRelativeHumidity <dbl>, Radiation <dbl>, WindSpeed <dbl>, #> #   WindDirection <dbl>, PET <dbl>, elevation <dbl>, slope <dbl>, aspect <dbl> with_meteo(points_meteo_reference) |>   create_meteo_interpolator() #> ℹ Checking meteorology object... #> ✔ meteorology object ok #> ℹ Creating interpolator... #> Warning: No interpolation parameters provided, using defaults #> ℹ Set the `params` argument to modify parameter default values #> • Calculating smoothed variables... #> • Updating intial_Rp parameter with the actual stations mean distance... #> ✔ Interpolator created. #> stars object with 2 dimensions and 13 attributes #> attribute(s): #>                                   Min.     1st Qu.     Median       Mean #> Temperature                 3.47453413  11.4535839  13.940206  13.471788 #> MinTemperature             -3.27100714   4.3824425   6.969667   5.860040 #> MaxTemperature              7.16265820  14.7798101  18.901768  18.420680 #> RelativeHumidity           35.08268335  56.7720829  64.269391  65.520741 #> Precipitation               0.00000000   0.0000000   0.000000   1.217155 #> Radiation                   7.54372475  15.9837124  20.690395  19.595816 #> WindDirection               0.18621266  71.4293342 198.955399 181.615512 #> WindSpeed                   0.02164994   0.9119314   1.252240   1.385929 #> elevation                 240.00000000 370.0000000 447.000000 460.322314 #> aspect                      5.19442749  74.7448807 174.369324 181.679232 #> slope                       1.43209624   5.7204332  11.348120  13.073426 #> SmoothedPrecipitation       0.25336109   1.5179424   3.874980   3.862412 #> SmoothedTemperatureRange    9.41552220  11.8383211  12.587418  12.458785 #>                               3rd Qu.       Max. NA's #> Temperature                16.1442989  20.781408    0 #> MinTemperature              8.2924049  11.071295    0 #> MaxTemperature             22.0316730  28.801911    0 #> RelativeHumidity           75.5124486 100.000000    0 #> Precipitation               0.2922964  21.000409    0 #> Radiation                  23.7299248  27.982274    0 #> WindDirection             264.0404014 359.908196 1350 #> WindSpeed                   1.7444530   5.811866   30 #> elevation                 525.0000000 786.000000    0 #> aspect                    291.0375061 360.000000    0 #> slope                      19.7585106  31.071896    0 #> SmoothedPrecipitation       6.2789283  11.753856  505 #> SmoothedTemperatureRange   13.2623789  15.014616    0 #> dimension(s): #>         from  to     offset  delta refsys point #> date       1  30 2022-04-01 1 days   Date FALSE #> station    1 121         NA     NA WGS 84  TRUE #>                                                        values #> date                                                     NULL #> station POINT (1.6762 41.65133),...,POINT (1.781988 41.75712)"},{"path":"https://emf-creaf.github.io/meteoland/articles/tidy-meteoland.html","id":"a-new-way-of-working-with-meteoland","dir":"Articles","previous_headings":"","what":"A new way of working with meteoland","title":"Tidy meteoland","text":"retirement rgdal, rgeos maptools R packages, complete update meteoland necessary remove hard dependency meteoland sp raster R packages. Starting version 2.0.0 meteoland, hard dependency retired packages well sp raster removed, now sf stars packages internally used working simple features raster data. June 2023, sp raster packages completely removed dependency list. fundamental changes required (meteoland meteorology classes based sp ones), decision improve make meteorological interpolation process simpler taken. vignette, provide insights new ways working meteoland. interested equivalences older newer functions meteoland, please see appendix end vignette.","code":""},{"path":"https://emf-creaf.github.io/meteoland/articles/tidy-meteoland.html","id":"example-datasets","dir":"Articles","previous_headings":"","what":"Example datasets","title":"Tidy meteoland","text":"meteoland now ships new example objects, based sf stars packages. following table describes new data examples:","code":""},{"path":"https://emf-creaf.github.io/meteoland/articles/tidy-meteoland.html","id":"the-new-interpolation-process","dir":"Articles","previous_headings":"","what":"The new interpolation process","title":"Tidy meteoland","text":"interpolation meteorological information requires two kinds information: topographical information target locations interpolate. includes elevation, aspect slope. Elevation mandatory topography variable, interpolation results improve also aspect slope provided mountain areas. reference meteorological information use build interpolator object. information can come meteorological stations area interested , alternatively, can extracted available rasters meteorological variables.","code":""},{"path":"https://emf-creaf.github.io/meteoland/articles/tidy-meteoland.html","id":"topographical-information","dir":"Articles","previous_headings":"The new interpolation process","what":"Topographical information","title":"Tidy meteoland","text":"order interpolate, need locations format meteoland can understand. point locations, sf object including elevation (m..s.l.), slope (degrees) aspect (degrees) variables, : spatially-continuous data (.e. raster), need stars object including elevation (m..s.l.), slope (degrees) aspect (degrees) attributes, : , sf stars R packages necessary functions read spatial formats, thing consider ensuring topographical variables included, proper units mandatory names (elevation, aspect, slope).","code":"points_to_interpolate_example #> Simple feature collection with 15 features and 4 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 0.7578958 ymin: 41.31541 xmax: 2.98657 ymax: 42.6336 #> Geodetic CRS:  WGS 84 #> # A tibble: 15 × 5 #>    plot_id elevation slope aspect             geometry #>    <chr>       <dbl> <dbl>  <dbl>          <POINT [°]> #>  1 P_05284      889. 25.2   313.   (2.320167 42.24139) #>  2 P_06572      680. 18.0    79.9  (2.552233 42.02596) #>  3 P_07201      141.  4.17   52.9  (2.721874 41.88258) #>  4 P_07512      254. 14.3   261.     (2.98657 41.9006) #>  5 P_08207     1860. 36.4   293.   (2.209903 42.33968) #>  6 P_08299      183.  4.12   92.9  (2.817143 42.24325) #>  7 P_09341      819  23.4   128.   (1.126766 42.42612) #>  8 P_10272      860  34.8   347.   (1.398528 42.26791) #>  9 P_10861      706  22.4    22.6 (0.9314126 42.04226) #> 10 P_11651      585  22.0   199.   (0.7578958 41.8612) #> 11 P_12150      674. 30.3   154.   (1.481719 41.81838) #> 12 P_12227      752.  6.04   27.7    (1.283161 41.591) #> 13 P_12417      702  11.6    63.1 (0.8727224 41.35875) #> 14 P_13007      972.  4.21  338.    (1.120383 42.6336) #> 15 P_14029      556. 14.1    41.4  (1.480716 41.31541) raster_to_interpolate_example #> stars object with 2 dimensions and 3 attributes #> attribute(s): #>                  Min.    1st Qu.    Median      Mean   3rd Qu.     Max. #> elevation  240.000000 370.000000 447.00000 460.32231 525.00000 786.0000 #> slope        1.432096   5.720433  11.34812  13.07343  19.75851  31.0719 #> aspect       5.194427  74.744881 174.36932 181.67923 291.03751 360.0000 #> dimension(s): #>   from  to  offset    delta refsys x/y #> x  155 165 0.03648  0.01058 WGS 84 [x] #> y  110 120   42.92 -0.01058 WGS 84 [y]"},{"path":"https://emf-creaf.github.io/meteoland/articles/tidy-meteoland.html","id":"meteorological-information","dir":"Articles","previous_headings":"The new interpolation process","what":"Meteorological information","title":"Tidy meteoland","text":"interpolating meteorological variables locations (see ), need reference meteorological data. sf object reference locations, daily values weather variables needed perform interpolation, example: meteoland expects variable names indicated example: mandatory variables MinTemperature MaxTemperature. variables (Precipitation, WindSpeed…), present, allow complete weather interpolation. information preparing meteorological data meteoland, see vignette(\"reshaping-meteo\", package = \"meteoland\")","code":"meteoland_meteo_example #> Simple feature collection with 5652 features and 18 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 0.30565 ymin: 40.55786 xmax: 3.18165 ymax: 42.77011 #> Geodetic CRS:  WGS 84 #> # A tibble: 5,652 × 19 #>    dates               service stationID station_name station_province elevation #>  * <dttm>              <chr>   <chr>     <chr>        <chr>                <dbl> #>  1 2022-04-01 00:00:00 meteoc… C6        Castellnou … Lleida                264  #>  2 2022-04-01 00:00:00 meteoc… C7        Tàrrega      Lleida                427  #>  3 2022-04-01 00:00:00 meteoc… C8        Cervera      Lleida                554  #>  4 2022-04-01 00:00:00 meteoc… C9        Mas de Barb… Tarragona             240  #>  5 2022-04-01 00:00:00 meteoc… CC        Orís         Barcelona             626  #>  6 2022-04-01 00:00:00 meteoc… CD        la Seu d'Ur… Lleida                849  #>  7 2022-04-01 00:00:00 meteoc… CE        els Hostale… Barcelona             316  #>  8 2022-04-01 00:00:00 meteoc… CG        Molló - Fab… Girona               1405  #>  9 2022-04-01 00:00:00 meteoc… CI        Sant Pau de… Girona                852  #> 10 2022-04-01 00:00:00 meteoc… CJ        Organyà      Lleida                566. #> # ℹ 5,642 more rows #> # ℹ 13 more variables: MeanTemperature <dbl>, MinTemperature <dbl>, #> #   MaxTemperature <dbl>, MeanRelativeHumidity <dbl>, #> #   MinRelativeHumidity <dbl>, MaxRelativeHumidity <dbl>, Precipitation <dbl>, #> #   WindDirection <dbl>, WindSpeed <dbl>, Radiation <dbl>, geom <POINT [°]>, #> #   aspect <dbl>, slope <dbl> names(meteoland_meteo_example) #>  [1] \"dates\"                \"service\"              \"stationID\"            #>  [4] \"station_name\"         \"station_province\"     \"elevation\"            #>  [7] \"MeanTemperature\"      \"MinTemperature\"       \"MaxTemperature\"       #> [10] \"MeanRelativeHumidity\" \"MinRelativeHumidity\"  \"MaxRelativeHumidity\"  #> [13] \"Precipitation\"        \"WindDirection\"        \"WindSpeed\"            #> [16] \"Radiation\"            \"geom\"                 \"aspect\"               #> [19] \"slope\""},{"path":"https://emf-creaf.github.io/meteoland/articles/tidy-meteoland.html","id":"quick-interpolation-if-everything-is-ok","dir":"Articles","previous_headings":"The new interpolation process","what":"Quick interpolation (if everything is ok)","title":"Tidy meteoland","text":"necessary data correct format can perform interpolation right away: Let’s see step step. with_meteo(...) ensures provided meteorological information correct format using meteoland. performs several checks informs error found. example, meteorological information doesn’t mandatory variables, informative error shown: create_meteo_interpolator(...) creates interpolator object meteorological information. object stores meteorological information, also parameters used interpolation process. parameters can supplied list params argument create_meteo_interpolator() function. supplied, default set parameters used. point, can display interpolation parameters using get_interpolation_params(): interpolate_data(...) performs interpolation using topography provided interpolator object. topographical information sf object, example , interpolate_data returns sf object additional column called interpolated_data: can “unnest” results get data long format (combination location date different row):","code":"# creating the interpolator object interpolator <- with_meteo(meteoland_meteo_example) |>   create_meteo_interpolator() #> ℹ Checking meteorology object... #> ✔ meteorology object ok #> ℹ Creating interpolator... #> Warning: No interpolation parameters provided, using defaults #> ℹ Set the `params` argument to modify parameter default values #> • Calculating smoothed variables... #> • Updating intial_Rp parameter with the actual stations mean distance... #> ✔ Interpolator created.  # performing the interpolation points_interpolated <- points_to_interpolate_example |>   interpolate_data(interpolator) #> ℹ Starting interpolation... #> ℹ Temperature interpolation is needed also... #> • Interpolating temperature... #> ℹ Precipitation interpolation is needed also... #> • Interpolating precipitation... #> ℹ Relative humidity interpolation is needed also... #> • Interpolating relative humidity... #> ℹ Radiation calculation is needed also... #> • Calculating radiation... #> ℹ Wind interpolation is needed also... #> • Interpolating wind... #> • Calculating PET... #> ✔ Interpolation done... points_interpolated #> Simple feature collection with 15 features and 5 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 0.7578958 ymin: 41.31541 xmax: 2.98657 ymax: 42.6336 #> Geodetic CRS:  WGS 84 #> # A tibble: 15 × 6 #>    plot_id elevation slope aspect             geometry interpolated_data  #>    <chr>       <dbl> <dbl>  <dbl>          <POINT [°]> <list>             #>  1 P_05284      889. 25.2   313.   (2.320167 42.24139) <tibble [30 × 13]> #>  2 P_06572      680. 18.0    79.9  (2.552233 42.02596) <tibble [30 × 13]> #>  3 P_07201      141.  4.17   52.9  (2.721874 41.88258) <tibble [30 × 13]> #>  4 P_07512      254. 14.3   261.     (2.98657 41.9006) <tibble [30 × 13]> #>  5 P_08207     1860. 36.4   293.   (2.209903 42.33968) <tibble [30 × 13]> #>  6 P_08299      183.  4.12   92.9  (2.817143 42.24325) <tibble [30 × 13]> #>  7 P_09341      819  23.4   128.   (1.126766 42.42612) <tibble [30 × 13]> #>  8 P_10272      860  34.8   347.   (1.398528 42.26791) <tibble [30 × 13]> #>  9 P_10861      706  22.4    22.6 (0.9314126 42.04226) <tibble [30 × 13]> #> 10 P_11651      585  22.0   199.   (0.7578958 41.8612) <tibble [30 × 13]> #> 11 P_12150      674. 30.3   154.   (1.481719 41.81838) <tibble [30 × 13]> #> 12 P_12227      752.  6.04   27.7    (1.283161 41.591) <tibble [30 × 13]> #> 13 P_12417      702  11.6    63.1 (0.8727224 41.35875) <tibble [30 × 13]> #> 14 P_13007      972.  4.21  338.    (1.120383 42.6336) <tibble [30 × 13]> #> 15 P_14029      556. 14.1    41.4  (1.480716 41.31541) <tibble [30 × 13]> meteo_without_temp <- meteoland_meteo_example meteo_without_temp[[\"MinTemperature\"]] <- NULL meteo_without_temp[[\"MaxTemperature\"]] <- NULL with_meteo(meteo_without_temp) #> ℹ Checking meteorology object... #> Error: Names found in meteo don't comply with the required names: #> meteo should have the following meteorology variables: #>   - MinTemperature *** #>   - MaxTemperature *** #>   - Precipitation #>   - RelativeHumidity #>   - Radiation #>   - WindSpeed #>   - WindDirection #>  #>  ***: mandatory variables # parameters get_interpolation_params(interpolator) #> $initial_Rp #> [1] 1.136444 #>  #> $iterations #> [1] 3 #>  #> $alpha_MinTemperature #> [1] 3 #>  #> $alpha_MaxTemperature #> [1] 3 #>  #> $alpha_DewTemperature #> [1] 3 #>  #> $alpha_PrecipitationEvent #> [1] 5 #>  #> $alpha_PrecipitationAmount #> [1] 5 #>  #> $alpha_Wind #> [1] 3 #>  #> $N_MinTemperature #> [1] 30 #>  #> $N_MaxTemperature #> [1] 30 #>  #> $N_DewTemperature #> [1] 30 #>  #> $N_PrecipitationEvent #> [1] 5 #>  #> $N_PrecipitationAmount #> [1] 20 #>  #> $N_Wind #> [1] 2 #>  #> $St_Precipitation #> [1] 5 #>  #> $St_TemperatureRange #> [1] 15 #>  #> $pop_crit #> [1] 0.5 #>  #> $f_max #> [1] 0.6 #>  #> $wind_height #> [1] 10 #>  #> $wind_roughness_height #> [1] 0.001 #>  #> $penman_albedo #> [1] 0.25 #>  #> $penman_windfun #> [1] \"1956\" #>  #> $debug #> [1] FALSE # interpolated meteo for the first location points_interpolated[[\"interpolated_data\"]][1] #> [[1]] #> # A tibble: 30 × 13 #>    dates                 DOY MeanTemperature MinTemperature MaxTemperature #>    <dttm>              <dbl>           <dbl>          <dbl>          <dbl> #>  1 2022-04-01 00:00:00    91            3.24          -2.53           6.99 #>  2 2022-04-02 00:00:00    92            2.99          -4.20           7.67 #>  3 2022-04-03 00:00:00    93            2.39          -5.61           7.59 #>  4 2022-04-04 00:00:00    94            4.02          -3.93           9.20 #>  5 2022-04-05 00:00:00    95            7.38          -3.29          14.3  #>  6 2022-04-06 00:00:00    96            8.78           1.31          13.6  #>  7 2022-04-07 00:00:00    97           12.1            2.44          18.4  #>  8 2022-04-08 00:00:00    98           12.9            3.32          19.1  #>  9 2022-04-09 00:00:00    99           10.0            3.83          14.1  #> 10 2022-04-10 00:00:00   100           11.4            4.85          15.6  #> # ℹ 20 more rows #> # ℹ 8 more variables: Precipitation <dbl>, MeanRelativeHumidity <dbl>, #> #   MinRelativeHumidity <dbl>, MaxRelativeHumidity <dbl>, Radiation <dbl>, #> #   WindSpeed <dbl>, WindDirection <dbl>, PET <dbl> tidyr::unnest(points_interpolated, cols = \"interpolated_data\") #> Simple feature collection with 450 features and 17 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 0.7578958 ymin: 41.31541 xmax: 2.98657 ymax: 42.6336 #> Geodetic CRS:  WGS 84 #> # A tibble: 450 × 18 #>    plot_id elevation slope aspect            geometry dates               #>    <chr>       <dbl> <dbl>  <dbl>         <POINT [°]> <dttm>              #>  1 P_05284      889.  25.2   313. (2.320167 42.24139) 2022-04-01 00:00:00 #>  2 P_05284      889.  25.2   313. (2.320167 42.24139) 2022-04-02 00:00:00 #>  3 P_05284      889.  25.2   313. (2.320167 42.24139) 2022-04-03 00:00:00 #>  4 P_05284      889.  25.2   313. (2.320167 42.24139) 2022-04-04 00:00:00 #>  5 P_05284      889.  25.2   313. (2.320167 42.24139) 2022-04-05 00:00:00 #>  6 P_05284      889.  25.2   313. (2.320167 42.24139) 2022-04-06 00:00:00 #>  7 P_05284      889.  25.2   313. (2.320167 42.24139) 2022-04-07 00:00:00 #>  8 P_05284      889.  25.2   313. (2.320167 42.24139) 2022-04-08 00:00:00 #>  9 P_05284      889.  25.2   313. (2.320167 42.24139) 2022-04-09 00:00:00 #> 10 P_05284      889.  25.2   313. (2.320167 42.24139) 2022-04-10 00:00:00 #> # ℹ 440 more rows #> # ℹ 12 more variables: DOY <dbl>, MeanTemperature <dbl>, MinTemperature <dbl>, #> #   MaxTemperature <dbl>, Precipitation <dbl>, MeanRelativeHumidity <dbl>, #> #   MinRelativeHumidity <dbl>, MaxRelativeHumidity <dbl>, Radiation <dbl>, #> #   WindSpeed <dbl>, WindDirection <dbl>, PET <dbl>"},{"path":"https://emf-creaf.github.io/meteoland/articles/tidy-meteoland.html","id":"interpolator-object","dir":"Articles","previous_headings":"","what":"Interpolator object","title":"Tidy meteoland","text":"older versions meteoland, interpolator object inherited MeteorologyInterpolationData class (based sp classes). Starting meteoland v2.0.0, MeteorologyInterpolationData class deprecated, interpolator object created create_meteo_interpolator() inherits directly stars class. object data cube, reference weather locations dates dimensions, meteorological topographical variables attributes. object also contains interpolation parameters attribute, can accessed get_interpolation_params(). Interpolation parameters can also changed set_interpolation_params().","code":"class(interpolator) #> [1] \"stars\" interpolator #> stars object with 2 dimensions and 13 attributes #> attribute(s): #>                                 Min.    1st Qu.    Median       Mean   3rd Qu. #> Temperature               -14.200000   8.800000  12.60000  11.324991  14.80000 #> MinTemperature            -15.900000   3.300000   6.90000   5.883189   9.40000 #> MaxTemperature            -13.000000  13.900000  18.30000  17.364292  21.80000 #> RelativeHumidity           18.000000  57.000000  67.00000  67.720000  78.00000 #> Precipitation               0.000000   0.000000   0.00000   1.925434   0.10000 #> Radiation                   7.707484  17.717235  22.04597  20.762628  23.61352 #> WindDirection               0.000000 116.000000 217.00000 196.861908 275.00000 #> WindSpeed                   0.200000   0.900000   1.30000   1.603907   2.00000 #> elevation                   0.000000 147.000000 317.00000 515.629630 668.00000 #> aspect                      0.000000   0.000000   0.00000   0.000000   0.00000 #> slope                       0.000000   0.000000   0.00000   0.000000   0.00000 #> SmoothedPrecipitation       0.100000   1.862500   5.55000   6.197496   9.07500 #> SmoothedTemperatureRange    4.695000   9.863542  11.66307  11.400932  13.26868 #>                                 Max. NA's #> Temperature                 23.40000  148 #> MinTemperature              20.10000  138 #> MaxTemperature              29.90000  139 #> RelativeHumidity           100.00000  145 #> Precipitation              160.90000   79 #> Radiation                   28.10878  139 #> WindDirection              359.00000 4171 #> WindSpeed                    6.90000 4160 #> elevation                 2535.00000    0 #> aspect                       0.00000    0 #> slope                        0.00000    0 #> SmoothedPrecipitation       65.10000  818 #> SmoothedTemperatureRange    17.72778  124 #> dimension(s): #>         from  to         offset  delta  refsys point #> date       1  30 2022-04-01 UTC 1 days POSIXct FALSE #> station    1 189             NA     NA  WGS 84  TRUE #>                                                       values #> date                                                    NULL #> station POINT (0.95172 41.6566),...,POINT (1.89716 42.32211) get_interpolation_params(interpolator) #> $initial_Rp #> [1] 1.136444 #>  #> $iterations #> [1] 3 #>  #> $alpha_MinTemperature #> [1] 3 #>  #> $alpha_MaxTemperature #> [1] 3 #>  #> $alpha_DewTemperature #> [1] 3 #>  #> $alpha_PrecipitationEvent #> [1] 5 #>  #> $alpha_PrecipitationAmount #> [1] 5 #>  #> $alpha_Wind #> [1] 3 #>  #> $N_MinTemperature #> [1] 30 #>  #> $N_MaxTemperature #> [1] 30 #>  #> $N_DewTemperature #> [1] 30 #>  #> $N_PrecipitationEvent #> [1] 5 #>  #> $N_PrecipitationAmount #> [1] 20 #>  #> $N_Wind #> [1] 2 #>  #> $St_Precipitation #> [1] 5 #>  #> $St_TemperatureRange #> [1] 15 #>  #> $pop_crit #> [1] 0.5 #>  #> $f_max #> [1] 0.6 #>  #> $wind_height #> [1] 10 #>  #> $wind_roughness_height #> [1] 0.001 #>  #> $penman_albedo #> [1] 0.25 #>  #> $penman_windfun #> [1] \"1956\" #>  #> $debug #> [1] FALSE # wind_height parameter get_interpolation_params(interpolator)$wind_height #> [1] 10  # set a new wind_height parameter and check interpolator <- set_interpolation_params(interpolator, params = list(wind_height = 5)) #> ℹ Some interpolation parameters are missing, using default values for those get_interpolation_params(interpolator)$wind_height #> [1] 5"},{"path":"https://emf-creaf.github.io/meteoland/articles/tidy-meteoland.html","id":"writing-and-reading-interpolator-objects","dir":"Articles","previous_headings":"Interpolator object","what":"Writing and reading interpolator objects","title":"Tidy meteoland","text":"Interpolator objects can reused different interpolations exercises within area covered interpolator. allow interpolator objects shared sessions, meteoland offers functions write read objects. interpolator saved NetCDF-CF format (https://cfconventions.org/cf-conventions/cf-conventions.html) can also opened GIS software supports NetCDF-CF. load interpolator session , can use read_interpolator() function.","code":"temporal_folder <- tempdir() write_interpolator(interpolator, file.path(temporal_folder, \"interpolator.nc\")) #> ℹ Creating nc file following the NetCDF-CF conventions <https://cfconventions.org/cf-conventions/cf-conventions.html> #> ℹ Adding spatial info to nc file #> ✔ Done # file should exists now file.exists(file.path(temporal_folder, \"interpolator.nc\")) #> [1] TRUE file_interpolator <- read_interpolator(file.path(temporal_folder, \"interpolator.nc\")) # the read interpolator should be identical to the one we have already identical(file_interpolator, interpolator) #> [1] TRUE"},{"path":"https://emf-creaf.github.io/meteoland/articles/tidy-meteoland.html","id":"interpolator-calibration","dir":"Articles","previous_headings":"Interpolator object","what":"Interpolator calibration","title":"Tidy meteoland","text":"Interpolation parameters can calibrated individual variables performing interpolation process. fact, ’s recommended calibrate interpolator object using , default interpolation parameters can adequate studied area. meteoland offers calibration process interpolator_calibration() function. One advantage new data flows meteoland can pipe creation calibration interpolator, well writing: way can create calibrate interpolator , using future sessions, avoiding time consuming step calibrating every time.","code":"**Important!** Calibration process for one variable can take a long time to finish, as it performs a *leave-one-out* interpolation for all stations present in the interpolator and all combinations of N and alpha sequences provided. In this example we reduce the N and alpha test values for the process to be faster, but is recommended to explore a wider range of these values. # min temperature N and alpha before calibration get_interpolation_params(interpolator)$N_MinTemperature #> [1] 30 get_interpolation_params(interpolator)$alpha_MinTemperature #> [1] 3  # calibration interpolator <- interpolator_calibration(   interpolator,   variable = \"MinTemperature\",   N_seq = c(5, 20),   alpha_seq = c(1, 10),   update_interpolation_params = TRUE ) #> ℹ Total number of stations: 189 #> ℹ Number of stations with available data: 185 #> ℹ Number of stations used for MAE calculation: 185 #> ℹ Number of parameters combinations to test: 4 #> ℹ Starting evaluation of parameter combinations for \"MinTemperature\"... #> • Evaluating N: 5, alpha: 1... #> • Evaluating N: 5, alpha: 10... #> • Evaluating N: 20, alpha: 1... #> • Evaluating N: 20, alpha: 10... #> ✔ Calibration done: Minimum MAE: 1.18956628899488; N: 20; alpha: 10  # parameters after calibration get_interpolation_params(interpolator)$N_MinTemperature #> [1] 20 get_interpolation_params(interpolator)$alpha_MinTemperature #> [1] 10 interpolator <- with_meteo(meteoland_meteo_example) |>   create_meteo_interpolator() |>   interpolator_calibration(     variable = \"MinTemperature\",     N_seq = c(5, 20),     alpha_seq = c(1, 10),     update_interpolation_params = TRUE   ) |>   interpolator_calibration(     variable = \"MaxTemperature\",     N_seq = c(5, 20),     alpha_seq = c(1, 10),     update_interpolation_params = TRUE   ) |>   interpolator_calibration(     variable = \"DewTemperature\",     N_seq = c(5, 20),     alpha_seq = c(1, 10),     update_interpolation_params = TRUE   ) |>   write_interpolator(     filename = file.path(temporal_folder, \"interpolator.nc\"),     .overwrite = TRUE   ) #> ℹ Checking meteorology object... #> ✔ meteorology object ok #> ℹ Creating interpolator... #> Warning: No interpolation parameters provided, using defaults #> ℹ Set the `params` argument to modify parameter default values #> • Calculating smoothed variables... #> • Updating intial_Rp parameter with the actual stations mean distance... #> ✔ Interpolator created. #> ℹ Total number of stations: 189 #> ℹ Number of stations with available data: 185 #> ℹ Number of stations used for MAE calculation: 185 #> ℹ Number of parameters combinations to test: 4 #> ℹ Starting evaluation of parameter combinations for \"MinTemperature\"... #> • Evaluating N: 5, alpha: 1... #> • Evaluating N: 5, alpha: 10... #> • Evaluating N: 20, alpha: 1... #> • Evaluating N: 20, alpha: 10... #> ✔ Calibration done: Minimum MAE: 1.18956628899488; N: 20; alpha: 10 #> ℹ Total number of stations: 189 #> ℹ Number of stations with available data: 185 #> ℹ Number of stations used for MAE calculation: 185 #> ℹ Number of parameters combinations to test: 4 #> ℹ Starting evaluation of parameter combinations for \"MaxTemperature\"... #> • Evaluating N: 5, alpha: 1... #> • Evaluating N: 5, alpha: 10... #> • Evaluating N: 20, alpha: 1... #> • Evaluating N: 20, alpha: 10... #> ✔ Calibration done: Minimum MAE: 0.849019890784243; N: 20; alpha: 10 #> ℹ Total number of stations: 189 #> ℹ Number of stations with available data: 185 #> ℹ Number of stations used for MAE calculation: 185 #> ℹ Number of parameters combinations to test: 4 #> ℹ Starting evaluation of parameter combinations for \"DewTemperature\"... #> • Evaluating N: 5, alpha: 1... #> • Evaluating N: 5, alpha: 10... #> • Evaluating N: 20, alpha: 1... #> • Evaluating N: 20, alpha: 10... #> ✔ Calibration done: Minimum MAE: 1.37971537117584; N: 20; alpha: 10 #> ℹ Creating nc file following the NetCDF-CF conventions <https://cfconventions.org/cf-conventions/cf-conventions.html> #> ℹ Adding spatial info to nc file #> ✔ Done"},{"path":"https://emf-creaf.github.io/meteoland/articles/tidy-meteoland.html","id":"interpolation-validation","dir":"Articles","previous_headings":"","what":"Interpolation validation","title":"Tidy meteoland","text":"interpolation process can cross validated. meteoland offers possibility interpolation_cross_validation() function. function takes interpolator object calculates different error measures.","code":"cross_validation <- interpolation_cross_validation(interpolator, verbose = FALSE) cross_validation$errors #> # A tibble: 5,670 × 21 #>    dates               station stationID MinTemperature_error #>    <dttm>                <int> <chr>                    <dbl> #>  1 2022-04-01 00:00:00       1 C6                      0.125  #>  2 2022-04-02 00:00:00       1 C6                      0.0598 #>  3 2022-04-03 00:00:00       1 C6                      0.145  #>  4 2022-04-04 00:00:00       1 C6                     -0.306  #>  5 2022-04-05 00:00:00       1 C6                     -0.0977 #>  6 2022-04-06 00:00:00       1 C6                     -0.248  #>  7 2022-04-07 00:00:00       1 C6                     -0.457  #>  8 2022-04-08 00:00:00       1 C6                      1.24   #>  9 2022-04-09 00:00:00       1 C6                     -0.546  #> 10 2022-04-10 00:00:00       1 C6                      0.601  #> # ℹ 5,660 more rows #> # ℹ 17 more variables: MaxTemperature_error <dbl>, #> #   RangeTemperature_error <dbl>, RelativeHumidity_error <dbl>, #> #   Radiation_error <dbl>, Precipitation_error <dbl>, #> #   MinTemperature_predicted <dbl>, MaxTemperature_predicted <dbl>, #> #   RangeTemperature_predicted <dbl>, RelativeHumidity_predicted <dbl>, #> #   Radiation_predicted <dbl>, Precipitation_predicted <dbl>, … cross_validation$station_stats #> # A tibble: 189 × 20 #>    station stationID MinTemperature_station_bias MaxTemperature_station_bias #>      <int> <chr>                           <dbl>                       <dbl> #>  1       1 C6                            -0.109                     -0.606   #>  2       2 C7                            -1.03                      -0.582   #>  3       3 C8                             0.0180                     0.0356  #>  4       4 C9                            -0.316                      0.657   #>  5       5 CC                            -0.0373                    -0.483   #>  6       6 CD                             0.508                     -1.03    #>  7       7 CE                            -1.62                      -0.779   #>  8       8 CG                            -1.51                      -0.379   #>  9       9 CI                             0.888                      0.509   #> 10      10 CJ                             0.572                      0.00525 #> # ℹ 179 more rows #> # ℹ 16 more variables: RangeTemperature_station_bias <dbl>, #> #   RelativeHumidity_station_bias <dbl>, Radiation_station_bias <dbl>, #> #   MinTemperature_station_mae <dbl>, MaxTemperature_station_mae <dbl>, #> #   RangeTemperature_station_mae <dbl>, RelativeHumidity_station_mae <dbl>, #> #   Radiation_station_mae <dbl>, TotalPrecipitation_station_observed <dbl>, #> #   TotalPrecipitation_station_predicted <dbl>, … cross_validation$dates_stats #> # A tibble: 30 × 19 #>    dates               MinTemperature_date_bias MaxTemperature_date_bias #>    <dttm>                                 <dbl>                    <dbl> #>  1 2022-04-01 00:00:00                   0.0125                   0.0405 #>  2 2022-04-02 00:00:00                   0.0329                   0.0972 #>  3 2022-04-03 00:00:00                  -0.116                    0.0325 #>  4 2022-04-04 00:00:00                  -0.142                    0.0400 #>  5 2022-04-05 00:00:00                  -0.185                    0.0786 #>  6 2022-04-06 00:00:00                  -0.0303                   0.0688 #>  7 2022-04-07 00:00:00                  -0.156                    0.107  #>  8 2022-04-08 00:00:00                  -0.0582                   0.0600 #>  9 2022-04-09 00:00:00                   0.0801                   0.0474 #> 10 2022-04-10 00:00:00                  -0.101                    0.0761 #> # ℹ 20 more rows #> # ℹ 16 more variables: RangeTemperature_date_bias <dbl>, #> #   RelativeHumidity_date_bias <dbl>, Radiation_date_bias <dbl>, #> #   MinTemperature_date_mae <dbl>, MaxTemperature_date_mae <dbl>, #> #   RangeTemperature_date_mae <dbl>, RelativeHumidity_date_mae <dbl>, #> #   Radiation_date_mae <dbl>, TotalPrecipitation_date_observed <dbl>, #> #   TotalPrecipitation_date_predicted <dbl>, … cross_validation$r2 #> $MinTemperature #> [1] 0.9388959 #>  #> $MaxTemperature #> [1] 0.9788855 #>  #> $RangeTemperature #> [1] 0.8835377 #>  #> $RelativeHumidity #> [1] 0.8096727 #>  #> $Radiation #> [1] 0.8911309"},{"path":"https://emf-creaf.github.io/meteoland/articles/tidy-meteoland.html","id":"interpolation-utils","dir":"Articles","previous_headings":"","what":"Interpolation utils","title":"Tidy meteoland","text":"meteoland also offers utilities work interpolated data.","code":""},{"path":"https://emf-creaf.github.io/meteoland/articles/tidy-meteoland.html","id":"temporal-summary-of-interpolated-data","dir":"Articles","previous_headings":"Interpolation utils","what":"Temporal summary of interpolated data","title":"Tidy meteoland","text":"meteoland works daily scale. sometimes data needs aggregated bigger temporal scales (monthly, quarterly, yearly…). can done summarise_interpolated_data() function. function takes result interpolate_data creates summaries desired frequency. function returns interpolated data given input, weekly summary additional column.","code":"summarise_interpolated_data(   points_interpolated,   fun = \"mean\",   frequency = \"week\" ) #> Simple feature collection with 15 features and 6 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 0.7578958 ymin: 41.31541 xmax: 2.98657 ymax: 42.6336 #> Geodetic CRS:  WGS 84 #> # A tibble: 15 × 7 #>    plot_id elevation slope aspect             geometry interpolated_data  #>  * <chr>       <dbl> <dbl>  <dbl>          <POINT [°]> <list>             #>  1 P_05284      889. 25.2   313.   (2.320167 42.24139) <tibble [30 × 13]> #>  2 P_06572      680. 18.0    79.9  (2.552233 42.02596) <tibble [30 × 13]> #>  3 P_07201      141.  4.17   52.9  (2.721874 41.88258) <tibble [30 × 13]> #>  4 P_07512      254. 14.3   261.     (2.98657 41.9006) <tibble [30 × 13]> #>  5 P_08207     1860. 36.4   293.   (2.209903 42.33968) <tibble [30 × 13]> #>  6 P_08299      183.  4.12   92.9  (2.817143 42.24325) <tibble [30 × 13]> #>  7 P_09341      819  23.4   128.   (1.126766 42.42612) <tibble [30 × 13]> #>  8 P_10272      860  34.8   347.   (1.398528 42.26791) <tibble [30 × 13]> #>  9 P_10861      706  22.4    22.6 (0.9314126 42.04226) <tibble [30 × 13]> #> 10 P_11651      585  22.0   199.   (0.7578958 41.8612) <tibble [30 × 13]> #> 11 P_12150      674. 30.3   154.   (1.481719 41.81838) <tibble [30 × 13]> #> 12 P_12227      752.  6.04   27.7    (1.283161 41.591) <tibble [30 × 13]> #> 13 P_12417      702  11.6    63.1 (0.8727224 41.35875) <tibble [30 × 13]> #> 14 P_13007      972.  4.21  338.    (1.120383 42.6336) <tibble [30 × 13]> #> 15 P_14029      556. 14.1    41.4  (1.480716 41.31541) <tibble [30 × 13]> #> # ℹ 1 more variable: weekly_mean <list>"},{"path":"https://emf-creaf.github.io/meteoland/articles/tidy-meteoland.html","id":"calculating-rainfall-erosivity","dir":"Articles","previous_headings":"Interpolation utils","what":"Calculating rainfall erosivity","title":"Tidy meteoland","text":"meteoland also offers possibility calculating rainfall erosivity value, precipitation_rainfall_erosivity() function. can used individual locations: also locations results obtained call interpolate_data():","code":"precipitation_rainfall_erosivity(   points_interpolated$interpolated_data[[1]],   longitude = sf::st_coordinates(points_interpolated$geometry[[1]])[,1],   scale = 'month' ) #>        4  #> 48.02896 points_interpolated |>   mutate(erosivity = precipitation_rainfall_erosivity(     interpolated_data,     longitude = sf::st_coordinates(geometry)[,1],     scale = 'month'   )) #> Simple feature collection with 15 features and 6 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 0.7578958 ymin: 41.31541 xmax: 2.98657 ymax: 42.6336 #> Geodetic CRS:  WGS 84 #> # A tibble: 15 × 7 #>    plot_id elevation slope aspect             geometry interpolated_data  #>  * <chr>       <dbl> <dbl>  <dbl>          <POINT [°]> <list>             #>  1 P_05284      889. 25.2   313.   (2.320167 42.24139) <tibble [30 × 13]> #>  2 P_06572      680. 18.0    79.9  (2.552233 42.02596) <tibble [30 × 13]> #>  3 P_07201      141.  4.17   52.9  (2.721874 41.88258) <tibble [30 × 13]> #>  4 P_07512      254. 14.3   261.     (2.98657 41.9006) <tibble [30 × 13]> #>  5 P_08207     1860. 36.4   293.   (2.209903 42.33968) <tibble [30 × 13]> #>  6 P_08299      183.  4.12   92.9  (2.817143 42.24325) <tibble [30 × 13]> #>  7 P_09341      819  23.4   128.   (1.126766 42.42612) <tibble [30 × 13]> #>  8 P_10272      860  34.8   347.   (1.398528 42.26791) <tibble [30 × 13]> #>  9 P_10861      706  22.4    22.6 (0.9314126 42.04226) <tibble [30 × 13]> #> 10 P_11651      585  22.0   199.   (0.7578958 41.8612) <tibble [30 × 13]> #> 11 P_12150      674. 30.3   154.   (1.481719 41.81838) <tibble [30 × 13]> #> 12 P_12227      752.  6.04   27.7    (1.283161 41.591) <tibble [30 × 13]> #> 13 P_12417      702  11.6    63.1 (0.8727224 41.35875) <tibble [30 × 13]> #> 14 P_13007      972.  4.21  338.    (1.120383 42.6336) <tibble [30 × 13]> #> 15 P_14029      556. 14.1    41.4  (1.480716 41.31541) <tibble [30 × 13]> #> # ℹ 1 more variable: erosivity <list>"},{"path":"https://emf-creaf.github.io/meteoland/articles/tidy-meteoland.html","id":"piping-all-together","dir":"Articles","previous_headings":"Interpolation utils","what":"Piping all together","title":"Tidy meteoland","text":"meteoland new data flows also allows piping processes:","code":"points_interpolated <- points_to_interpolate_example |>   interpolate_data(interpolator) |>   summarise_interpolated_data(     fun = \"mean\",     frequency = \"week\"   ) |>   summarise_interpolated_data(     fun = \"max\",     frequency = \"month\"   ) |>   mutate(     monthly_erosivity = precipitation_rainfall_erosivity(       interpolated_data,       longitude = sf::st_coordinates(geometry)[,1],       scale = 'month'     )   ) #> ℹ Starting interpolation... #> ℹ Temperature interpolation is needed also... #> • Interpolating temperature... #> ℹ Precipitation interpolation is needed also... #> • Interpolating precipitation... #> ℹ Relative humidity interpolation is needed also... #> • Interpolating relative humidity... #> ℹ Radiation calculation is needed also... #> • Calculating radiation... #> ℹ Wind interpolation is needed also... #> • Interpolating wind... #> • Calculating PET... #> ✔ Interpolation done...  points_interpolated #> Simple feature collection with 15 features and 8 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 0.7578958 ymin: 41.31541 xmax: 2.98657 ymax: 42.6336 #> Geodetic CRS:  WGS 84 #> # A tibble: 15 × 9 #>    plot_id elevation slope aspect             geometry interpolated_data  #>  * <chr>       <dbl> <dbl>  <dbl>          <POINT [°]> <list>             #>  1 P_05284      889. 25.2   313.   (2.320167 42.24139) <tibble [30 × 13]> #>  2 P_06572      680. 18.0    79.9  (2.552233 42.02596) <tibble [30 × 13]> #>  3 P_07201      141.  4.17   52.9  (2.721874 41.88258) <tibble [30 × 13]> #>  4 P_07512      254. 14.3   261.     (2.98657 41.9006) <tibble [30 × 13]> #>  5 P_08207     1860. 36.4   293.   (2.209903 42.33968) <tibble [30 × 13]> #>  6 P_08299      183.  4.12   92.9  (2.817143 42.24325) <tibble [30 × 13]> #>  7 P_09341      819  23.4   128.   (1.126766 42.42612) <tibble [30 × 13]> #>  8 P_10272      860  34.8   347.   (1.398528 42.26791) <tibble [30 × 13]> #>  9 P_10861      706  22.4    22.6 (0.9314126 42.04226) <tibble [30 × 13]> #> 10 P_11651      585  22.0   199.   (0.7578958 41.8612) <tibble [30 × 13]> #> 11 P_12150      674. 30.3   154.   (1.481719 41.81838) <tibble [30 × 13]> #> 12 P_12227      752.  6.04   27.7    (1.283161 41.591) <tibble [30 × 13]> #> 13 P_12417      702  11.6    63.1 (0.8727224 41.35875) <tibble [30 × 13]> #> 14 P_13007      972.  4.21  338.    (1.120383 42.6336) <tibble [30 × 13]> #> 15 P_14029      556. 14.1    41.4  (1.480716 41.31541) <tibble [30 × 13]> #> # ℹ 3 more variables: weekly_mean <list>, monthly_max <list>, #> #   monthly_erosivity <list>"},{"path":"https://emf-creaf.github.io/meteoland/articles/tidy-meteoland.html","id":"interpolation-on-raster-data","dir":"Articles","previous_headings":"","what":"Interpolation on raster data","title":"Tidy meteoland","text":"can use interpolate_data() function raster type data. need case topography information stars object, elevation, aspect slope variables raster attributes: case, raster 0.01 degree grid (10x10 cells) central Catalonia. raster inside area covered interpolator object created , use . can see, returned object stars raster provided function, interpolated meteorological variables new attributes. Dimensions now include date, besides input’s latitude longitude.","code":"raster_to_interpolate_example #> stars object with 2 dimensions and 3 attributes #> attribute(s): #>                  Min.    1st Qu.    Median      Mean   3rd Qu.     Max. #> elevation  240.000000 370.000000 447.00000 460.32231 525.00000 786.0000 #> slope        1.432096   5.720433  11.34812  13.07343  19.75851  31.0719 #> aspect       5.194427  74.744881 174.36932 181.67923 291.03751 360.0000 #> dimension(s): #>   from  to  offset    delta refsys x/y #> x  155 165 0.03648  0.01058 WGS 84 [x] #> y  110 120   42.92 -0.01058 WGS 84 [y] raster_interpolated <- raster_to_interpolate_example |>   interpolate_data(interpolator) #> ℹ Starting interpolation... #> ℹ Temperature interpolation is needed also... #> • Interpolating temperature... #> ℹ Precipitation interpolation is needed also... #> • Interpolating precipitation... #> ℹ Relative humidity interpolation is needed also... #> • Interpolating relative humidity... #> ℹ Radiation calculation is needed also... #> • Calculating radiation... #> ℹ Wind interpolation is needed also... #> • Interpolating wind... #> • Calculating PET... #> ✔ Interpolation done... #> ℹ Binding together interpolation results #> ✔ Interpolation process finished  raster_interpolated #> stars object with 3 dimensions and 14 attributes #> attribute(s): #>                               Min.     1st Qu.     Median       Mean #> MeanTemperature         3.28710017  11.4127317  13.905175  13.419200 #> MinTemperature         -4.21944950   3.9207208   6.575382   5.306937 #> MaxTemperature          6.96679206  14.9159502  19.225056  18.693510 #> Precipitation           0.00000000   0.0000000   0.000000   1.217155 #> MeanRelativeHumidity   32.89385498  58.0844689  64.649229  65.957527 #> MinRelativeHumidity    25.19625829  38.4317461  44.433889  47.943580 #> MaxRelativeHumidity    49.75939189 100.0000000 100.000000  97.027820 #> Radiation               7.38449673  16.1504318  20.815039  19.742938 #> WindSpeed               0.02164994   0.9119314   1.252240   1.385929 #> WindDirection           0.18621266  71.4293342 198.955399 181.615512 #> PET                     1.09428184   2.4611166   3.196850   3.110504 #> elevation             240.00000000 370.0000000 447.000000 460.322314 #> slope                   1.43209624   5.7204332  11.348120  13.073426 #> aspect                  5.19442749  74.7448807 174.369324 181.679232 #>                           3rd Qu.       Max. NA's #> MeanTemperature        16.0215966  20.225457    0 #> MinTemperature          7.6128811  11.721902    0 #> MaxTemperature         22.3273620  29.104431    0 #> Precipitation           0.2922964  21.000409    0 #> MeanRelativeHumidity   75.6627580 100.000000    0 #> MinRelativeHumidity    55.1586632  91.663163    0 #> MaxRelativeHumidity   100.0000000 100.000000    0 #> Radiation              23.8148915  28.126824    0 #> WindSpeed               1.7444530   5.811866   30 #> WindDirection         264.0404014 359.908196 1350 #> PET                     3.7822172   5.598250    0 #> elevation             525.0000000 786.000000    0 #> slope                  19.7585106  31.071896    0 #> aspect                291.0375061 360.000000    0 #> dimension(s): #>      from to         offset    delta  refsys point x/y #> x       1 11          1.671  0.01058  WGS 84 FALSE [x] #> y       1 11          41.76 -0.01058  WGS 84 FALSE [y] #> date    1 30 2022-04-01 UTC   1 days POSIXct FALSE"},{"path":"https://emf-creaf.github.io/meteoland/articles/tidy-meteoland.html","id":"temporal-aggregation-in-raster","dir":"Articles","previous_headings":"Interpolation on raster data","what":"Temporal aggregation in raster","title":"Tidy meteoland","text":"Like point location example, interpolated data raster format can also aggregated temporally. case result aggregated variables attributes, time dimension aggregated desired frequency.","code":"summarise_interpolated_data(   raster_interpolated,   fun = \"mean\",   frequency = \"week\" ) #> stars object with 3 dimensions and 11 attributes #> attribute(s): #>                              Min.      1st Qu.     Median       Mean #> MeanTemperature         3.8085157  11.46543487  13.276586  12.702695 #> MinTemperature         -2.1490631   2.77153554   6.299540   4.640385 #> MaxTemperature          7.6274425  16.18746065  18.457836  17.944528 #> Precipitation           0.0000000   0.04039901   0.372891   1.068806 #> MeanRelativeHumidity   42.9062182  60.53136706  64.595298  63.904152 #> MinRelativeHumidity    29.2592761  40.80836041  45.249846  46.333339 #> MaxRelativeHumidity    75.1187263  96.67327485  99.376895  95.009647 #> Radiation              11.7245475  17.90842114  19.929736  19.765548 #> WindSpeed               0.6861051   0.87245304   1.343451   1.515442 #> WindDirection         122.7681189 152.95041467 168.597605 184.990642 #> PET                     1.6176152   2.74501755   3.084015   3.091572 #>                           3rd Qu.       Max. NA's #> MeanTemperature        15.8981470  17.107689    0 #> MinTemperature          7.0401778   8.721007    0 #> MaxTemperature         21.3502767  24.825805    0 #> Precipitation           0.9568111   4.916280    0 #> MeanRelativeHumidity   69.2639299  88.634437    0 #> MinRelativeHumidity    52.5994550  72.780577    0 #> MaxRelativeHumidity   100.0000000 100.000000    0 #> Radiation              21.8800875  25.287348    0 #> WindSpeed               1.8527502   4.348124    5 #> WindDirection         234.5482210 246.486142  365 #> PET                     3.4728443   5.069591    0 #> dimension(s): #>      from to          offset    delta  refsys point x/y #> time    1  5 2022-03-28 CEST   7 days POSIXct    NA     #> x       1 11           1.671  0.01058  WGS 84 FALSE [x] #> y       1 11           41.76 -0.01058  WGS 84 FALSE [y]"},{"path":"https://emf-creaf.github.io/meteoland/articles/tidy-meteoland.html","id":"piping-raster-interpolation","dir":"Articles","previous_headings":"Interpolation on raster data","what":"Piping raster interpolation","title":"Tidy meteoland","text":"points, raster interpolation utilities can also piped. way, interested mean monthly temperature study area, can :","code":"monthly_mean_temperature <- raster_to_interpolate_example |>   interpolate_data(interpolator, variables = \"Temperature\") |>   summarise_interpolated_data(     fun = \"max\",     frequency = \"month\",     variable = \"MeanTemperature\"   ) #> ℹ Starting interpolation... #> • Interpolating temperature... #> ✔ Interpolation done... #> ℹ Binding together interpolation results #> ✔ Interpolation process finished  plot(monthly_mean_temperature)"},{"path":[]},{"path":[]},{"path":"https://emf-creaf.github.io/meteoland/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Miquel De Cáceres. Author, maintainer. Víctor Granda. Author. Nicolas Martin. Author. Antoine Cabon. Author.","code":""},{"path":"https://emf-creaf.github.io/meteoland/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"De Caceres M, Martin-StPaul N, Turco M, Cabon , Granda V (2018). “Estimating daily meteorological data downscaling climate models landscapes.” Environmental Modelling Software, 108, 186-196.","code":"@Article{,   title = {Estimating daily meteorological data and downscaling climate models over landscapes},   author = {Miquel {De Caceres} and Nicolas Martin-StPaul and Marco Turco and Antoine Cabon and Victor Granda},   journal = {Environmental Modelling and Software},   year = {2018},   volume = {108},   pages = {186-196}, }"},{"path":[]},{"path":"https://emf-creaf.github.io/meteoland/index.html","id":"important-notice","dir":"","previous_headings":"","what":"Important notice","title":"Landscape Meteorology Tools","text":"Starting June 2023, rgdal, rgeos maptools R packages entered maintenance mode (meaning new updates). Coincidentally, sp raster packages now superseded modern alternatives sf, stars terra. means meteoland classes, based sp, need updated deal changes R-spatial ecosystem. Starting version 2.0.0 meteoland (February 2023) functions, methods classes based using sp, raster rgdal package soft-deprecated. Since ver. 2.1.0, functions, methods classes removed package See Tidy meteoland vignette info changes.","code":""},{"path":"https://emf-creaf.github.io/meteoland/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Landscape Meteorology Tools","text":"aim assist research climatic impacts forests, R package meteoland provides utilities estimate daily weather variables position complex terrains (De Cáceres et al 2018): Spatial interpolation daily weather records meteorological stations. Statistical correction meteorological data series (e.g climate models). Note functionality deprecated starting version 2.0.0. Multisite multivariate stochastic weather generation. Note functionality deprecated starting version 2.0.0.","code":""},{"path":"https://emf-creaf.github.io/meteoland/index.html","id":"package-installation-and-documentation","dir":"","previous_headings":"","what":"Package installation and documentation","title":"Landscape Meteorology Tools","text":"Package meteoland can found CRAN, version repository may recent one. Latest stable versions can downloaded installed GitHub follows (package remotes installed first): Detailed documentation regarding meteoland calculation routines can found (https://emf-creaf.github.io/meteolandbook/index.html).","code":"remotes::install_github(\"emf-creaf/meteoland\")"},{"path":[]},{"path":"https://emf-creaf.github.io/meteoland/index.html","id":"package-meteospain","dir":"","previous_headings":"Companion packages","what":"Package meteospain","title":"Landscape Meteorology Tools","text":"development meteoland functions download weather station data several Spanish networks originally developed. meteoland version 1.0.1, user recommended use package meteospain, can also found CRAN. Functions download weather station data still available meteoland deprecated make internal calls functions package meteospain.","code":""},{"path":"https://emf-creaf.github.io/meteoland/index.html","id":"packages-medfate-and-medfateland","dir":"","previous_headings":"Companion packages","what":"Packages medfate and medfateland","title":"Landscape Meteorology Tools","text":"Package meteoland designed provide input weather data simulations forest function dynamics via following packages Package medfate provides functions simulating forest function dynamics. Package medfateland extends medfate allowing simulations performed spatially explicit context.","code":""},{"path":"https://emf-creaf.github.io/meteoland/index.html","id":"authorship","dir":"","previous_headings":"","what":"Authorship","title":"Landscape Meteorology Tools","text":"R package meteoland developed maintained Ecosystem Modelling Facility CREAF (Catalonia, Spain).","code":""},{"path":"https://emf-creaf.github.io/meteoland/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Landscape Meteorology Tools","text":"De Caceres M, Martin-StPaul N, Turco M, Cabon , Granda V (2018) Estimating daily meteorological data downscaling climate models landscapes. Environmental Modelling Software 108: 186-196. (doi:10.1016/j.envsoft.2018.08.003).","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/add_topo.html","id":null,"dir":"Reference","previous_headings":"","what":"Add topography data to meteo object — add_topo","title":"Add topography data to meteo object — add_topo","text":"Add topography data meteo object","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/add_topo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add topography data to meteo object — add_topo","text":"","code":"add_topo(meteo, topo, verbose = getOption(\"meteoland_verbosity\", TRUE))"},{"path":"https://emf-creaf.github.io/meteoland/reference/add_topo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add topography data to meteo object — add_topo","text":"meteo meteo object topo topo object verbose Logical indicating function must show messages info. Default value checks \"meteoland_verbosity\" option set, defaults TRUE. can turned function FALSE, session wide options(meteoland_verbosity = FALSE)","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/add_topo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add topography data to meteo object — add_topo","text":"meteo topography info added","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/add_topo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add topography data to meteo object — add_topo","text":"using meteo data without topography info create interpolator, topography must added","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/meteoland/reference/add_topo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add topography data to meteo object — add_topo","text":"","code":"# example meteo data(meteoland_meteo_no_topo_example) # example topo data(meteoland_topo_example) # add topo with_meteo(meteoland_meteo_no_topo_example) |>   add_topo(meteoland_topo_example) #> ℹ Checking meteorology object... #> ✔ meteorology object ok #> ℹ Checking topography object... #> ✔ topography object ok #> ℹ Adding topography to meteo (by station ID)... #> ✔ Topography added #> Simple feature collection with 5652 features and 16 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 0.30565 ymin: 40.55786 xmax: 3.18165 ymax: 42.77011 #> Geodetic CRS:  WGS 84 #> # A tibble: 5,652 × 17 #>    dates               service  stationID station_name          station_province #>    <dttm>              <chr>    <chr>     <chr>                 <chr>            #>  1 2022-04-01 00:00:00 meteocat C6        Castellnou de Seana   Lleida           #>  2 2022-04-01 00:00:00 meteocat C7        Tàrrega               Lleida           #>  3 2022-04-01 00:00:00 meteocat C8        Cervera               Lleida           #>  4 2022-04-01 00:00:00 meteocat C9        Mas de Barberans      Tarragona        #>  5 2022-04-01 00:00:00 meteocat CC        Orís                  Barcelona        #>  6 2022-04-01 00:00:00 meteocat CD        la Seu d'Urgell - Be… Lleida           #>  7 2022-04-01 00:00:00 meteocat CE        els Hostalets de Pie… Barcelona        #>  8 2022-04-01 00:00:00 meteocat CG        Molló - Fabert        Girona           #>  9 2022-04-01 00:00:00 meteocat CI        Sant Pau de Segúries  Girona           #> 10 2022-04-01 00:00:00 meteocat CJ        Organyà               Lleida           #> # ℹ 5,642 more rows #> # ℹ 12 more variables: MeanTemperature <dbl>, MinTemperature <dbl>, #> #   MaxTemperature <dbl>, MeanRelativeHumidity <dbl>, #> #   MinRelativeHumidity <dbl>, MaxRelativeHumidity <dbl>, Precipitation <dbl>, #> #   WindDirection <dbl>, WindSpeed <dbl>, Radiation <dbl>, geom <POINT [°]>, #> #   elevation <dbl>"},{"path":"https://emf-creaf.github.io/meteoland/reference/complete_meteo.html","id":null,"dir":"Reference","previous_headings":"","what":"Complete missing meteo variables — complete_meteo","title":"Complete missing meteo variables — complete_meteo","text":"Calculates missing values relative humidity, radiation potential evapotranspiration data frame daily values minimum/maximum/mean temperature precipitation. function takes meteo object (meteoland names) complete missing variable possible","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/complete_meteo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Complete missing meteo variables — complete_meteo","text":"","code":"complete_meteo(meteo, verbose = getOption(\"meteoland_verbosity\", TRUE))"},{"path":"https://emf-creaf.github.io/meteoland/reference/complete_meteo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Complete missing meteo variables — complete_meteo","text":"meteo meteoland weather data verbose Logical indicating function must show messages info. Default value checks \"meteoland_verbosity\" option set, defaults TRUE. can turned function FALSE, session wide options(meteoland_verbosity = FALSE)","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/complete_meteo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Complete missing meteo variables — complete_meteo","text":"meteo data provided variables completed","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/complete_meteo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Complete missing meteo variables — complete_meteo","text":"#' function fills values humidity, radiation PET missing input data frame. column 'SpecificHumidity' present input data, relative humidity calculated . Otherwise, relative humidity calculated assuming dew point temperature equals minimum temperature. Potential solar radiation calculated latitude, slope aspect. Incoming solar radiation corrected following Thornton & Running (1999) potential evapotranspiration following Penman (1948).","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/complete_meteo.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Complete missing meteo variables — complete_meteo","text":"Thornton, P.E., Running, S.W., 1999. improved algorithm estimating incident daily solar radiation measurements temperature, humidity, precipitation. Agric. . Meteorol. 93, 211-228. Penman, H. L. 1948. Natural evaporation open water, bare soil grass. Proceedings Royal Society London. Series . Mathematical Physical Sciences, 193, 120-145.","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/complete_meteo.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Complete missing meteo variables — complete_meteo","text":"Miquel De Cáceres Ainsa, EMF-CREAF Victor Granda García, EMF-CREAF","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/complete_meteo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Complete missing meteo variables — complete_meteo","text":"","code":"# \\donttest{ # example data data(\"meteoland_meteo_example\")  # remove MinRelativeHumidity meteoland_meteo_example$MinRelativeHumidity <- NULL # complete vars completed_meteo <- complete_meteo(meteoland_meteo_example) #> ℹ Completing missing variables if possible: #> • RelativeHumidity #> • MinRelativeHumidity #> • MaxRelativeHumidity #> • Radiation #> ✔ Done # check MinRelativeHumidity completed_meteo$MinRelativeHumidity #>    [1] 44.54373 43.92829 48.22623 67.79254 48.13884 52.58872 46.28775 58.60228 #>    [9] 51.51611 56.84501 53.64692 48.23087 59.62648 49.58845 57.88316 53.23507 #>   [17] 53.84621 53.40034 48.91317 52.92733 68.74477 52.08616 68.03216 56.87095 #>   [25] 60.39051 52.51741 62.26776 40.07248 54.95452 53.07458 57.86287 55.65242 #>   [33] 64.69792 43.33776 38.93237 57.42919 50.29339 51.20680 75.15707       NA #>   [41] 43.96618       NA       NA 50.02883 52.23688 59.78000 50.26596       NA #>   [49] 71.57516 70.23570 52.36338 54.59605 55.16370 62.14800 62.55405 57.91424 #>   [57] 45.91763 51.83501 54.45964 48.19865 48.22326 55.10691 48.67579 44.52462 #>   [65] 54.85522 33.81187 35.77014 45.24607 50.67401 60.70006 67.35221 64.69792 #>   [73] 61.93203 42.02909 45.15919 45.74066 51.67576 42.98868 49.30001 56.32064 #>   [81] 54.95100 63.97702 48.16529 51.76176 50.73038 50.31282 47.23062 36.10267 #>   [89] 61.36378 47.40498 54.67595 60.41107 52.05833 58.66030 52.33391 53.94614 #>   [97] 68.26719 70.62465 52.76273 49.02359 48.77586 46.25286 39.17402 45.04157 #>  [105] 48.30832 57.85276 39.18674 45.87876 53.42782 56.63617 46.35729 47.64460 #>  [113] 58.77477 68.16281 50.90309 53.15720 53.53502 52.97218 47.96694 43.39702 #>  [121] 59.72323 50.12385 48.01965 48.55139 48.39733 48.97666 56.52907 47.30072 #>  [129] 55.86220 62.51645 43.19242 53.40399 52.91206 47.70686 50.00823 52.13863 #>  [137] 50.57424 52.62297 56.01142 55.21709 56.03252 54.68062 48.71304 32.62901 #>  [145] 57.54887 40.97030 48.82751 51.62347 53.04135 59.13214 48.49328 53.60259 #>  [153] 46.85083 48.90796 52.69351 54.43472 41.89553 49.75447 69.66773 55.63186 #>  [161] 57.34472 53.59226 55.95172 49.39733 48.34768 47.11483 47.43683 55.11064 #>  [169] 55.21654 49.66645 48.99867 56.90364 53.35517 53.73060 70.24330 54.88152 #>  [177] 40.36087 55.67871 60.51852 53.68215 55.82273 55.10196 69.13523 53.80061 #>  [185] 54.74703 53.13507 51.75223 51.35078 56.52169 38.70997 36.54370 39.56877 #>  [193] 62.02698 39.29574 52.89552 36.35057 54.43609 39.95525 51.23795 37.87298 #>  [201] 34.15581 46.31157 37.61715 55.21746 48.92727 40.92882 39.65953 38.20394 #>  [209] 42.33635 61.08768 37.65515 69.32789 49.33902 54.06657 45.53719 56.60999 #>  [217] 35.92147 63.09550 44.71784 40.33641 46.14801 55.05750 39.39941 35.10669 #>  [225] 59.84521 45.39361 32.66029 55.47544       NA 36.96080       NA       NA #>  [233] 33.18379 38.55924 49.97927 38.16616       NA 56.53589 55.92352 47.23062 #>  [241] 40.84002 48.59364 55.82765 59.18653 52.98205 40.27611 39.65953 40.84002 #>  [249] 41.03482 42.86134 47.98749 44.12082 37.62257 45.49594 34.66782 35.93741 #>  [257] 39.54711 46.22348 55.70498 60.47940 53.70742 57.83715 33.74214 33.56975 #>  [265] 35.29458 35.84605 38.57781 38.52905 50.12399 50.00802 55.82133 38.94538 #>  [273] 40.24052 42.62800 41.83564 38.15018 34.74295 48.32527 37.77789 39.19004 #>  [281] 82.32867 37.99351 39.59904 37.34123 44.83761 58.37142 59.36103 38.75980 #>  [289] 39.32614 37.05237 38.83804 34.09521 34.16448 42.04500 51.77899 33.26076 #>  [297] 35.98192 46.57490 43.85776 33.11436 40.56837 38.48589 59.24216 42.57988 #>  [305] 42.55873 47.95010 43.23401 42.98868 37.02144 47.16749 50.72618 34.87881 #>  [313] 39.77030 42.29761 38.15746 43.64706 38.82436 43.61793 55.27165 35.85311 #>  [321] 48.88464 42.47827 36.54833 42.90921 39.91312 37.89243 43.94521 48.96211 #>  [329] 42.76628 41.00525 55.40882 44.80626 32.99773 43.44436 32.57189 39.41286 #>  [337] 45.30443 41.07976 51.83501 39.11095 41.02712 40.93030 38.82232 41.73673 #>  [345] 42.72757 36.24685 39.54711 57.83073 53.95898 41.23026 48.33708 60.49837 #>  [353] 36.86973 45.86951 37.35576 36.29712 50.44380 57.56335 40.44405 39.56329 #>  [361] 39.29283 46.03853 42.43181 62.93753 43.32269 35.44631 42.83709 62.50598 #>  [369] 73.27667 65.03379 86.28305 76.67442 72.15026 67.47875 54.17741 85.54885 #>  [377] 67.82470 78.18267 29.32739 34.59092 38.99102 53.83761 33.51736 31.06428 #>  [385] 48.16529 47.50133 34.28930 37.26488 32.94664 32.90709 36.04890 40.23471 #>  [393] 32.18340 40.68701 59.52181 33.40888 39.69210 70.61768 67.34253 69.57920 #>  [401] 67.81644 31.33750 42.84589 41.74154 47.85105 46.53161 45.40789 57.72231 #>  [409] 42.53140 56.74651 57.88247 44.65738 64.28463 28.82372 46.70732 30.29003 #>  [417] 64.07557       NA 56.89796       NA       NA 28.06305 27.60299 41.43034 #>  [425] 31.65971       NA 60.88071 58.21685 51.75095 44.41961 55.58222 46.06155 #>  [433] 55.14921 47.93735 63.27472 66.07943 74.77971 67.08047 46.39951 43.05460 #>  [441] 44.20864 62.17452 37.08441 58.76306 44.24054 65.74280 63.19882 57.35663 #>  [449] 55.69581 56.95586 45.09989 30.36985 28.82892 34.51514 31.51437 36.68686 #>  [457] 30.01373 42.86579 36.40371 44.23144 34.92925 28.10603 31.20332 38.41833 #>  [465] 29.29761 44.27043 41.47922 34.14759 35.03310 64.43010 49.70402 51.65843 #>  [473] 62.98227 40.48169 62.12354 59.73887 51.87304 50.44776 36.50435 35.41828 #>  [481] 28.55099 29.51931 33.21991 44.07005 55.78835 33.21991 34.09521 32.72051 #>  [489] 28.36621 35.60190 46.01510 66.53464 40.98935 51.52592 47.10971 31.26330 #>  [497] 52.61101 58.96762 76.44728 32.24183 35.08167 39.66995 58.62836 30.93297 #>  [505] 79.86411 32.88095 84.33841 44.87641 30.57149 36.36232 77.04975 51.56259 #>  [513] 41.21057 40.65531 54.31294 34.43960 45.91763 58.16766 65.07463 56.00367 #>  [521] 31.81671 37.92246 70.64117 65.53867 32.17742 26.38150 41.42388 39.05040 #>  [529] 26.69143 30.47378 50.02026 32.36141 53.09680 60.00614 30.49033 29.24432 #>  [537] 55.60887 45.00358 39.12669 41.65179 40.95254 33.26456 36.47928 31.34161 #>  [545] 35.27405 52.44617 49.63029 41.33255 32.56989 55.95001 47.17276 72.01985 #>  [553] 41.70411 49.82891 58.89107 83.13432 37.19917 51.29240 43.27081 54.48495 #>  [561] 49.67295 61.87755 51.77511 51.71069 62.44871 54.32910 46.10964 37.20307 #>  [569] 42.60924 42.36939 55.66210 36.50654 28.12229 44.98266 40.73488 39.68483 #>  [577] 33.89321 35.07644 31.29328 37.23674 35.15160 24.09920 43.02582 44.24054 #>  [585] 34.50138 36.74814 44.45524 57.73408 55.81713 55.52887 32.00615 46.61955 #>  [593] 43.82827 52.25272 44.28340 32.30634 45.94706 46.29890 57.03403 60.43086 #>  [601] 37.80844 52.52879 24.03043 46.29890 34.98563 48.91317       NA 35.36104 #>  [609]       NA       NA 32.17995 33.14861 33.07439 31.81263       NA 45.98053 #>  [617] 50.29339 42.60924 39.81050 58.16563 44.21994 57.33068 55.60887 53.13678 #>  [625] 51.51249 56.19087 44.60264 43.04048 37.77701 41.41865 45.60184 40.11851 #>  [633] 44.60264 35.97448 48.39456 46.92982 63.30485 60.57937 62.14762 50.15227 #>  [641] 35.67071 37.29372 41.93147 35.43619 39.25327 35.07644 39.12648 34.02641 #>  [649] 37.59343 40.39110 30.50386 31.35322 36.38825 33.23902 34.84857 34.99025 #>  [657] 38.11410 54.00196 52.67739 40.63239 39.88277 45.58367 48.13595 43.23401 #>  [665] 44.34235 43.61044 37.32548 38.73346 40.95918 34.16779 33.26914 37.90859 #>  [673] 45.51905 36.03509 38.18770 34.00422 35.57795 35.30598 39.53849 41.18003 #>  [681] 52.98184 41.23013 45.19079 49.73932 34.50629 43.96774 39.44244 56.45246 #>  [689] 37.20932 35.95170 43.07239 48.82751 42.66905 56.03252 39.65953 60.28191 #>  [697] 48.65672 36.02866 38.61957 53.72876 39.08068 44.74838 37.27040 41.52975 #>  [705] 37.64127 61.88382 41.81122 41.95043 36.84037 37.84806 34.35581 55.13827 #>  [713] 50.26521 40.81274 26.38582 44.18887 42.72879 28.44078 41.74385 41.80130 #>  [721] 35.57935 39.58059 43.18932 37.35576 30.11424 48.68087 39.36468 42.65778 #>  [729] 46.20039 33.32297 41.41178 32.84083 39.38273 42.33933 57.88857 25.32749 #>  [737] 45.50372 34.93924 47.78966 54.57577 47.96313 42.52905 38.27836 49.44254 #>  [745] 53.43132 34.36509 38.14455 36.28099 35.66763 42.44288 43.73652 52.51799 #>  [753] 41.18312 40.05645 44.08868 49.42094 26.65033 34.37488 33.92340 40.76199 #>  [761] 25.06563 20.93434 32.57429 35.51838 26.69143 25.29857 22.59549 27.53818 #>  [769] 34.68651 34.14613 21.16587 30.53360 40.21068 32.68906 24.95207 38.15778 #>  [777] 51.08156 52.95299 56.55501 28.27318 36.07250 41.85407 42.03559 29.60585 #>  [785] 36.88376 49.67675 34.04170 45.91711 52.76302 32.60388 43.54381 17.07366 #>  [793] 36.53015 23.14273 30.26345       NA 27.83037       NA       NA 23.73401 #>  [801] 31.83148 23.99132 22.94947       NA 35.41898 40.42879 35.26919 28.45284 #>  [809] 44.95738 34.05963 50.17623 43.52904 33.01607 32.54036 56.34588 45.10274 #>  [817] 34.43580 33.62110 36.01212 38.28318 31.90968 29.54708 26.25774 57.44796 #>  [825] 50.34971 61.77776 45.56621 53.36291 32.09569 31.56273 28.33590 26.70060 #>  [833] 25.25272 29.28228 27.65715 36.14053 26.32153 38.50344 32.06256 24.70921 #>  [841] 28.93321 31.97628 26.37271 23.72431 34.28477 32.47871 37.23488 55.00341 #>  [849] 27.21999 30.14391 39.73118 35.72081 41.39331 38.46708 36.20887 28.19412 #>  [857] 29.55249 24.89528 27.56948 29.58760 29.35166 35.54777 26.73684 34.40490 #>  [865] 28.74283 30.12881 30.83062 35.05998 41.11045 52.08616 29.27257 34.60374 #>  [873] 45.67332 28.91148 38.79407 39.13773 60.38081 21.82278 22.39934 35.18054 #>  [881] 49.99518 33.26076 53.55194 32.62855 67.73660 34.57625 26.30392 31.03806 #>  [889] 49.10303 29.22336 44.27781 29.52284 34.28710 33.05811 49.13518 32.04002 #>  [897] 31.36326 23.82834 29.62890 24.01396 49.25819 42.56639 28.94908 24.17658 #>  [905] 26.64625 34.75949 25.22428 27.49122 32.19292 25.69830 35.85923 33.34448 #>  [913] 27.86411 25.90717 34.16795 36.99112 32.19292 34.96976 24.51543 25.16740 #>  [921] 25.87859 25.82608 27.69112 48.67855 21.76315 43.87747 27.71390 38.10433 #>  [929] 44.23969 38.31795 24.95173 26.48761 43.48518 55.13718 34.87733 42.20901 #>  [937] 49.08204 67.98319 48.31063 59.80460 65.09298 49.14084 55.92418 63.55267 #>  [945] 56.04848 36.35652 43.07118 44.38585 50.03969 38.56318 29.82310 39.01687 #>  [953] 57.33511 36.93115 31.67166 33.91167 28.81274 36.28707 42.69806 25.86237 #>  [961] 38.64561 50.00802 34.39805 37.21449 48.10487 51.02649 53.07589 71.60357 #>  [969] 33.69337 42.53213 43.82152 48.24525 41.12924 67.90040 43.27521 50.01188 #>  [977] 56.07075 59.95676 38.60987 48.53872 33.44962 40.18323 34.70281 45.34034 #>  [985]       NA 39.31571       NA       NA 34.83127 33.90731 34.78956 33.73387 #>  [993]       NA 36.81964 44.48176 43.10038 41.73633 40.74393 38.09740 52.27832 #>  [ reached getOption(\"max.print\") -- omitted 4652 entries ] # }"},{"path":"https://emf-creaf.github.io/meteoland/reference/create_meteo_interpolator.html","id":null,"dir":"Reference","previous_headings":"","what":"Meteoland interpolator creation — create_meteo_interpolator","title":"Meteoland interpolator creation — create_meteo_interpolator","text":"Function create meteoland interpolator","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/create_meteo_interpolator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Meteoland interpolator creation — create_meteo_interpolator","text":"","code":"create_meteo_interpolator(   meteo_with_topo,   params = NULL,   verbose = getOption(\"meteoland_verbosity\", TRUE) )"},{"path":"https://emf-creaf.github.io/meteoland/reference/create_meteo_interpolator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Meteoland interpolator creation — create_meteo_interpolator","text":"meteo_with_topo Meteo object, returned with_meteo params Interpolation parameters list. Typically result defaultInterpolationParams. verbose Logical indicating function must show messages info. Default value checks \"meteoland_verbosity\" option set, defaults TRUE. can turned function FALSE, session wide options(meteoland_verbosity = FALSE)","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/create_meteo_interpolator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Meteoland interpolator creation — create_meteo_interpolator","text":"interpolator object (stars)","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/create_meteo_interpolator.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Meteoland interpolator creation — create_meteo_interpolator","text":"function takes meteorology information list interpolation parameters creates interpolator object ready use.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/meteoland/reference/create_meteo_interpolator.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Meteoland interpolator creation — create_meteo_interpolator","text":"Victor Granda García, EMF-CREAF Miquel De Cáceres Ainsa, EMF-CREAF","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/create_meteo_interpolator.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Meteoland interpolator creation — create_meteo_interpolator","text":"","code":"# example meteo data data(meteoland_meteo_example)  # create the interpolator with default params with_meteo(meteoland_meteo_example) |>   create_meteo_interpolator() #> ℹ Checking meteorology object... #> ✔ meteorology object ok #> ℹ Creating interpolator... #> Warning: No interpolation parameters provided, using defaults #> ℹ Set the `params` argument to modify parameter default values #> • Calculating smoothed variables... #> • Updating intial_Rp parameter with the actual stations mean distance... #> ✔ Interpolator created. #> stars object with 2 dimensions and 13 attributes #> attribute(s): #>                                 Min.    1st Qu.    Median       Mean   3rd Qu. #> Temperature               -14.200000   8.800000  12.60000  11.324991  14.80000 #> MinTemperature            -15.900000   3.300000   6.90000   5.883189   9.40000 #> MaxTemperature            -13.000000  13.900000  18.30000  17.364292  21.80000 #> RelativeHumidity           18.000000  57.000000  67.00000  67.720000  78.00000 #> Precipitation               0.000000   0.000000   0.00000   1.925434   0.10000 #> Radiation                   7.707484  17.717235  22.04597  20.762628  23.61352 #> WindDirection               0.000000 116.000000 217.00000 196.861908 275.00000 #> WindSpeed                   0.200000   0.900000   1.30000   1.603907   2.00000 #> elevation                   0.000000 147.000000 317.00000 515.629630 668.00000 #> aspect                      0.000000   0.000000   0.00000   0.000000   0.00000 #> slope                       0.000000   0.000000   0.00000   0.000000   0.00000 #> SmoothedPrecipitation       0.100000   1.862500   5.55000   6.197496   9.07500 #> SmoothedTemperatureRange    4.695000   9.863542  11.66307  11.400932  13.26868 #>                                 Max. NA's #> Temperature                 23.40000  148 #> MinTemperature              20.10000  138 #> MaxTemperature              29.90000  139 #> RelativeHumidity           100.00000  145 #> Precipitation              160.90000   79 #> Radiation                   28.10878  139 #> WindDirection              359.00000 4171 #> WindSpeed                    6.90000 4160 #> elevation                 2535.00000    0 #> aspect                       0.00000    0 #> slope                        0.00000    0 #> SmoothedPrecipitation       65.10000  818 #> SmoothedTemperatureRange    17.72778  124 #> dimension(s): #>         from  to         offset  delta  refsys point #> date       1  30 2022-04-01 UTC 1 days POSIXct FALSE #> station    1 189             NA     NA  WGS 84  TRUE #>                                                       values #> date                                                    NULL #> station POINT (0.95172 41.6566),...,POINT (1.89716 42.32211)  # create the interpolator with some params changed with_meteo(meteoland_meteo_example) |>   create_meteo_interpolator(params = list(debug = TRUE)) #> ℹ Checking meteorology object... #> ✔ meteorology object ok #> ℹ Creating interpolator... #> ℹ Some interpolation parameters are missing, using default values for those #> • Calculating smoothed variables... #> • Updating intial_Rp parameter with the actual stations mean distance... #> ✔ Interpolator created. #> stars object with 2 dimensions and 13 attributes #> attribute(s): #>                                 Min.    1st Qu.    Median       Mean   3rd Qu. #> Temperature               -14.200000   8.800000  12.60000  11.324991  14.80000 #> MinTemperature            -15.900000   3.300000   6.90000   5.883189   9.40000 #> MaxTemperature            -13.000000  13.900000  18.30000  17.364292  21.80000 #> RelativeHumidity           18.000000  57.000000  67.00000  67.720000  78.00000 #> Precipitation               0.000000   0.000000   0.00000   1.925434   0.10000 #> Radiation                   7.707484  17.717235  22.04597  20.762628  23.61352 #> WindDirection               0.000000 116.000000 217.00000 196.861908 275.00000 #> WindSpeed                   0.200000   0.900000   1.30000   1.603907   2.00000 #> elevation                   0.000000 147.000000 317.00000 515.629630 668.00000 #> aspect                      0.000000   0.000000   0.00000   0.000000   0.00000 #> slope                       0.000000   0.000000   0.00000   0.000000   0.00000 #> SmoothedPrecipitation       0.100000   1.862500   5.55000   6.197496   9.07500 #> SmoothedTemperatureRange    4.695000   9.863542  11.66307  11.400932  13.26868 #>                                 Max. NA's #> Temperature                 23.40000  148 #> MinTemperature              20.10000  138 #> MaxTemperature              29.90000  139 #> RelativeHumidity           100.00000  145 #> Precipitation              160.90000   79 #> Radiation                   28.10878  139 #> WindDirection              359.00000 4171 #> WindSpeed                    6.90000 4160 #> elevation                 2535.00000    0 #> aspect                       0.00000    0 #> slope                        0.00000    0 #> SmoothedPrecipitation       65.10000  818 #> SmoothedTemperatureRange    17.72778  124 #> dimension(s): #>         from  to         offset  delta  refsys point #> date       1  30 2022-04-01 UTC 1 days POSIXct FALSE #> station    1 189             NA     NA  WGS 84  TRUE #>                                                       values #> date                                                    NULL #> station POINT (0.95172 41.6566),...,POINT (1.89716 42.32211)"},{"path":"https://emf-creaf.github.io/meteoland/reference/defaultInterpolationParams.html","id":null,"dir":"Reference","previous_headings":"","what":"Default interpolation parameters — defaultInterpolationParams","title":"Default interpolation parameters — defaultInterpolationParams","text":"Returns list default parameterization interpolation. parameter values set according Thornton et al. (1997).","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/defaultInterpolationParams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default interpolation parameters — defaultInterpolationParams","text":"","code":"defaultInterpolationParams()"},{"path":"https://emf-creaf.github.io/meteoland/reference/defaultInterpolationParams.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default interpolation parameters — defaultInterpolationParams","text":"list following items (default values brackets): initial_Rp [= 140000]: Initial truncation radius. iterations [= 3]: Number station density iterations. alpha_MinTemperature [= 3.0]: Gaussian shape parameter minimum temperature. alpha_MaxTemperature [= 3.0]: Gaussian shape parameter maximum temperature. alpha_DewTemperature [= 3.0]: Gaussian shape parameter dew-point temperature. alpha_PrecipitationEvent [= 5.0]: Gaussian shape parameter precipitation events. alpha_PrecipitationAmount [= 5.0]: Gaussian shape parameter regression precipitation amounts. alpha_Wind [= 3.0]: Gaussian shape parameter wind. N_MinTemperature [= 30]: Average number stations non-zero weights minimum temperature. N_MaxTemperature [= 30]: Average number stations non-zero weights maximum temperature. N_DewTemperature [= 30]: Average number stations non-zero weights dew-point temperature. N_PrecipitationEvent [= 5]: Average number stations non-zero weights precipitation events. N_PrecipitationAmount [= 20]: Average number stations non-zero weights regression precipitation amounts. N_Wind [= 2]: Average number stations non-zero weights wind. St_Precipitation [= 5]: Number days temporal smoothing precipitation. St_TemperatureRange [= 15]: Number days temporal smoothing temperature range. pop_crit [= 0.50]: Critical precipitation occurrence parameter. f_max [= 0.6]: Maximum value precipitation regression extrapolations (0.6 equals maximum 4 times extrapolation). wind_height [= 10]: Wind measurement height (m). wind_roughness_height [= 0.001]: Wind roughness height (m), PET calculations. penman_albedo [= 0.25]: Albedo PET calculations. penman_windfun [= \"1956\"]: Wind speed function version, either \"1948\" \"1956\", PET calculation. debug [= FALSE]: Boolean flag show extra console output.","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/defaultInterpolationParams.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Default interpolation parameters — defaultInterpolationParams","text":"Thornton, P.E., Running, S.W., White, M. ., 1997. Generating surfaces daily meteorological variables large regions complex terrain. J. Hydrol. 190, 214–251. doi:10.1016/S0022-1694(96)03128-9. De Caceres M, Martin-StPaul N, Turco M, Cabon , Granda V (2018) Estimating daily meteorological data downscaling climate models landscapes. Environmental Modelling Software 108: 186-196.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/meteoland/reference/defaultInterpolationParams.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Default interpolation parameters — defaultInterpolationParams","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/get_interpolation_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieving interpolation parameters from interpolator object — get_interpolation_params","title":"Retrieving interpolation parameters from interpolator object — get_interpolation_params","text":"Retrieve parameter list interpolator object","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/get_interpolation_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieving interpolation parameters from interpolator object — get_interpolation_params","text":"","code":"get_interpolation_params(interpolator)"},{"path":"https://emf-creaf.github.io/meteoland/reference/get_interpolation_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieving interpolation parameters from interpolator object — get_interpolation_params","text":"interpolator interpolator object returned create_meteo_interpolator","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/get_interpolation_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieving interpolation parameters from interpolator object — get_interpolation_params","text":"complete parameter list interpolator object","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/meteoland/reference/get_interpolation_params.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Retrieving interpolation parameters from interpolator object — get_interpolation_params","text":"Victor Granda García, EMF-CREAF","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/get_interpolation_params.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieving interpolation parameters from interpolator object — get_interpolation_params","text":"","code":"# example interpolator data(meteoland_interpolator_example) # get the params from the interpolator get_interpolation_params(meteoland_interpolator_example) #> $initial_Rp #> [1] 1.136444 #>  #> $iterations #> [1] 3 #>  #> $alpha_MinTemperature #> [1] 3 #>  #> $alpha_MaxTemperature #> [1] 3 #>  #> $alpha_DewTemperature #> [1] 3 #>  #> $alpha_PrecipitationEvent #> [1] 5 #>  #> $alpha_PrecipitationAmount #> [1] 5 #>  #> $alpha_Wind #> [1] 3 #>  #> $N_MinTemperature #> [1] 30 #>  #> $N_MaxTemperature #> [1] 30 #>  #> $N_DewTemperature #> [1] 30 #>  #> $N_PrecipitationEvent #> [1] 5 #>  #> $N_PrecipitationAmount #> [1] 20 #>  #> $N_Wind #> [1] 2 #>  #> $St_Precipitation #> [1] 5 #>  #> $St_TemperatureRange #> [1] 15 #>  #> $pop_crit #> [1] 0.5 #>  #> $f_max #> [1] 0.6 #>  #> $wind_height #> [1] 10 #>  #> $wind_roughness_height #> [1] 0.001 #>  #> $penman_albedo #> [1] 0.25 #>  #> $penman_windfun #> [1] \"1956\" #>  #> $debug #> [1] FALSE #>"},{"path":"https://emf-creaf.github.io/meteoland/reference/humidity-conversion-tools.html","id":null,"dir":"Reference","previous_headings":"","what":"Humidity conversion tools — humidity_relative2dewtemperature","title":"Humidity conversion tools — humidity_relative2dewtemperature","text":"Functions transform relative humidity specific humidity dew point temperature viceversa.","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/humidity-conversion-tools.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Humidity conversion tools — humidity_relative2dewtemperature","text":"","code":"humidity_relative2dewtemperature(Tc, HR)  humidity_dewtemperature2relative(Tc, Td, allowSaturated = FALSE)  humidity_specific2relative(Tc, HS, allowSaturated = FALSE)  humidity_relative2specific(Tc, HR)"},{"path":"https://emf-creaf.github.io/meteoland/reference/humidity-conversion-tools.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Humidity conversion tools — humidity_relative2dewtemperature","text":"Tc numeric vector temperature degrees Celsius. HR numeric vector relative humidity (%). Td numeric vector dew temperature degrees Celsius. allowSaturated Logical flag allow values 100% HS numeric vector specific humidity (unitless).","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/humidity-conversion-tools.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Humidity conversion tools — humidity_relative2dewtemperature","text":"numeric vector specific relative humidity.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/meteoland/reference/humidity-conversion-tools.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Humidity conversion tools — humidity_relative2dewtemperature","text":"Nicholas Martin-StPaul, INRA Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/interpolate_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpolation process for spatial data — interpolate_data","title":"Interpolation process for spatial data — interpolate_data","text":"Interpolate spatial data obtain downscaled meteorologic variables","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/interpolate_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpolation process for spatial data — interpolate_data","text":"","code":"interpolate_data(   spatial_data,   interpolator,   dates = NULL,   variables = NULL,   ignore_convex_hull_check = FALSE,   verbose = getOption(\"meteoland_verbosity\", TRUE) )"},{"path":"https://emf-creaf.github.io/meteoland/reference/interpolate_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpolation process for spatial data — interpolate_data","text":"spatial_data sf stars raster object interpolate interpolator meteoland interpolator object, created create_meteo_interpolator dates vector dates interpolate (must within interpolator date range). Default NULL (dates present interpolator object) variables vector variable names interpolated. NULL (default), interpolate variables. Accepted names \"Temperature\", \"Precipitation\", \"RelativeHumidity\", \"Radiation\" \"Wind\" ignore_convex_hull_check Logical indicating whether errors convex hull checks ignored. Checking points inside convex hull normally raise error >10% points outside. Setting ignore_convex_hull_check = TRUE means warning raised interpolation performed, can useful users interpolating points close outside convex hull. verbose Logical indicating function must show messages info. Default value checks \"meteoland_verbosity\" option set, defaults TRUE. can turned function FALSE, session wide options(meteoland_verbosity = FALSE)","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/interpolate_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpolation process for spatial data — interpolate_data","text":"object class structure provided spatial data results interpolation joined. case spatial data sf, results added list-type column can unnested unnest. case stars raster object, interpolation results added attributes (variables)","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/interpolate_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Interpolation process for spatial data — interpolate_data","text":"function takes spatial data object (sf stars raster), interpolator object (create_meteo_interpolator) vector dates perform interpolation meteorologic variables spatial locations present spatial_data object.","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/interpolate_data.html","id":"spatial-data","dir":"Reference","previous_headings":"","what":"Spatial data","title":"Interpolation process for spatial data — interpolate_data","text":"spatial data provided must two types. () sf object containing POINT location interpolate (II) stars raster object interpolation done. Independently class spatial_data mandatory variables, namely elevation. also contain aspect slope better interpolation process, though two variables mandatory.","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/interpolate_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Interpolation process for spatial data — interpolate_data","text":"Victor Granda García, EMF-CREAF Miquel De Cáceres Ainsa, EMF-CREAF","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/interpolate_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interpolation process for spatial data — interpolate_data","text":"","code":"# \\donttest{ # example of data to interpolate and example interpolator data(\"points_to_interpolate_example\") data(\"meteoland_interpolator_example\")  # interpolate data res <- interpolate_data(points_to_interpolate_example, meteoland_interpolator_example) #> ℹ Starting interpolation... #> ℹ Temperature interpolation is needed also... #> • Interpolating temperature... #> ℹ Precipitation interpolation is needed also... #> • Interpolating precipitation... #> ℹ Relative humidity interpolation is needed also... #> • Interpolating relative humidity... #> ℹ Radiation calculation is needed also... #> • Calculating radiation... #> ℹ Wind interpolation is needed also... #> • Interpolating wind... #> • Calculating PET... #> ✔ Interpolation done...  # check result # same class as input data class(res) #> [1] \"sf\"         \"tbl_df\"     \"tbl\"        \"data.frame\" # data res #> Simple feature collection with 15 features and 5 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 0.7578958 ymin: 41.31541 xmax: 2.98657 ymax: 42.6336 #> Geodetic CRS:  WGS 84 #> # A tibble: 15 × 6 #>    plot_id elevation slope aspect             geometry interpolated_data  #>    <chr>       <dbl> <dbl>  <dbl>          <POINT [°]> <list>             #>  1 P_05284      889. 25.2   313.   (2.320167 42.24139) <tibble [30 × 13]> #>  2 P_06572      680. 18.0    79.9  (2.552233 42.02596) <tibble [30 × 13]> #>  3 P_07201      141.  4.17   52.9  (2.721874 41.88258) <tibble [30 × 13]> #>  4 P_07512      254. 14.3   261.     (2.98657 41.9006) <tibble [30 × 13]> #>  5 P_08207     1860. 36.4   293.   (2.209903 42.33968) <tibble [30 × 13]> #>  6 P_08299      183.  4.12   92.9  (2.817143 42.24325) <tibble [30 × 13]> #>  7 P_09341      819  23.4   128.   (1.126766 42.42612) <tibble [30 × 13]> #>  8 P_10272      860  34.8   347.   (1.398528 42.26791) <tibble [30 × 13]> #>  9 P_10861      706  22.4    22.6 (0.9314126 42.04226) <tibble [30 × 13]> #> 10 P_11651      585  22.0   199.   (0.7578958 41.8612) <tibble [30 × 13]> #> 11 P_12150      674. 30.3   154.   (1.481719 41.81838) <tibble [30 × 13]> #> 12 P_12227      752.  6.04   27.7    (1.283161 41.591) <tibble [30 × 13]> #> 13 P_12417      702  11.6    63.1 (0.8727224 41.35875) <tibble [30 × 13]> #> 14 P_13007      972.  4.21  338.    (1.120383 42.6336) <tibble [30 × 13]> #> 15 P_14029      556. 14.1    41.4  (1.480716 41.31541) <tibble [30 × 13]> # results for the first location res[[\"interpolated_data\"]][1] #> [[1]] #> # A tibble: 30 × 13 #>    dates                 DOY MeanTemperature MinTemperature MaxTemperature #>    <dttm>              <dbl>           <dbl>          <dbl>          <dbl> #>  1 2022-04-01 00:00:00    91            3.24          -2.53           6.99 #>  2 2022-04-02 00:00:00    92            2.99          -4.20           7.67 #>  3 2022-04-03 00:00:00    93            2.39          -5.61           7.59 #>  4 2022-04-04 00:00:00    94            4.02          -3.93           9.20 #>  5 2022-04-05 00:00:00    95            7.38          -3.29          14.3  #>  6 2022-04-06 00:00:00    96            8.78           1.31          13.6  #>  7 2022-04-07 00:00:00    97           12.1            2.44          18.4  #>  8 2022-04-08 00:00:00    98           12.9            3.32          19.1  #>  9 2022-04-09 00:00:00    99           10.0            3.83          14.1  #> 10 2022-04-10 00:00:00   100           11.4            4.85          15.6  #> # ℹ 20 more rows #> # ℹ 8 more variables: Precipitation <dbl>, MeanRelativeHumidity <dbl>, #> #   MinRelativeHumidity <dbl>, MaxRelativeHumidity <dbl>, Radiation <dbl>, #> #   WindSpeed <dbl>, WindDirection <dbl>, PET <dbl> #>  # unnest results tidyr::unnest(res, cols = \"interpolated_data\") #> Simple feature collection with 450 features and 17 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 0.7578958 ymin: 41.31541 xmax: 2.98657 ymax: 42.6336 #> Geodetic CRS:  WGS 84 #> # A tibble: 450 × 18 #>    plot_id elevation slope aspect            geometry dates               #>    <chr>       <dbl> <dbl>  <dbl>         <POINT [°]> <dttm>              #>  1 P_05284      889.  25.2   313. (2.320167 42.24139) 2022-04-01 00:00:00 #>  2 P_05284      889.  25.2   313. (2.320167 42.24139) 2022-04-02 00:00:00 #>  3 P_05284      889.  25.2   313. (2.320167 42.24139) 2022-04-03 00:00:00 #>  4 P_05284      889.  25.2   313. (2.320167 42.24139) 2022-04-04 00:00:00 #>  5 P_05284      889.  25.2   313. (2.320167 42.24139) 2022-04-05 00:00:00 #>  6 P_05284      889.  25.2   313. (2.320167 42.24139) 2022-04-06 00:00:00 #>  7 P_05284      889.  25.2   313. (2.320167 42.24139) 2022-04-07 00:00:00 #>  8 P_05284      889.  25.2   313. (2.320167 42.24139) 2022-04-08 00:00:00 #>  9 P_05284      889.  25.2   313. (2.320167 42.24139) 2022-04-09 00:00:00 #> 10 P_05284      889.  25.2   313. (2.320167 42.24139) 2022-04-10 00:00:00 #> # ℹ 440 more rows #> # ℹ 12 more variables: DOY <dbl>, MeanTemperature <dbl>, MinTemperature <dbl>, #> #   MaxTemperature <dbl>, Precipitation <dbl>, MeanRelativeHumidity <dbl>, #> #   MinRelativeHumidity <dbl>, MaxRelativeHumidity <dbl>, Radiation <dbl>, #> #   WindSpeed <dbl>, WindDirection <dbl>, PET <dbl> # }"},{"path":"https://emf-creaf.github.io/meteoland/reference/interpolation_temperature.html","id":null,"dir":"Reference","previous_headings":"","what":"Low-level interpolation functions — interpolation_precipitation","title":"Low-level interpolation functions — interpolation_precipitation","text":"Low-level functions interpolate meteorology (one day) set points.","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/interpolation_temperature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Low-level interpolation functions — interpolation_precipitation","text":"","code":"interpolation_precipitation(   Xp,   Yp,   Zp,   X,   Y,   Z,   P,   Psmooth,   iniRp = 140000,   alpha_event = 6.25,   alpha_amount = 6.25,   N_event = 20L,   N_amount = 20L,   iterations = 3L,   popcrit = 0.5,   fmax = 0.95,   debug = FALSE )  interpolation_dewtemperature(   Xp,   Yp,   Zp,   X,   Y,   Z,   T,   iniRp = 140000,   alpha = 3,   N = 30L,   iterations = 3L,   debug = FALSE )  interpolation_temperature(   Xp,   Yp,   Zp,   X,   Y,   Z,   T,   iniRp = 140000,   alpha = 3,   N = 30L,   iterations = 3L,   debug = FALSE )  interpolation_wind(   Xp,   Yp,   WS,   WD,   X,   Y,   iniRp = 140000,   alpha = 2,   N = 1L,   iterations = 3L,   directionsAvailable = TRUE )"},{"path":"https://emf-creaf.github.io/meteoland/reference/interpolation_temperature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Low-level interpolation functions — interpolation_precipitation","text":"Xp, Yp, Zp Spatial coordinates elevation (Zp; m..s.l) target points. X, Y, Z Spatial coordinates elevation (Zp; m..s.l) reference locations (e.g. meteorological stations). P Precipitation reference locations (mm). Psmooth Temporally-smoothed precipitation reference locations (mm). iniRp Initial truncation radius. iterations Number station density iterations. popcrit Critical precipitation occurrence parameter. fmax Maximum value precipitation regression extrapolations (0.6 equals maximum 4 times extrapolation). debug Boolean flag show extra console output. T Temperature (e.g., minimum, maximum dew temperature) reference locations (degrees). alpha, alpha_amount, alpha_event Gaussian shape parameter. N, N_event, N_amount Average number stations non-zero weights. WS, WD Wind speed (m/s) wind direction (degrees north clock-wise) reference locations. directionsAvailable flag indicate wind directions available (.e. non-missing) reference locations.","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/interpolation_temperature.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Low-level interpolation functions — interpolation_precipitation","text":"functions return vector interpolated values target points.","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/interpolation_temperature.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Low-level interpolation functions — interpolation_precipitation","text":"functions exposes internal low-level interpolation functions written C++ intended used directly script function. maintained compatibility older versions package future versions meteoland remove functions (still accessible triple colon notation (:::), use recommended)","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/interpolation_temperature.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Low-level interpolation functions — interpolation_precipitation","text":"interpolation_precipitation(): Precipitation interpolation_dewtemperature(): Dew temperature interpolation_wind(): Wind","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/interpolation_temperature.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Low-level interpolation functions — interpolation_precipitation","text":"Thornton, P.E., Running, S.W., White, M. ., 1997. Generating surfaces daily meteorological variables large regions complex terrain. J. Hydrol. 190, 214–251. doi:10.1016/S0022-1694(96)03128-9. De Caceres M, Martin-StPaul N, Turco M, Cabon , Granda V (2018) Estimating daily meteorological data downscaling climate models landscapes. Environmental Modelling Software 108: 186-196.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/meteoland/reference/interpolation_temperature.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Low-level interpolation functions — interpolation_precipitation","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/interpolation_temperature.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Low-level interpolation functions — interpolation_precipitation","text":"","code":"Xp <- as.numeric(sf::st_coordinates(points_to_interpolate_example)[,1]) Yp <- as.numeric(sf::st_coordinates(points_to_interpolate_example)[,2]) Zp <- points_to_interpolate_example$elevation X <- as.numeric(   sf::st_coordinates(stars::st_get_dimension_values(meteoland_interpolator_example, \"station\"))[,1] ) Y <- as.numeric(   sf::st_coordinates(stars::st_get_dimension_values(meteoland_interpolator_example, \"station\"))[,2] ) Z <- as.numeric(meteoland_interpolator_example[[\"elevation\"]][1,]) Temp <- as.numeric(meteoland_interpolator_example[[\"MinTemperature\"]][1,]) P <- as.numeric(meteoland_interpolator_example[[\"Precipitation\"]][1,]) Psmooth <- as.numeric(meteoland_interpolator_example[[\"SmoothedPrecipitation\"]][1,]) WS <- as.numeric(meteoland_interpolator_example[[\"WindSpeed\"]][1,]) WD <- as.numeric(meteoland_interpolator_example[[\"WindDirection\"]][1,]) iniRp <- get_interpolation_params(meteoland_interpolator_example)$initial_Rp alpha <- get_interpolation_params(meteoland_interpolator_example)$alpha_MinTemperature N <- get_interpolation_params(meteoland_interpolator_example)$N_MinTemperature alpha_event <- get_interpolation_params(meteoland_interpolator_example)$alpha_PrecipitationEvent N_event <- get_interpolation_params(meteoland_interpolator_example)$N_PrecipitationEvent alpha_amount <- get_interpolation_params(meteoland_interpolator_example)$alpha_PrecipitationAmount N_amount <- get_interpolation_params(meteoland_interpolator_example)$N_PrecipitationAmount alpha_wind <- get_interpolation_params(meteoland_interpolator_example)$alpha_Wind N_wind <- get_interpolation_params(meteoland_interpolator_example)$N_Wind iterations <- get_interpolation_params(meteoland_interpolator_example)$iterations popcrit <- get_interpolation_params(meteoland_interpolator_example)$pop_crit fmax <- get_interpolation_params(meteoland_interpolator_example)$f_max debug <- get_interpolation_params(meteoland_interpolator_example)$debug  interpolation_temperature(   Xp, Yp, Zp,   X[!is.na(Temp)], Y[!is.na(Temp)], Z[!is.na(Temp)],   Temp[!is.na(Temp)],   iniRp, alpha, N, iterations, debug ) #>  [1] -2.5259554 -1.2274925  0.4602637 -0.1155003 -9.7153282  2.5290313 #>  [7] -2.4239096 -2.1036076 -1.9277582 -0.8422971 -1.4108765 -2.2973953 #> [13] -0.7649598 -3.5780859  0.2170589  interpolation_wind(   Xp, Yp,   WS[!is.na(WD)], WD[!is.na(WD)],   X[!is.na(WD)], Y[!is.na(WD)],   iniRp, alpha_wind, N_wind, iterations, directionsAvailable = FALSE ) #>           [,1] [,2] #>  [1,] 1.980286   NA #>  [2,] 1.995742   NA #>  [3,] 0.900000   NA #>  [4,] 1.613360   NA #>  [5,] 1.964632   NA #>  [6,] 6.196058   NA #>  [7,]       NA   NA #>  [8,] 2.058176   NA #>  [9,] 3.356163   NA #> [10,] 3.221483   NA #> [11,]       NA   NA #> [12,] 4.370816   NA #> [13,] 4.132147   NA #> [14,]       NA   NA #> [15,] 3.342795   NA  interpolation_precipitation(   Xp, Yp, Zp,   X[!is.na(P)], Y[!is.na(P)], Z[!is.na(P)],   P[!is.na(P)], Psmooth[!is.na(P)],   iniRp, alpha_event, alpha_amount, N_event, N_amount,   iterations, popcrit, fmax, debug ) #>  [1] 0.0000000 0.0000000 0.1049001 0.1724466 1.8571120 0.1968337 2.0475055 #>  [8] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 2.8098406 #> [15] 0.0000000"},{"path":"https://emf-creaf.github.io/meteoland/reference/interpolator_calibration.html","id":null,"dir":"Reference","previous_headings":"","what":"Calibration and validation of interpolation procedures — interpolation_cross_validation","title":"Calibration and validation of interpolation procedures — interpolation_cross_validation","text":"Calibration validation interpolation procedures","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/interpolator_calibration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calibration and validation of interpolation procedures — interpolation_cross_validation","text":"","code":"interpolation_cross_validation(   interpolator,   stations = NULL,   verbose = getOption(\"meteoland_verbosity\", TRUE) )  interpolator_calibration(   interpolator,   stations = NULL,   update_interpolation_params = FALSE,   variable = \"MinTemperature\",   N_seq = seq(5, 30, by = 5),   alpha_seq = seq(0.25, 10, by = 0.25),   verbose = getOption(\"meteoland_verbosity\", TRUE) )"},{"path":"https://emf-creaf.github.io/meteoland/reference/interpolator_calibration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calibration and validation of interpolation procedures — interpolation_cross_validation","text":"interpolator meteoland interpolator object, created create_meteo_interpolator stations vector stations (numeric station indexes character stations id) used calculate \"MAE\". stations data included training set predictive \"MAE\" calculated stations subset indicated stations param . NULL stations used predictive \"MAE\" calculation. verbose Logical indicating function must show messages info. Default value checks \"meteoland_verbosity\" option set, defaults TRUE. can turned function FALSE, session wide options(meteoland_verbosity = FALSE) update_interpolation_params Logical indicating interpolator object must updated calculated parameters. Default FALSE variable string indicating meteorological variable interpolation parameters \"N\" \"alpha\" calibrated. Accepted values : MinTemperature (kernel minimum temperature) MaxTemperature (kernel maximum temperature) DewTemperature (kernel dew-temperature (.e. relative humidity)) Precipitation (calibrate kernel precipitation events regression precipitation amounts; recommended) PrecipitationAmount (kernel regression precipitation amounts) PrecipitationEvent (kernel precipitation events) N_seq Numeric vector \"N\" values tested alpha_seq Numeric vector \"alpha\"","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/interpolator_calibration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calibration and validation of interpolation procedures — interpolation_cross_validation","text":"interpolation_cross_validation returns list following items errors: Data frame combination station date observed variables, predicated variables total error (predicted - observed) calculated variable station_stats: Data frame error bias statistics aggregated station dates_stats: Data frame error bias statistics aggregated date r2: correlation indexes observed predicted values meteorological variable update_interpolation_params FALSE (default), interpolator_calibration returns list following items MAE: numeric matrix mean absolute error values, averaged across stations, combination parameters \"N\" \"alpha\" minMAE: Minimum MAE value N: Value parameter \"N\" corresponding minimum MAE alpha: Value parameter \"alpha\" corresponding minimum MAE observed: matrix observed values (meteorological measured values) predicted: matrix interpolated values optimum parameter combination update_interpolation_params FALSE, interpolator_calibration returns interpolator provided parameters updated","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/interpolator_calibration.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calibration and validation of interpolation procedures — interpolation_cross_validation","text":"Function interpolator_calibration determines optimal interpolation parameters \"N\" \"alpha\" given meteorological variable. Optimization done minimizing mean absolute error (\"MAE\") (Thornton et al. 1997). Function interpolation_cross_validation calculates average mean absolute errors (\"MAE\") prediction period interpolator object. calibration cross validation procedures, predictions meteorological station made using leave-one-procedure (.e. excluding station predictive set).","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/interpolator_calibration.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Calibration and validation of interpolation procedures — interpolation_cross_validation","text":"interpolation_cross_validation():","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/interpolator_calibration.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calibration and validation of interpolation procedures — interpolation_cross_validation","text":"Thornton, P.E., Running, S.W., 1999. improved algorithm estimating incident daily solar radiation measurements temperature, humidity, precipitation. Agric. . Meteorol. 93, 211–228. doi:10.1016/S0168-1923(98)00126-9. De Caceres M, Martin-StPaul N, Turco M, Cabon , Granda V (2018) Estimating daily meteorological data downscaling climate models landscapes. Environmental Modelling Software 108: 186-196.","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/interpolator_calibration.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calibration and validation of interpolation procedures — interpolation_cross_validation","text":"Miquel De Cáceres Ainsa, EMF-CREAF Victor Granda García, EMF-CREAF","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/interpolator_calibration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calibration and validation of interpolation procedures — interpolation_cross_validation","text":"","code":"# \\donttest{ # example interpolator data(\"meteoland_interpolator_example\")  # As the cross validation for all stations can be time consuming, we are # gonna use only for the first 5 stations of the 198 cv <- interpolation_cross_validation(meteoland_interpolator_example, stations = 1:5) #> ℹ Starting Cross Validation process... #> • Interpolating stations... #> • Calculating R squared... #> • calculating errors, MAE and bias for interpolated variables... #> ✔ Cross validation done.  # Inspect the results cv$errors #> # A tibble: 150 × 21 #>    dates               station stationID MinTemperature_error #>    <dttm>                <int> <chr>                    <dbl> #>  1 2022-04-01 00:00:00       1 C6                      0.120  #>  2 2022-04-02 00:00:00       1 C6                     -0.296  #>  3 2022-04-03 00:00:00       1 C6                      0.178  #>  4 2022-04-04 00:00:00       1 C6                     -0.164  #>  5 2022-04-05 00:00:00       1 C6                     -0.0108 #>  6 2022-04-06 00:00:00       1 C6                     -0.287  #>  7 2022-04-07 00:00:00       1 C6                     -0.773  #>  8 2022-04-08 00:00:00       1 C6                      1.22   #>  9 2022-04-09 00:00:00       1 C6                     -0.599  #> 10 2022-04-10 00:00:00       1 C6                      1.08   #> # ℹ 140 more rows #> # ℹ 17 more variables: MaxTemperature_error <dbl>, #> #   RangeTemperature_error <dbl>, RelativeHumidity_error <dbl>, #> #   Radiation_error <dbl>, Precipitation_error <dbl>, #> #   MinTemperature_predicted <dbl>, MaxTemperature_predicted <dbl>, #> #   RangeTemperature_predicted <dbl>, RelativeHumidity_predicted <dbl>, #> #   Radiation_predicted <dbl>, Precipitation_predicted <dbl>, … cv$station_stats #> # A tibble: 5 × 20 #>   station stationID MinTemperature_station_bias MaxTemperature_station_bias #>     <int> <chr>                           <dbl>                       <dbl> #> 1       1 C6                            -0.0601                     -0.489  #> 2       2 C7                            -1.37                       -0.644  #> 3       3 C8                            -0.224                       0.0301 #> 4       4 C9                            -0.257                       0.519  #> 5       5 CC                             0.178                      -0.808  #> # ℹ 16 more variables: RangeTemperature_station_bias <dbl>, #> #   RelativeHumidity_station_bias <dbl>, Radiation_station_bias <dbl>, #> #   MinTemperature_station_mae <dbl>, MaxTemperature_station_mae <dbl>, #> #   RangeTemperature_station_mae <dbl>, RelativeHumidity_station_mae <dbl>, #> #   Radiation_station_mae <dbl>, TotalPrecipitation_station_observed <dbl>, #> #   TotalPrecipitation_station_predicted <dbl>, #> #   TotalPrecipitation_station_bias <dbl>, … cv$dates_stats #> # A tibble: 30 × 19 #>    dates               MinTemperature_date_bias MaxTemperature_date_bias #>    <dttm>                                 <dbl>                    <dbl> #>  1 2022-04-01 00:00:00                  -0.0883                  -0.174  #>  2 2022-04-02 00:00:00                  -0.434                   -0.226  #>  3 2022-04-03 00:00:00                  -0.392                   -0.477  #>  4 2022-04-04 00:00:00                  -0.550                   -0.197  #>  5 2022-04-05 00:00:00                  -0.172                   -0.365  #>  6 2022-04-06 00:00:00                  -0.345                    0.0511 #>  7 2022-04-07 00:00:00                  -1.09                    -0.188  #>  8 2022-04-08 00:00:00                  -0.730                   -0.236  #>  9 2022-04-09 00:00:00                  -0.576                   -0.422  #> 10 2022-04-10 00:00:00                  -0.568                    0.0402 #> # ℹ 20 more rows #> # ℹ 16 more variables: RangeTemperature_date_bias <dbl>, #> #   RelativeHumidity_date_bias <dbl>, Radiation_date_bias <dbl>, #> #   MinTemperature_date_mae <dbl>, MaxTemperature_date_mae <dbl>, #> #   RangeTemperature_date_mae <dbl>, RelativeHumidity_date_mae <dbl>, #> #   Radiation_date_mae <dbl>, TotalPrecipitation_date_observed <dbl>, #> #   TotalPrecipitation_date_predicted <dbl>, … cv$r2 #> $MinTemperature #> [1] 0.9720093 #>  #> $MaxTemperature #> [1] 0.9845019 #>  #> $RangeTemperature #> [1] 0.9557687 #>  #> $RelativeHumidity #> [1] 0.9591181 #>  #> $Radiation #> [1] 0.8943052 #>  # }   # \\donttest{ # example interpolator data(\"meteoland_interpolator_example\")  # As the calibration for all stations can be time consuming, we are gonna # interpolate only for the first 5 stations of the 198 and only a handful # of parameter combinations calibration <- interpolator_calibration(   meteoland_interpolator_example,   stations = 1:5,   variable = \"MaxTemperature\",   N_seq = seq(10, 20, by = 5),   alpha_seq = seq(8, 9, by = 0.25) ) #> ℹ Total number of stations: 189 #> ℹ Number of stations with available data: 185 #> ℹ Number of stations used for MAE calculation: 5 #> ℹ Number of parameters combinations to test: 15 #> ℹ Starting evaluation of parameter combinations for \"MaxTemperature\"... #> • Evaluating N: 10, alpha: 8... #> • Evaluating N: 10, alpha: 8.25... #> • Evaluating N: 10, alpha: 8.5... #> • Evaluating N: 10, alpha: 8.75... #> • Evaluating N: 10, alpha: 9... #> • Evaluating N: 15, alpha: 8... #> • Evaluating N: 15, alpha: 8.25... #> • Evaluating N: 15, alpha: 8.5... #> • Evaluating N: 15, alpha: 8.75... #> • Evaluating N: 15, alpha: 9... #> • Evaluating N: 20, alpha: 8... #> • Evaluating N: 20, alpha: 8.25... #> • Evaluating N: 20, alpha: 8.5... #> • Evaluating N: 20, alpha: 8.75... #> • Evaluating N: 20, alpha: 9... #> ✔ Calibration done: Minimum MAE: 0.558727762077721; N: 10; alpha: 9  # we can update the interpolator params directly: updated_interpolator <- interpolator_calibration(   meteoland_interpolator_example,   stations = 1:5,   update_interpolation_params = TRUE,   variable = \"MaxTemperature\",   N_seq = seq(10, 20, by = 5),   alpha_seq = seq(8, 9, by = 0.25) ) #> ℹ Total number of stations: 189 #> ℹ Number of stations with available data: 185 #> ℹ Number of stations used for MAE calculation: 5 #> ℹ Number of parameters combinations to test: 15 #> ℹ Starting evaluation of parameter combinations for \"MaxTemperature\"... #> • Evaluating N: 10, alpha: 8... #> • Evaluating N: 10, alpha: 8.25... #> • Evaluating N: 10, alpha: 8.5... #> • Evaluating N: 10, alpha: 8.75... #> • Evaluating N: 10, alpha: 9... #> • Evaluating N: 15, alpha: 8... #> • Evaluating N: 15, alpha: 8.25... #> • Evaluating N: 15, alpha: 8.5... #> • Evaluating N: 15, alpha: 8.75... #> • Evaluating N: 15, alpha: 9... #> • Evaluating N: 20, alpha: 8... #> • Evaluating N: 20, alpha: 8.25... #> • Evaluating N: 20, alpha: 8.5... #> • Evaluating N: 20, alpha: 8.75... #> • Evaluating N: 20, alpha: 9... #> ✔ Calibration done: Minimum MAE: 0.558727762077721; N: 10; alpha: 9   # check the new interpolator have the parameters updated get_interpolation_params(updated_interpolator)$N_MaxTemperature #> [1] 10 get_interpolation_params(updated_interpolator)$alpha_MaxTemperature #> [1] 9 # }"},{"path":"https://emf-creaf.github.io/meteoland/reference/meteoland-package.html","id":null,"dir":"Reference","previous_headings":"","what":"meteoland: Landscape Meteorology Tools — meteoland-package","title":"meteoland: Landscape Meteorology Tools — meteoland-package","text":"Functions estimate weather variables position landscape","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/meteoland-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"meteoland: Landscape Meteorology Tools — meteoland-package","text":"De Caceres et al., 2018 (doi:10.1016/j.envsoft.2018.08.003 ))","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/meteoland/reference/meteoland-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"meteoland: Landscape Meteorology Tools — meteoland-package","text":"Maintainer: Miquel De Cáceres miquelcaceres@gmail.com ORCID Authors: Víctor Granda ORCID Nicolas Martin ORCID Antoine Cabon ORCID","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/meteoland_interpolator_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Example interpolator object — meteoland_interpolator_example","title":"Example interpolator object — meteoland_interpolator_example","text":"Example interpolator daily meteorological records 189 weather stations Catalonia (NE Spain) corresponding April 2022.","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/meteoland_interpolator_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example interpolator object — meteoland_interpolator_example","text":"stars data cube object","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/meteoland_interpolator_example.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example interpolator object — meteoland_interpolator_example","text":"Spanish National Forest Inventory","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/meteoland_interpolator_example.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example interpolator object — meteoland_interpolator_example","text":"","code":"data(meteoland_interpolator_example)"},{"path":"https://emf-creaf.github.io/meteoland/reference/meteoland_meteo_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Example data set for meteo data from weather stations — meteoland_meteo_example","title":"Example data set for meteo data from weather stations — meteoland_meteo_example","text":"Example data set spatial location, topography daily meteorological records 189 weather stations Catalonia (NE Spain) corresponding April 2022.","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/meteoland_meteo_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example data set for meteo data from weather stations — meteoland_meteo_example","text":"sf object","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/meteoland_meteo_example.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example data set for meteo data from weather stations — meteoland_meteo_example","text":"'Servei Meteorològic de Catalunya' (SMC)","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/meteoland_meteo_example.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example data set for meteo data from weather stations — meteoland_meteo_example","text":"","code":"data(meteoland_meteo_example)"},{"path":"https://emf-creaf.github.io/meteoland/reference/meteoland_meteo_no_topo_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Example data set for meteo data from weather stations, without topography — meteoland_meteo_no_topo_example","title":"Example data set for meteo data from weather stations, without topography — meteoland_meteo_no_topo_example","text":"Example data set spatial location daily meteorological records 189 weather stations Catalonia (NE Spain) corresponding April 2022.","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/meteoland_meteo_no_topo_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example data set for meteo data from weather stations, without topography — meteoland_meteo_no_topo_example","text":"sf object","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/meteoland_meteo_no_topo_example.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example data set for meteo data from weather stations, without topography — meteoland_meteo_no_topo_example","text":"'Servei Meteorològic de Catalunya' (SMC)","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/meteoland_meteo_no_topo_example.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example data set for meteo data from weather stations, without topography — meteoland_meteo_no_topo_example","text":"","code":"data(meteoland_meteo_no_topo_example)"},{"path":"https://emf-creaf.github.io/meteoland/reference/meteoland_topo_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Example data set for topography data from weather stations, without meteo — meteoland_topo_example","title":"Example data set for topography data from weather stations, without meteo — meteoland_topo_example","text":"Example data set spatial location topography records 189 weather stations Catalonia (NE Spain).","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/meteoland_topo_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example data set for topography data from weather stations, without meteo — meteoland_topo_example","text":"sf object","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/meteoland_topo_example.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example data set for topography data from weather stations, without meteo — meteoland_topo_example","text":"'Servei Meteorològic de Catalunya' (SMC)","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/meteoland_topo_example.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example data set for topography data from weather stations, without meteo — meteoland_topo_example","text":"","code":"data(meteoland_topo_example)"},{"path":"https://emf-creaf.github.io/meteoland/reference/meteospain2meteoland.html","id":null,"dir":"Reference","previous_headings":"","what":"From meteospain to meteoland meteo objects — meteospain2meteoland","title":"From meteospain to meteoland meteo objects — meteospain2meteoland","text":"Adapting meteospain meteo objects meteoland meteo objects","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/meteospain2meteoland.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"From meteospain to meteoland meteo objects — meteospain2meteoland","text":"","code":"meteospain2meteoland(meteo, complete = FALSE)"},{"path":"https://emf-creaf.github.io/meteoland/reference/meteospain2meteoland.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"From meteospain to meteoland meteo objects — meteospain2meteoland","text":"meteo meteospain meteo object. complete logical indicating meteo data missing variables calculated (possible). Default FALSE.","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/meteospain2meteoland.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"From meteospain to meteoland meteo objects — meteospain2meteoland","text":"compatible meteo object use meteoland.","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/meteospain2meteoland.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"From meteospain to meteoland meteo objects — meteospain2meteoland","text":"function converts meteospain R package meteo objects compatible meteoland meteo objects selecting needed variables adapting names comply meteoland requirements.","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/meteospain2meteoland.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"From meteospain to meteoland meteo objects — meteospain2meteoland","text":"","code":"if (interactive()) {   # meteospain data   library(meteospain)   mg_april_2022_data <- get_meteo_from(     \"meteogalicia\",     meteogalicia_options(\"daily\", as.Date(\"2022-04-01\"), as.Date(\"2022-04-30\"))   )    # just convert   meteospain2meteoland(mg_april_2022_data)   # convert and complete   meteospain2meteoland(mg_april_2022_data, complete = TRUE)  } #> ℹ A información divulgada a través deste servidor ofrécese gratuitamente aos #>   cidadáns para que poida ser #> utilizada libremente por eles, co único compromiso de mencionar expresamente a #> MeteoGalicia e á #> Consellería de Medio Ambiente, Territorio e Vivenda da Xunta de Galicia como #> fonte da mesma cada vez #> que as utilice para os usos distintos do particular e privado. #> https://www.meteogalicia.gal/web/informacion/notaIndex.action #> ℹ Completing missing variables if possible: #> • RelativeHumidity #> • MinRelativeHumidity #> • MaxRelativeHumidity #> • Radiation #> ✔ Done #> Simple feature collection with 4740 features and 19 fields (with 270 geometries empty) #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -9.178318 ymin: 41.8982 xmax: -6.765224 ymax: 43.70426 #> Geodetic CRS:  WGS 84 #> # A tibble: 4,740 × 20 #>    dates               service stationID station_name station_province elevation #>  * <dttm>              <chr>   <chr>     <chr>        <chr>                <dbl> #>  1 2022-04-01 00:00:00 meteog… 10045     Mabegondo    A Coruña                94 #>  2 2022-04-01 00:00:00 meteog… 10046     Marco da Cu… A Coruña               651 #>  3 2022-04-01 00:00:00 meteog… 10047     Pedro Murias Lugo                    51 #>  4 2022-04-01 00:00:00 meteog… 10048     O Invernade… Ourense               1026 #>  5 2022-04-01 00:00:00 meteog… 10049     Corrubedo    A Coruña                30 #>  6 2022-04-01 00:00:00 meteog… 10050     CIS Ferrol   A Coruña                37 #>  7 2022-04-01 00:00:00 meteog… 10052     Muralla      A Coruña               661 #>  8 2022-04-01 00:00:00 meteog… 10053     Campus Lugo  Lugo                   400 #>  9 2022-04-01 00:00:00 meteog… 10055     Guitiriz-Mi… Lugo                   684 #> 10 2022-04-01 00:00:00 meteog… 10056     Marroxo      Lugo                   645 #> # ℹ 4,730 more rows #> # ℹ 14 more variables: MeanTemperature <dbl>, MinTemperature <dbl>, #> #   MaxTemperature <dbl>, MeanRelativeHumidity <dbl>, #> #   MinRelativeHumidity <dbl>, MaxRelativeHumidity <dbl>, Precipitation <dbl>, #> #   WindDirection <dbl>, WindSpeed <dbl>, insolation <dbl>, #> #   geometry <POINT [°]>, Radiation <dbl>, aspect <dbl>, slope <dbl>"},{"path":"https://emf-creaf.github.io/meteoland/reference/penman.html","id":null,"dir":"Reference","previous_headings":"","what":"Potential evapotranspiration — penman","title":"Potential evapotranspiration — penman","text":"Functions calculate potential evapotranspiration using Penman Penman-Monteith.","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/penman.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Potential evapotranspiration — penman","text":"","code":"penman(   latrad,   elevation,   slorad,   asprad,   J,   Tmin,   Tmax,   RHmin,   RHmax,   R_s,   u,   z = 10,   z0 = 0.001,   alpha = 0.25,   windfun = \"1956\" )  penmanmonteith(rc, elevation, Tmin, Tmax, RHmin, RHmax, Rn, u = NA_real_)"},{"path":"https://emf-creaf.github.io/meteoland/reference/penman.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Potential evapotranspiration — penman","text":"latrad Latitude radians. elevation Elevation (m). slorad Slope (radians). asprad Aspect (radians North). J Julian day, number days since January 1, 4713 BCE noon UTC. Tmin Minimum temperature (degrees Celsius). Tmax Maximum temperature (degrees Celsius). RHmin Minimum relative humidity (percent). RHmax Maximum relative humidity (percent). R_s Solar radiation (MJ/m2). u wind speed (m/s). z Wind measuring height (m). z0 Roughness height (m). alpha Albedo. windfun Wind speed function version, either \"1948\" \"1956\". rc Canopy vapour flux (stomatal) resistance (s·m-1). Rn Daily net radiation (MJ·m-2·day-1).","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/penman.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Potential evapotranspiration — penman","text":"Potential evapotranspiration (mm water).","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/penman.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Potential evapotranspiration — penman","text":"code adapted package `Evapotranspiration', follows McMahon et al. (2013). wind speed available, alternative formulation potential evapotranspiration used approximation (Valiantzas 2006)","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/penman.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Potential evapotranspiration — penman","text":"penmanmonteith(): Penman Monteith method","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/penman.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Potential evapotranspiration — penman","text":"Penman, H. L. 1948. Natural evaporation open water, bare soil grass. Proceedings Royal Society London. Series . Mathematical Physical Sciences, 193, 120-145. Penman, H. L. 1956. Evaporation: introductory survey. Netherlands Journal Agricultural Science, 4, 9-29. McMahon, T.., Peel, M.C., Lowe, L., Srikanthan, R., McVicar, T.R. 2013. Estimating actual, potential, reference crop pan evaporation using standard meteorological data: pragmatic synthesis. Hydrology & Earth System Sciences 17, 1331–1363. doi:10.5194/hess-17-1331-2013.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/meteoland/reference/penman.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Potential evapotranspiration — penman","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/points_to_interpolate_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Example data set of points for interpolation of weather variables — points_to_interpolate_example","title":"Example data set of points for interpolation of weather variables — points_to_interpolate_example","text":"Example data set spatial location topography records 15 experimental plots Catalonia (NE Spain).","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/points_to_interpolate_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example data set of points for interpolation of weather variables — points_to_interpolate_example","text":"sf object","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/points_to_interpolate_example.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example data set of points for interpolation of weather variables — points_to_interpolate_example","text":"Spanish National Forest Inventory","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/points_to_interpolate_example.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example data set of points for interpolation of weather variables — points_to_interpolate_example","text":"","code":"data(points_to_interpolate_example)"},{"path":"https://emf-creaf.github.io/meteoland/reference/precipitation_concentration.html","id":null,"dir":"Reference","previous_headings":"","what":"Precipitation daily concentration — precipitation_concentration","title":"Precipitation daily concentration — precipitation_concentration","text":"Function precipitation_concentration() calculates daily precipitation concentration (Martin-Vide et al. 2004).","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/precipitation_concentration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Precipitation daily concentration — precipitation_concentration","text":"","code":"precipitation_concentration(p)"},{"path":"https://emf-creaf.github.io/meteoland/reference/precipitation_concentration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Precipitation daily concentration — precipitation_concentration","text":"p numeric vector daily precipitation values.","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/precipitation_concentration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Precipitation daily concentration — precipitation_concentration","text":"Function precipitation_concentration() returns value 0 (equal distribution rainfall) 1 (one day concentrates rainfall).","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/precipitation_concentration.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Precipitation daily concentration — precipitation_concentration","text":"Martin-Vide J (2004) Spatial distribution daily precipitation concentration index peninsular Spain. International Journal Climatology 24, 959–971. doi:10.1002/joc.1030.","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/precipitation_concentration.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Precipitation daily concentration — precipitation_concentration","text":"Miquel De Cáceres Ainsa, CREAF.","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/precipitation_rainfall_erosivity.html","id":null,"dir":"Reference","previous_headings":"","what":"Precipitation rainfall erosivity — precipitation_rainfall_erosivity","title":"Precipitation rainfall erosivity — precipitation_rainfall_erosivity","text":"Function precipitation_rainfall_erosivity() calculates multi-year average monthly rainfall erosivity using MedREM model proposed Diodato Bellochi (2010) Mediterranean area (see also Guerra et al. 2016).","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/precipitation_rainfall_erosivity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Precipitation rainfall erosivity — precipitation_rainfall_erosivity","text":"","code":"precipitation_rainfall_erosivity(   meteo_data,   longitude,   scale = c(\"month\", \"year\"),   average = TRUE )"},{"path":"https://emf-creaf.github.io/meteoland/reference/precipitation_rainfall_erosivity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Precipitation rainfall erosivity — precipitation_rainfall_erosivity","text":"meteo_data meteo tibble dates meteorological variables returned interpolate_data \"interpolated_data\" column. longitude Longitude degrees. scale Character, either 'month' 'year'. Default 'month' average Boolean flag calculate multi-year averages applying MedREM's formula.","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/precipitation_rainfall_erosivity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Precipitation rainfall erosivity — precipitation_rainfall_erosivity","text":"vector values month (MJ·mm·ha-1·h-1·month-1) year (MJ·mm·ha-1·h-1·yr-1), depending scale","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/precipitation_rainfall_erosivity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Precipitation rainfall erosivity — precipitation_rainfall_erosivity","text":"MedREM model : Rm = b0·P·sqrt(d)·(alpha + b1*longitude), P accumulated precipitation d maximum daily precipitation. Parameters used MedREM model b0 = 0.117, b1 = -0.015, alpha = 2. Note mistake Guerra et al. (2016) regarding parameters b1 .","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/precipitation_rainfall_erosivity.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Precipitation rainfall erosivity — precipitation_rainfall_erosivity","text":"Diodato, N., Bellocchi, G., 2010. MedREM, rainfall erosivity model Mediterranean region. J. Hydrol. 387, 119–127, doi:10.1016/j.jhydrol.2010.04.003. Guerra CA, Maes J, Geijzendorffer , Metzger MJ (2016) assessment soil erosion prevention vegetation Mediterranean Europe: Current trends ecosystem service provision. Ecol Indic 60:213–222. doi: 10.1016/j.ecolind.2015.06.043.","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/precipitation_rainfall_erosivity.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Precipitation rainfall erosivity — precipitation_rainfall_erosivity","text":"Miquel De Cáceres Ainsa, CREAF. Víctor Granda García, CREAF.","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/precipitation_rainfall_erosivity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Precipitation rainfall erosivity — precipitation_rainfall_erosivity","text":"","code":"# \\donttest{ interpolated_example <-   interpolate_data(points_to_interpolate_example, meteoland_interpolator_example) #> ℹ Starting interpolation... #> ℹ Temperature interpolation is needed also... #> • Interpolating temperature... #> ℹ Precipitation interpolation is needed also... #> • Interpolating precipitation... #> ℹ Relative humidity interpolation is needed also... #> • Interpolating relative humidity... #> ℹ Radiation calculation is needed also... #> • Calculating radiation... #> ℹ Wind interpolation is needed also... #> • Interpolating wind... #> • Calculating PET... #> ✔ Interpolation done...  precipitation_rainfall_erosivity(   meteo_data = interpolated_example$interpolated_data[[1]],   longitude = 2.32,   scale = \"month\",   average = TRUE ) #>        4  #> 48.02902  # }"},{"path":"https://emf-creaf.github.io/meteoland/reference/radiation_julianDay.html","id":null,"dir":"Reference","previous_headings":"","what":"Solar radiation utility functions — radiation_julianDay","title":"Solar radiation utility functions — radiation_julianDay","text":"Set functions used calculation incoming solar radiation net radiation.","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/radiation_julianDay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Solar radiation utility functions — radiation_julianDay","text":"","code":"radiation_julianDay(year, month, day)  radiation_dateStringToJulianDays(dateStrings)  radiation_solarDeclination(J)  radiation_solarConstant(J)  radiation_sunRiseSet(latrad, slorad, asprad, delta)  radiation_solarElevation(latrad, delta, hrad)  radiation_daylength(latrad, slorad, asprad, delta)  radiation_daylengthseconds(latrad, slorad, asprad, delta)  radiation_potentialRadiation(solarConstant, latrad, slorad, asprad, delta)  radiation_solarRadiation(   solarConstant,   latrad,   elevation,   slorad,   asprad,   delta,   diffTemp,   diffTempMonth,   vpa,   precipitation )  radiation_directDiffuseInstant(   solarConstant,   latrad,   slorad,   asprad,   delta,   hrad,   R_s,   clearday )  radiation_directDiffuseDay(   solarConstant,   latrad,   slorad,   asprad,   delta,   R_s,   clearday,   nsteps = 24L )  radiation_skyLongwaveRadiation(Tair, vpa, c = 0)  radiation_outgoingLongwaveRadiation(   solarConstant,   latrad,   elevation,   slorad,   asprad,   delta,   vpa,   tmin,   tmax,   R_s )  radiation_netRadiation(   solarConstant,   latrad,   elevation,   slorad,   asprad,   delta,   vpa,   tmin,   tmax,   R_s,   alpha = 0.08 )"},{"path":"https://emf-creaf.github.io/meteoland/reference/radiation_julianDay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Solar radiation utility functions — radiation_julianDay","text":"year, month, day Year, month day integers. dateStrings character vector dates format \"YYYY-MM-DD\". J Julian day (integer), number days since January 1, 4713 BCE noon UTC. latrad Latitude (radians North). slorad Slope (radians). asprad Aspect (radians North). delta Solar declination (radians). hrad Solar hour (radians). solarConstant Solar constant (kW·m-2). elevation Elevation sea level (m). diffTemp Difference maximum minimum temperature (ºC). diffTempMonth Difference maximum minimum temperature, averaged 30 days (ºC). vpa Average daily vapor pressure (kPa). precipitation Precipitation (mm). R_s Daily incident solar radiation (MJ·m-2). clearday Boolean flag indicate clearsky day (vs. overcast). nsteps Number daily substeps. Tair Air temperature (degrees Celsius). c Proportion sky covered clouds (0-1). tmin, tmax Minimum maximum daily temperature (ºC). alpha Surface albedo (0 1).","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/radiation_julianDay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Solar radiation utility functions — radiation_julianDay","text":"Values returned function : radiation_dateStringToJulianDays: vector Julian days (.e. number days since January 1, 4713 BCE noon UTC). radiation_daylength: Day length (hours). radiation_daylengthseconds: Day length (seconds). radiation_directDiffuseInstant: vector instantaneous direct diffusive radiation rates (SWR PAR). radiation_directDiffuseDay: data frame instantaneous direct diffusive radiation rates (SWR PAR) subdaily time step. radiation_potentialRadiation: Daily (potential) solar radiation (MJ·m-2). radiation_julianDay: Number days since January 1, 4713 BCE noon UTC. radiation_skyLongwaveRadiation: Instantaneous incoming (sky) longwave radiation (W·m-2). radiation_outgoingLongwaveRadiation: Daily outgoing longwave radiation (MJ·m-2·day-1). radiation_netRadiation: Daily net solar radiation (MJ·m-2·day-1). radiation_solarConstant: Solar constant (kW·m-2). radiation_solarDeclination: Solar declination (radians). radiation_solarElevation: Angle elevation sun respect horizon (radians). radiation_solarRadiation: Daily incident solar radiation (MJ·m-2·day-1). radiation_sunRiseSet: Sunrise sunset hours hour angle (radians).","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/radiation_julianDay.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Solar radiation utility functions — radiation_julianDay","text":"radiation_dateStringToJulianDays(): Date string julian days radiation_solarDeclination(): solar declination radiation_solarConstant(): solar constant radiation_sunRiseSet(): sun rise set radiation_solarElevation(): solar elevation radiation_daylength(): Day length radiation_daylengthseconds(): Day length seconds radiation_potentialRadiation(): Potential radiation radiation_solarRadiation(): solar Radiation radiation_directDiffuseInstant(): Direct diffuse instant radiation_directDiffuseDay(): Direct diffuse day radiation_skyLongwaveRadiation(): Sky longwave radiation radiation_outgoingLongwaveRadiation(): Outgoing longwave radiation radiation_netRadiation(): Net radiation","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/radiation_julianDay.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Solar radiation utility functions — radiation_julianDay","text":"Code radiation_julianDay(), radiation_solarConstant() radiation_solarDeclination() translated C++ R code package 'insol' (J. G. Corripio).","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/radiation_julianDay.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Solar radiation utility functions — radiation_julianDay","text":"Danby, J. M. Eqn. 6.16.4 Fundamentals Celestial Mechanics, 2nd ed. Richmond, VA: Willmann-Bell, p. 207, 1988. Garnier, B.J., Ohmura, ., 1968. method calculating direct shortwave radiation income slopes. J. Appl. Meteorol. 7: 796-800 McMahon, T. ., M. C. Peel, L. Lowe, R. Srikanthan, T. R. McVicar. 2013. Estimating actual, potential, reference crop pan evaporation using standard meteorological data: pragmatic synthesis. Hydrology & Earth System Sciences 17:1331–1363. See also: http://www.fao.org/docrep/x0490e/x0490e06.htm. Reda, . Andreas, . 2003. Solar Position Algorithm Solar Radiation Applications. 55 pp.; NREL Report . TP-560-34302, Revised January 2008. http://www.nrel.gov/docs/fy08osti/34302.pdf Spitters, C.J.T., Toussaint, H..J.M. Goudriaan, J. (1986). Separating diffuse direct components global radiation implications modeling canopy photosynthesis. . Components incoming radiation. Agricultural Forest Meteorology, 38, 231–242.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/meteoland/reference/radiation_julianDay.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Solar radiation utility functions — radiation_julianDay","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/raster_to_interpolate_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Example raster data set for interpolation of weather variables — raster_to_interpolate_example","title":"Example raster data set for interpolation of weather variables — raster_to_interpolate_example","text":"Example raster data set spatial location topography records Catalonia (NE Spain). Cell size 1km x 1km raster size 10x10 cells.","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/raster_to_interpolate_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example raster data set for interpolation of weather variables — raster_to_interpolate_example","text":"stars object","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/raster_to_interpolate_example.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example raster data set for interpolation of weather variables — raster_to_interpolate_example","text":"ICGC","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/raster_to_interpolate_example.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example raster data set for interpolation of weather variables — raster_to_interpolate_example","text":"","code":"data(raster_to_interpolate_example)"},{"path":"https://emf-creaf.github.io/meteoland/reference/read_interpolator.html","id":null,"dir":"Reference","previous_headings":"","what":"Read interpolator files — read_interpolator","title":"Read interpolator files — read_interpolator","text":"Read interpolator files created write_interpolator","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/read_interpolator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read interpolator files — read_interpolator","text":"","code":"read_interpolator(filename)"},{"path":"https://emf-creaf.github.io/meteoland/reference/read_interpolator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read interpolator files — read_interpolator","text":"filename interpolator file name","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/read_interpolator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read interpolator files — read_interpolator","text":"interpolator (stars) object","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/read_interpolator.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read interpolator files — read_interpolator","text":"function takes file name nc file storing interpolator object load work environment","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/meteoland/reference/read_interpolator.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read interpolator files — read_interpolator","text":"Victor Granda García, EMF-CREAF","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/read_interpolator.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read interpolator files — read_interpolator","text":"","code":"# \\donttest{ # example interpolator data(meteoland_interpolator_example)  # temporal folder tmp_dir <- tempdir()  # write interpolator write_interpolator(   meteoland_interpolator_example,   file.path(tmp_dir, \"meteoland_interpolator_example.nc\") ) #> ℹ Creating nc file following the NetCDF-CF conventions <https://cfconventions.org/cf-conventions/cf-conventions.html> #> ℹ Adding spatial info to nc file #> ✔ Done  # check file exists file.exists(file.path(tmp_dir, \"meteoland_interpolator_example.nc\")) #> [1] TRUE  # read it again read_interpolator(file.path(tmp_dir, \"meteoland_interpolator_example.nc\")) #> stars object with 2 dimensions and 13 attributes #> attribute(s): #>                                 Min.    1st Qu.    Median       Mean   3rd Qu. #> Temperature               -14.200000   8.800000  12.60000  11.324991  14.80000 #> MinTemperature            -15.900000   3.300000   6.90000   5.883189   9.40000 #> MaxTemperature            -13.000000  13.900000  18.30000  17.364292  21.80000 #> RelativeHumidity           18.000000  57.000000  67.00000  67.720000  78.00000 #> Precipitation               0.000000   0.000000   0.00000   1.925434   0.10000 #> Radiation                   7.707484  17.717235  22.04597  20.762628  23.61352 #> WindDirection               0.000000 116.000000 217.00000 196.861908 275.00000 #> WindSpeed                   0.200000   0.900000   1.30000   1.603907   2.00000 #> elevation                   0.000000 147.000000 317.00000 515.629630 668.00000 #> aspect                      0.000000   0.000000   0.00000   0.000000   0.00000 #> slope                       0.000000   0.000000   0.00000   0.000000   0.00000 #> SmoothedPrecipitation       0.100000   1.862500   5.55000   6.197496   9.07500 #> SmoothedTemperatureRange    4.695000   9.863542  11.66307  11.400932  13.26868 #>                                 Max. NA's #> Temperature                 23.40000  148 #> MinTemperature              20.10000  138 #> MaxTemperature              29.90000  139 #> RelativeHumidity           100.00000  145 #> Precipitation              160.90000   79 #> Radiation                   28.10878  139 #> WindDirection              359.00000 4171 #> WindSpeed                    6.90000 4160 #> elevation                 2535.00000    0 #> aspect                       0.00000    0 #> slope                        0.00000    0 #> SmoothedPrecipitation       65.10000  818 #> SmoothedTemperatureRange    17.72778  124 #> dimension(s): #>         from  to         offset  delta  refsys point #> date       1  30 2022-04-01 UTC 1 days POSIXct FALSE #> station    1 189             NA     NA  WGS 84  TRUE #>                                                       values #> date                                                    NULL #> station POINT (0.95172 41.6566),...,POINT (1.89716 42.32211) # }"},{"path":"https://emf-creaf.github.io/meteoland/reference/set_interpolation_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Setting interpolation parameters in an interpolator object — set_interpolation_params","title":"Setting interpolation parameters in an interpolator object — set_interpolation_params","text":"Changing updating interpolation parameters interpolator object","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/set_interpolation_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setting interpolation parameters in an interpolator object — set_interpolation_params","text":"","code":"set_interpolation_params(   interpolator,   params = NULL,   verbose = getOption(\"meteoland_verbosity\", TRUE) )"},{"path":"https://emf-creaf.github.io/meteoland/reference/set_interpolation_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setting interpolation parameters in an interpolator object — set_interpolation_params","text":"interpolator interpolator object update params list parameters provided user verbose Logical indicating function must show messages info. Default value checks \"meteoland_verbosity\" option set, defaults TRUE. can turned function FALSE, session wide options(meteoland_verbosity = FALSE)","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/set_interpolation_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setting interpolation parameters in an interpolator object — set_interpolation_params","text":"interpolator object provided, updated interpolation parameters","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/set_interpolation_params.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Setting interpolation parameters in an interpolator object — set_interpolation_params","text":"function ensures parameters provided, default ones used (see defaultInterpolationParams). Also, params partially provided, function ensures rest parameters changed.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/meteoland/reference/set_interpolation_params.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Setting interpolation parameters in an interpolator object — set_interpolation_params","text":"Victor Granda García, EMF-CREAF","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/set_interpolation_params.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Setting interpolation parameters in an interpolator object — set_interpolation_params","text":"","code":"# example interpolator data(meteoland_interpolator_example) # store the actual parameters old_parameters <- get_interpolation_params(meteoland_interpolator_example) # we can provide only the parameter we want to change meteoland_interpolator_example <- set_interpolation_params(   meteoland_interpolator_example,   list(debug = TRUE) ) #> ℹ Some interpolation parameters are missing, using default values for those # check get_interpolation_params(meteoland_interpolator_example)$debug #> [1] TRUE # compare with old old_parameters$debug #> [1] FALSE # the rest should be the same setdiff(old_parameters, get_interpolation_params(meteoland_interpolator_example)) #> $debug #> [1] FALSE #>"},{"path":"https://emf-creaf.github.io/meteoland/reference/summarise_interpolated_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise interpolated data by temporal dimension — summarise_interpolated_data","title":"Summarise interpolated data by temporal dimension — summarise_interpolated_data","text":"Summarises interpolated meteorology one locations desired temporal scale","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/summarise_interpolated_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise interpolated data by temporal dimension — summarise_interpolated_data","text":"","code":"summarise_interpolated_data(   interpolated_data,   fun = \"mean\",   frequency = NULL,   vars_to_summary = c(\"MeanTemperature\", \"MinTemperature\", \"MaxTemperature\",     \"Precipitation\", \"MeanRelativeHumidity\", \"MinRelativeHumidity\",     \"MaxRelativeHumidity\", \"Radiation\", \"WindSpeed\", \"WindDirection\", \"PET\"),   dates_to_summary = NULL,   months_to_summary = 1:12,   verbose = getOption(\"meteoland_verbosity\", TRUE),   ... )"},{"path":"https://emf-creaf.github.io/meteoland/reference/summarise_interpolated_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise interpolated data by temporal dimension — summarise_interpolated_data","text":"interpolated_data interpolated data object returned interpolate_data. fun function use summarising data. frequency string indicating interval specification (allowed ones \"week\", \"month\", \"quarter\" \"year\"). NULL (default), aggregation done one interval dates present. vars_to_summary character vector one variable names summarise. default, interpolated variables summarised. dates_to_summary Date object define dates summarised. NULL (default), dates interpolated data processed. months_to_summary numeric vector month numbers subset data summarising. (e.g. c(7,8) July August). parameter allows studying particular seasons, combined frequency. example frequency = \"years\" months = 6:8 leads summarizing summer months year. verbose Logical indicating function must show messages info. Default value checks \"meteoland_verbosity\" option set, defaults TRUE. can turned function FALSE, session wide options(meteoland_verbosity = FALSE) ... Arguments needed fun","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/summarise_interpolated_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise interpolated data by temporal dimension — summarise_interpolated_data","text":"nested interpolated data, sf object new column temporal summaries. unnested interpolated data, data.frame summarised meteo variables. interpolated raster (stars object), raster temporal dimension aggregated desired.","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/summarise_interpolated_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarise interpolated data by temporal dimension — summarise_interpolated_data","text":"interpolated_data nested interpolated data sf object, returned interpolate_data, temporal summary done location present interpolated data. interpolated_data unnested interpolated data sf object, temporal summary done locations together. interpolated_data single location data.frame containing dates interpolated variables, temporal summary done location. interpolated_data stars object returned interpolate_data, temporal summary done raster.","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/summarise_interpolated_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summarise interpolated data by temporal dimension — summarise_interpolated_data","text":"Víctor Granda García, CREAF","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/summarise_interpolated_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise interpolated data by temporal dimension — summarise_interpolated_data","text":"","code":"# \\donttest{ # points interpolation aggregation points_to_interpolate_example |>   interpolate_data(meteoland_interpolator_example, verbose = FALSE) |>   summarise_interpolated_data() #> Simple feature collection with 15 features and 6 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 0.7578958 ymin: 41.31541 xmax: 2.98657 ymax: 42.6336 #> Geodetic CRS:  WGS 84 #> # A tibble: 15 × 7 #>    plot_id elevation slope aspect             geometry interpolated_data  #>  * <chr>       <dbl> <dbl>  <dbl>          <POINT [°]> <list>             #>  1 P_05284      889. 25.2   313.   (2.320167 42.24139) <tibble [30 × 13]> #>  2 P_06572      680. 18.0    79.9  (2.552233 42.02596) <tibble [30 × 13]> #>  3 P_07201      141.  4.17   52.9  (2.721874 41.88258) <tibble [30 × 13]> #>  4 P_07512      254. 14.3   261.     (2.98657 41.9006) <tibble [30 × 13]> #>  5 P_08207     1860. 36.4   293.   (2.209903 42.33968) <tibble [30 × 13]> #>  6 P_08299      183.  4.12   92.9  (2.817143 42.24325) <tibble [30 × 13]> #>  7 P_09341      819  23.4   128.   (1.126766 42.42612) <tibble [30 × 13]> #>  8 P_10272      860  34.8   347.   (1.398528 42.26791) <tibble [30 × 13]> #>  9 P_10861      706  22.4    22.6 (0.9314126 42.04226) <tibble [30 × 13]> #> 10 P_11651      585  22.0   199.   (0.7578958 41.8612) <tibble [30 × 13]> #> 11 P_12150      674. 30.3   154.   (1.481719 41.81838) <tibble [30 × 13]> #> 12 P_12227      752.  6.04   27.7    (1.283161 41.591) <tibble [30 × 13]> #> 13 P_12417      702  11.6    63.1 (0.8727224 41.35875) <tibble [30 × 13]> #> 14 P_13007      972.  4.21  338.    (1.120383 42.6336) <tibble [30 × 13]> #> 15 P_14029      556. 14.1    41.4  (1.480716 41.31541) <tibble [30 × 13]> #> # ℹ 1 more variable: all_mean <list>  # raster interpolation aggregation raster_to_interpolate_example |>   interpolate_data(meteoland_interpolator_example, verbose = FALSE) |>   summarise_interpolated_data() #> stars object with 3 dimensions and 11 attributes #> attribute(s): #>                             Min.   1st Qu.    Median      Mean   3rd Qu. #> MeanTemperature       11.5704340 13.085384 13.580366 13.471788 14.000217 #> MinTemperature         5.4241252  5.723106  5.834485  5.860040  6.015028 #> MaxTemperature        15.4618660 17.809716 18.593723 18.420680 19.205037 #> Precipitation          1.0384680  1.131101  1.199751  1.217155  1.293790 #> MeanRelativeHumidity  60.7962965 63.361941 65.087755 65.520741 67.043155 #> MinRelativeHumidity   43.3452715 46.019400 48.149531 48.591400 50.195214 #> MaxRelativeHumidity   96.2942503 96.710474 96.899356 96.878881 97.036136 #> Radiation             13.9846077 18.365970 20.168242 19.595816 21.198293 #> WindSpeed              0.9485546  1.032881  1.262741  1.385929  1.680294 #> WindDirection                 NA        NA        NA       NaN        NA #> PET                    1.9918440  2.851873  3.153198  3.087621  3.402888 #>                            Max. NA's #> MeanTemperature       14.659490    0 #> MinTemperature         6.280687    0 #> MaxTemperature        20.321977    0 #> Precipitation          1.445986    0 #> MeanRelativeHumidity  73.956489    0 #> MinRelativeHumidity   58.061458    0 #> MaxRelativeHumidity   97.482022    0 #> Radiation             22.812720    0 #> WindSpeed              2.382469    1 #> WindDirection                NA  121 #> PET                    4.214379    0 #> dimension(s): #>      from to offset    delta  refsys point          values x/y #> time    1  1     NA       NA POSIXct    NA 2022-04-01 CEST     #> x       1 11  1.671  0.01058  WGS 84 FALSE            NULL [x] #> y       1 11  41.76 -0.01058  WGS 84 FALSE            NULL [y] # }"},{"path":"https://emf-creaf.github.io/meteoland/reference/summarise_interpolator.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise interpolator objects by temporal dimension — summarise_interpolator","title":"Summarise interpolator objects by temporal dimension — summarise_interpolator","text":"Summarises interpolator object desired temporal scale.","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/summarise_interpolator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise interpolator objects by temporal dimension — summarise_interpolator","text":"","code":"summarise_interpolator(   interpolator,   fun = \"mean\",   frequency = NULL,   vars_to_summary = c(\"Temperature\", \"MinTemperature\", \"MaxTemperature\", \"Precipitation\",     \"RelativeHumidity\", \"MinRelativeHumidity\", \"MaxRelativeHumidity\", \"Radiation\",     \"WindSpeed\", \"WindDirection\", \"PET\", \"SmoothedPrecipitation\",     \"SmoothedTemperatureRange\", \"elevation\", \"slope\", \"aspect\"),   dates_to_summary = NULL,   months_to_summary = 1:12,   verbose = getOption(\"meteoland_verbosity\", TRUE),   ... )"},{"path":"https://emf-creaf.github.io/meteoland/reference/summarise_interpolator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise interpolator objects by temporal dimension — summarise_interpolator","text":"interpolator interpolator object created create_meteo_interpolator. fun function use summarising data. frequency string indicating interval specification (allowed ones \"week\", \"month\", \"quarter\" \"year\"). NULL (default), aggregation done one interval dates present. vars_to_summary character vector one variable names summarise. default, interpolated variables summarised. dates_to_summary Date object define dates summarised. NULL (default), dates interpolated data processed. months_to_summary numeric vector month numbers subset data summarising. (e.g. c(7,8) July August). parameter allows studying particular seasons, combined frequency. example frequency = \"years\" months = 6:8 leads summarizing summer months year. verbose Logical indicating function must show messages info. Default value checks \"meteoland_verbosity\" option set, defaults TRUE. can turned function FALSE, session wide options(meteoland_verbosity = FALSE) ... Arguments needed fun","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/summarise_interpolator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise interpolator objects by temporal dimension — summarise_interpolator","text":"summarise_interpolator function returns interpolator object provided temporal dimension aggregated desired frequency.","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/summarise_interpolator.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summarise interpolator objects by temporal dimension — summarise_interpolator","text":"Víctor Granda García, CREAF","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/summarise_interpolator.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise interpolator objects by temporal dimension — summarise_interpolator","text":"","code":"# \\donttest{ # example interpolator meteoland_interpolator_example #> stars object with 2 dimensions and 13 attributes #> attribute(s): #>                                 Min.    1st Qu.    Median       Mean   3rd Qu. #> Temperature               -14.200000   8.800000  12.60000  11.324991  14.80000 #> MinTemperature            -15.900000   3.300000   6.90000   5.883189   9.40000 #> MaxTemperature            -13.000000  13.900000  18.30000  17.364292  21.80000 #> RelativeHumidity           18.000000  57.000000  67.00000  67.720000  78.00000 #> Precipitation               0.000000   0.000000   0.00000   1.925434   0.10000 #> Radiation                   7.707484  17.717235  22.04597  20.762628  23.61352 #> WindDirection               0.000000 116.000000 217.00000 196.861908 275.00000 #> WindSpeed                   0.200000   0.900000   1.30000   1.603907   2.00000 #> elevation                   0.000000 147.000000 317.00000 515.629630 668.00000 #> aspect                      0.000000   0.000000   0.00000   0.000000   0.00000 #> slope                       0.000000   0.000000   0.00000   0.000000   0.00000 #> SmoothedPrecipitation       0.100000   1.862500   5.55000   6.197496   9.07500 #> SmoothedTemperatureRange    4.695000   9.863542  11.66307  11.400932  13.26868 #>                                 Max. NA's #> Temperature                 23.40000  148 #> MinTemperature              20.10000  138 #> MaxTemperature              29.90000  139 #> RelativeHumidity           100.00000  145 #> Precipitation              160.90000   79 #> Radiation                   28.10878  139 #> WindDirection              359.00000 4171 #> WindSpeed                    6.90000 4160 #> elevation                 2535.00000    0 #> aspect                       0.00000    0 #> slope                        0.00000    0 #> SmoothedPrecipitation       65.10000  818 #> SmoothedTemperatureRange    17.72778  124 #> dimension(s): #>         from  to         offset  delta  refsys point #> date       1  30 2022-04-01 UTC 1 days POSIXct FALSE #> station    1 189             NA     NA  WGS 84  TRUE #>                                                       values #> date                                                    NULL #> station POINT (0.95172 41.6566),...,POINT (1.89716 42.32211)  # aggregate all dates in the interpolator, calculating the maximum values summarise_interpolator(meteoland_interpolator_example, fun = \"max\") #> stars object with 2 dimensions and 13 attributes #> attribute(s): #>                                Min.    1st Qu.    Median       Mean   3rd Qu. #> Temperature                 4.40000  16.200000  17.50000  16.893443  18.90000 #> MinTemperature              1.90000  10.000000  11.75000  11.290761  12.92500 #> MaxTemperature              8.20000  24.300000  25.80000  24.790761  27.50000 #> Precipitation               6.80000  18.025000  23.80000  25.743548  29.47500 #> RelativeHumidity           84.00000  92.000000  96.00000  95.295082  99.00000 #> Radiation                  22.23314  24.933313  25.69993  25.581177  26.20250 #> WindSpeed                   1.40000   3.200000   3.90000   3.991837   5.10000 #> WindDirection             216.00000 306.000000 340.00000 327.346939 354.00000 #> SmoothedPrecipitation       4.45000   9.876667  11.36000  12.175889  14.76500 #> SmoothedTemperatureRange    5.93750  10.535570  12.40588  12.117069  14.03814 #> elevation                   0.00000 147.000000 317.00000 515.629630 668.00000 #> slope                       0.00000   0.000000   0.00000   0.000000   0.00000 #> aspect                      0.00000   0.000000   0.00000   0.000000   0.00000 #>                                 Max. NA's #> Temperature                 23.40000    6 #> MinTemperature              20.10000    5 #> MaxTemperature              29.90000    5 #> Precipitation              160.90000    3 #> RelativeHumidity           100.00000    6 #> Radiation                   28.10878    5 #> WindSpeed                    6.90000  140 #> WindDirection              359.00000  140 #> SmoothedPrecipitation       29.30000  129 #> SmoothedTemperatureRange    17.72778    5 #> elevation                 2535.00000    0 #> slope                        0.00000    0 #> aspect                       0.00000    0 #> dimension(s): #>         from  to  refsys point #> date       1   1 POSIXct    NA #> station    1 189  WGS 84  TRUE #>                                                       values #> date                                         2022-04-01 CEST #> station POINT (0.95172 41.6566),...,POINT (1.89716 42.32211)  # aggregate weekly, calculating mean values summarise_interpolator(meteoland_interpolator_example, frequency = \"week\") #> stars object with 2 dimensions and 13 attributes #> attribute(s): #>                                 Min.    1st Qu.      Median       Mean #> Temperature               -13.600000   7.714286  12.1071429  10.581211 #> MinTemperature            -15.666667   2.246429   6.3666667   5.168547 #> MaxTemperature            -10.000000  13.500000  18.3357143  16.610800 #> Precipitation               0.000000   0.000000   0.2666667   1.727146 #> RelativeHumidity           36.666667  57.857143  66.6666667  65.878442 #> Radiation                  12.820177  19.166860  20.6693138  20.719565 #> WindSpeed                   0.600000   1.161905   1.5142857   1.739622 #> WindDirection              43.285714 168.285714 206.8571429 202.485561 #> SmoothedPrecipitation       0.100000   2.810238   5.4536905   6.050388 #> SmoothedTemperatureRange    4.822367   9.903581  11.7322300  11.440517 #> elevation                   0.000000 147.000000 317.0000000 515.629630 #> slope                       0.000000   0.000000   0.0000000   0.000000 #> aspect                      0.000000   0.000000   0.0000000   0.000000 #>                              3rd Qu.       Max. NA's #> Temperature                14.367857   18.15000   25 #> MinTemperature              8.707143   14.83333   23 #> MaxTemperature             20.571429   25.03333   23 #> Precipitation               2.759524   29.51429   13 #> RelativeHumidity           75.000000   94.85714   25 #> Radiation                  22.198744   27.06309   23 #> WindSpeed                   2.085714    5.70000  694 #> WindDirection             242.000000  350.00000  696 #> SmoothedPrecipitation       8.487679   46.68286  299 #> SmoothedTemperatureRange   13.316941   17.39137   21 #> elevation                 668.000000 2535.00000    0 #> slope                       0.000000    0.00000    0 #> aspect                      0.000000    0.00000    0 #> dimension(s): #>         from  to          offset  delta  refsys point #> date       1   5 2022-03-28 CEST 7 days POSIXct    NA #> station    1 189              NA     NA  WGS 84  TRUE #>                                                       values #> date                                                    NULL #> station POINT (0.95172 41.6566),...,POINT (1.89716 42.32211)  # }"},{"path":"https://emf-creaf.github.io/meteoland/reference/utils_saturationVP.html","id":null,"dir":"Reference","previous_headings":"","what":"Physical utility functions — utils_saturationVP","title":"Physical utility functions — utils_saturationVP","text":"Set functions used calculation physical variables.","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/utils_saturationVP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Physical utility functions — utils_saturationVP","text":"","code":"utils_saturationVP(temperature)  utils_averageDailyVP(Tmin, Tmax, RHmin, RHmax)  utils_atmosphericPressure(elevation)  utils_airDensity(temperature, Patm)  utils_averageDaylightTemperature(Tmin, Tmax)  utils_latentHeatVaporisation(temperature)  utils_latentHeatVaporisationMol(temperature)  utils_psychrometricConstant(temperature, Patm)  utils_saturationVaporPressureCurveSlope(temperature)"},{"path":"https://emf-creaf.github.io/meteoland/reference/utils_saturationVP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Physical utility functions — utils_saturationVP","text":"temperature Air temperature (ºC). Tmin, Tmax Minimum maximum daily temperature (ºC). RHmin, RHmax Minimum maximum relative humidity (%). elevation Elevation sea level (m). Patm Atmospheric air pressure (kPa).","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/utils_saturationVP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Physical utility functions — utils_saturationVP","text":"Values returned function : utils_airDensity: air density (kg·m-3). utils_atmosphericPressure: Air atmospheric pressure (kPa). utils_averageDailyVP: average (actual) vapour pressure (kPa). utils_averageDaylightTemperature: average daylight air temperature (ºC). utils_latentHeatVaporisation: Latent heat vaporisation (MJ·kg-1).  utils_latentHeatVaporisationMol: Latent heat vaporisation (J·mol-1). utils_psychrometricConstant: Psychrometric constant (kPa·ºC-1). utils_saturationVP: saturation vapour pressure (kPa). utils_saturationVaporPressureCurveSlope: Slope saturation vapor pressure curve (kPa·ºC-1).","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/utils_saturationVP.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Physical utility functions — utils_saturationVP","text":"utils_averageDailyVP(): Average daily VP utils_atmosphericPressure(): Atmospheric pressure utils_airDensity(): Air density utils_averageDaylightTemperature(): Daylight temperature utils_latentHeatVaporisation(): latent heat vaporisation utils_latentHeatVaporisationMol(): Heat vaporisation mol utils_psychrometricConstant(): psychrometric constant utils_saturationVaporPressureCurveSlope(): Saturation VP curve slope","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/utils_saturationVP.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Physical utility functions — utils_saturationVP","text":"McMurtrie, R. E., D. . Rook, F. M. Kelliher. 1990. Modelling yield Pinus radiata site limited water nitrogen. Forest Ecology Management 30:381–413. McMahon, T. ., M. C. Peel, L. Lowe, R. Srikanthan, T. R. McVicar. 2013. Estimating actual, potential, reference crop pan evaporation using standard meteorological data: pragmatic synthesis. Hydrology & Earth System Sciences 17:1331–1363. See also: http://www.fao.org/docrep/x0490e/x0490e06.htm","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/utils_saturationVP.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Physical utility functions — utils_saturationVP","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/with_meteo.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensure meteo object is ready to create an interpolator object — with_meteo","title":"Ensure meteo object is ready to create an interpolator object — with_meteo","text":"Check integrity meteo objects","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/with_meteo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensure meteo object is ready to create an interpolator object — with_meteo","text":"","code":"with_meteo(meteo, verbose = getOption(\"meteoland_verbosity\", TRUE))"},{"path":"https://emf-creaf.github.io/meteoland/reference/with_meteo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensure meteo object is ready to create an interpolator object — with_meteo","text":"meteo meteo object verbose Logical indicating function must show messages info. Default value checks \"meteoland_verbosity\" option set, defaults TRUE. can turned function FALSE, session wide options(meteoland_verbosity = FALSE)","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/with_meteo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensure meteo object is ready to create an interpolator object — with_meteo","text":"invisible meteo object ready pipe interpolator creation","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/with_meteo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Ensure meteo object is ready to create an interpolator object — with_meteo","text":"function first step creation meteoland interpolator, ensuring meteo provided contains required elements","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/meteoland/reference/with_meteo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ensure meteo object is ready to create an interpolator object — with_meteo","text":"","code":"# example meteo data(meteoland_meteo_example) with_meteo(meteoland_meteo_example) #> ℹ Checking meteorology object... #> ✔ meteorology object ok"},{"path":"https://emf-creaf.github.io/meteoland/reference/worldmet2meteoland.html","id":null,"dir":"Reference","previous_headings":"","what":"From worldmet to meteoland meteo objects — worldmet2meteoland","title":"From worldmet to meteoland meteo objects — worldmet2meteoland","text":"Adapting importNOAA meteo objects meteoland meteo objects","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/worldmet2meteoland.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"From worldmet to meteoland meteo objects — worldmet2meteoland","text":"","code":"worldmet2meteoland(meteo, complete = FALSE)"},{"path":"https://emf-creaf.github.io/meteoland/reference/worldmet2meteoland.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"From worldmet to meteoland meteo objects — worldmet2meteoland","text":"meteo worldmet meteo object. complete logical indicating meteo data missing variables calculated (possible). Default FALSE.","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/worldmet2meteoland.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"From worldmet to meteoland meteo objects — worldmet2meteoland","text":"compatible meteo object use meteoland.","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/worldmet2meteoland.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"From worldmet to meteoland meteo objects — worldmet2meteoland","text":"function converts importNOAA meteo objects compatible meteoland meteo objects selecting needed variables adapting names comply meteoland requirements. Also aggregates subdaily data well complete missing variables possible (setting complete = TRUE)","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/worldmet2meteoland.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"From worldmet to meteoland meteo objects — worldmet2meteoland","text":"","code":"if (interactive()) {   # worldmet data   library(worldmet)   worldmet_stations <- worldmet::getMeta(lat = 42, lon = 0, n = 2, plot = FALSE)   worldmet_subdaily_2022 <-     worldmet::importNOAA(worldmet_stations$code, year = 2022, hourly = TRUE)    # just convert   worldmet2meteoland(worldmet_subdaily_2022)   # convert and complete   worldmet2meteoland(worldmet_subdaily_2022, complete = TRUE)  } #> Importing NOAA Data ■■■■■■■■■■■■■■■■                  50% |  ETA:  6s #> Warning: Provided meteo data seems to be in subdaily time steps, aggregating to daily #> scale #> Warning: Provided meteo data seems to be in subdaily time steps, aggregating to daily #> scale #> ℹ Completing missing variables if possible: #> • RelativeHumidity #> • MinRelativeHumidity #> • MaxRelativeHumidity #> • Radiation #> ✔ Done #> Simple feature collection with 730 features and 15 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -0.3333333 ymin: 41.72778 xmax: 0.53583 ymax: 42.08333 #> Geodetic CRS:  WGS 84 #> # A tibble: 730 × 16 #>    dates               stationID    elevation MeanTemperature MinTemperature #>  * <dttm>              <chr>            <dbl>           <dbl>          <dbl> #>  1 2022-01-01 00:00:00 080940-99999       554            7.78          2.57  #>  2 2022-01-01 00:00:00 084515-99999       350            3.17          1     #>  3 2022-01-02 00:00:00 080940-99999       554            7.87          3.4   #>  4 2022-01-02 00:00:00 084515-99999       350            2.39         -1     #>  5 2022-01-03 00:00:00 080940-99999       554            7.13          2.77  #>  6 2022-01-03 00:00:00 084515-99999       350            5.15          0     #>  7 2022-01-04 00:00:00 080940-99999       554            8.43          3.87  #>  8 2022-01-04 00:00:00 084515-99999       350            6.58          1     #>  9 2022-01-05 00:00:00 080940-99999       554            4.57         -0.433 #> 10 2022-01-05 00:00:00 084515-99999       350            6.17          0.5   #> # ℹ 720 more rows #> # ℹ 11 more variables: MaxTemperature <dbl>, MeanRelativeHumidity <dbl>, #> #   MinRelativeHumidity <dbl>, MaxRelativeHumidity <dbl>, Precipitation <dbl>, #> #   WindSpeed <dbl>, WindDirection <dbl>, Radiation <dbl>, #> #   geometry <POINT [°]>, aspect <dbl>, slope <dbl>"},{"path":"https://emf-creaf.github.io/meteoland/reference/write_interpolator.html","id":null,"dir":"Reference","previous_headings":"","what":"Write the interpolator object — write_interpolator","title":"Write the interpolator object — write_interpolator","text":"Write interpolator object file","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/write_interpolator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write the interpolator object — write_interpolator","text":"","code":"write_interpolator(interpolator, filename, .overwrite = FALSE)"},{"path":"https://emf-creaf.github.io/meteoland/reference/write_interpolator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write the interpolator object — write_interpolator","text":"interpolator meteoland interpolator object, created create_meteo_interpolator filename file name interpolator nc file .overwrite logical indicating file overwritten already exists","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/write_interpolator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write the interpolator object — write_interpolator","text":"invisible interpolator object, allow using function step pipe","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/write_interpolator.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write the interpolator object — write_interpolator","text":"function writes interpolator object created create_meteo_interpolator NetCDF-CF standard compliant format, specified https://cfconventions.org/cf-conventions/cf-conventions.html","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/meteoland/reference/write_interpolator.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Write the interpolator object — write_interpolator","text":"Victor Granda García, EMF-CREAF","code":""},{"path":"https://emf-creaf.github.io/meteoland/reference/write_interpolator.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write the interpolator object — write_interpolator","text":"","code":"# \\donttest{ # example interpolator data(meteoland_interpolator_example)  # temporal folder tmp_dir <- tempdir()  # write interpolator write_interpolator(   meteoland_interpolator_example,   file.path(tmp_dir, \"meteoland_interpolator_example.nc\"),   .overwrite = TRUE ) #> ℹ Creating nc file following the NetCDF-CF conventions <https://cfconventions.org/cf-conventions/cf-conventions.html> #> ℹ Adding spatial info to nc file #> ✔ Done  # check file exists file.exists(file.path(tmp_dir, \"meteoland_interpolator_example.nc\")) #> [1] TRUE  # read it again read_interpolator(file.path(tmp_dir, \"meteoland_interpolator_example.nc\")) #> stars object with 2 dimensions and 13 attributes #> attribute(s): #>                                 Min.    1st Qu.    Median       Mean   3rd Qu. #> Temperature               -14.200000   8.800000  12.60000  11.324991  14.80000 #> MinTemperature            -15.900000   3.300000   6.90000   5.883189   9.40000 #> MaxTemperature            -13.000000  13.900000  18.30000  17.364292  21.80000 #> RelativeHumidity           18.000000  57.000000  67.00000  67.720000  78.00000 #> Precipitation               0.000000   0.000000   0.00000   1.925434   0.10000 #> Radiation                   7.707484  17.717235  22.04597  20.762628  23.61352 #> WindDirection               0.000000 116.000000 217.00000 196.861908 275.00000 #> WindSpeed                   0.200000   0.900000   1.30000   1.603907   2.00000 #> elevation                   0.000000 147.000000 317.00000 515.629630 668.00000 #> aspect                      0.000000   0.000000   0.00000   0.000000   0.00000 #> slope                       0.000000   0.000000   0.00000   0.000000   0.00000 #> SmoothedPrecipitation       0.100000   1.862500   5.55000   6.197496   9.07500 #> SmoothedTemperatureRange    4.695000   9.863542  11.66307  11.400932  13.26868 #>                                 Max. NA's #> Temperature                 23.40000  148 #> MinTemperature              20.10000  138 #> MaxTemperature              29.90000  139 #> RelativeHumidity           100.00000  145 #> Precipitation              160.90000   79 #> Radiation                   28.10878  139 #> WindDirection              359.00000 4171 #> WindSpeed                    6.90000 4160 #> elevation                 2535.00000    0 #> aspect                       0.00000    0 #> slope                        0.00000    0 #> SmoothedPrecipitation       65.10000  818 #> SmoothedTemperatureRange    17.72778  124 #> dimension(s): #>         from  to         offset  delta  refsys point #> date       1  30 2022-04-01 UTC 1 days POSIXct FALSE #> station    1 189             NA     NA  WGS 84  TRUE #>                                                       values #> date                                                    NULL #> station POINT (0.95172 41.6566),...,POINT (1.89716 42.32211) # }"},{"path":"https://emf-creaf.github.io/meteoland/news/index.html","id":"meteoland-221","dir":"Changelog","previous_headings":"","what":"meteoland 2.2.1","title":"meteoland 2.2.1","text":"CRAN release: 2023-11-29 Correction error caused Rcpp bug","code":""},{"path":"https://emf-creaf.github.io/meteoland/news/index.html","id":"meteoland-220","dir":"Changelog","previous_headings":"","what":"meteoland 2.2.0","title":"meteoland 2.2.0","text":"New interpolation parameters PET calculation (defaults compatible previous versions)","code":""},{"path":"https://emf-creaf.github.io/meteoland/news/index.html","id":"meteoland-210","dir":"Changelog","previous_headings":"","what":"meteoland 2.1.0","title":"meteoland 2.1.0","text":"CRAN release: 2023-08-21 Cleaning deprecated classes","code":""},{"path":"https://emf-creaf.github.io/meteoland/news/index.html","id":"meteoland-202","dir":"Changelog","previous_headings":"","what":"meteoland 2.0.2","title":"meteoland 2.0.2","text":"Modification default variables interpolator_calibration Avoiding interpolation cells missing elevation Fixed #21. Now meteo_complete works missing Precipitation Option ‘ignore_convex_hull_check’ allows ignoring target point outside convex hull","code":""},{"path":"https://emf-creaf.github.io/meteoland/news/index.html","id":"meteoland-201","dir":"Changelog","previous_headings":"","what":"meteoland 2.0.1","title":"meteoland 2.0.1","text":"CRAN release: 2023-05-29 Hard deprecation “sp”, “raster” “rgdal” depedencies, including functions classes using . Removed old vignettes old example data meteospain dependency moved SUGGESTS","code":""},{"path":"https://emf-creaf.github.io/meteoland/news/index.html","id":"meteoland-200","dir":"Changelog","previous_headings":"","what":"meteoland 2.0.0","title":"meteoland 2.0.0","text":"CRAN release: 2023-02-17 New functions interpolation, calibration, cross-validation summarising workflows added. See vignette(\"tidy-meteoland\", package = \"meteoland\") info. Added deprecation notices functions use sp, raster, rgdal packages internally. functions using sp, raster, rgdal packages enter maintenance mode. Starting June, stop working newer versions meteoland, packages also enter maintenance mode Added tests new workflows Added tests results equivalences new current workflows Updated documentation (functions) use roxygen2 Added vignetes new workflows rationale behind . Bug correction interpolation.cv Bug correction interpolategrid","code":""},{"path":"https://emf-creaf.github.io/meteoland/news/index.html","id":"version-103","dir":"Changelog","previous_headings":"","what":"Version 1.0.3","title":"Version 1.0.3","text":"CRAN release: 2022-09-08 Minor C code corrections (clang check) Elimination sysdata (SMCvarcodes needed) Bug correction construction MeteorologyInterpolationData SpatialPointsMeteorology Minor corrections interpolation wind speed relative humidity, PET estimation wind speed missing","code":""},{"path":"https://emf-creaf.github.io/meteoland/news/index.html","id":"version-102","dir":"Changelog","previous_headings":"","what":"Version 1.0.2","title":"Version 1.0.2","text":"CRAN release: 2022-01-05 Remove non-necessary dependencies (xml2, httr, jsonlite) Documentation bug","code":""},{"path":"https://emf-creaf.github.io/meteoland/news/index.html","id":"version-101","dir":"Changelog","previous_headings":"","what":"Version 1.0.1","title":"Version 1.0.1","text":"CRAN release: 2021-11-29 New function ‘reshapemeteospain’ reshape weather data obtained using package ‘meteospain’ Functions ‘downloadXXXstation’, ‘downloadXXXcurrentday’ ‘downloadXXXhistorical’ now call functions package ‘meteospain’","code":""},{"path":"https://emf-creaf.github.io/meteoland/news/index.html","id":"version-100","dir":"Changelog","previous_headings":"","what":"Version 1.0.0","title":"Version 1.0.0","text":"‘debug’ option interpolation params force additional output Download functions DEPRECATED. User advised use package ‘meteospain’ CRS specification changed SRS_string","code":""},{"path":"https://emf-creaf.github.io/meteoland/news/index.html","id":"version-099","dir":"Changelog","previous_headings":"","what":"Version 0.9.9","title":"Version 0.9.9","text":"New functions ‘downloadMETEOCLIMATICcurrentday’ ‘downloadMETEOCLIMATICstationlist’ MalditoBarbudo, inspired lemuscanovas Bug correction ‘downloadAEMEThistorical’","code":""},{"path":"https://emf-creaf.github.io/meteoland/news/index.html","id":"version-098","dir":"Changelog","previous_headings":"","what":"Version 0.9.8","title":"Version 0.9.8","text":"Bug correction ‘.openwritegridNetCDF’","code":""},{"path":"https://emf-creaf.github.io/meteoland/news/index.html","id":"version-097","dir":"Changelog","previous_headings":"","what":"Version 0.9.7","title":"Version 0.9.7","text":"CRAN release: 2020-10-27 Bug correction ‘mergegrids’ Bug correction ‘.putgridvardataday’ Flexible variable definition ‘writemeteorologygrid’ ‘writemeteorologypoints’ MeteorologyUncorrectedData accepts filenames input avoid loading large files memory calling ‘correctionpoints’","code":""},{"path":"https://emf-creaf.github.io/meteoland/news/index.html","id":"version-096","dir":"Changelog","previous_headings":"","what":"Version 0.9.6","title":"Version 0.9.6","text":"Allow missing Precipitation building MeteorologyInterpolationData New functions conversion relative humidity dew temperature","code":""},{"path":"https://emf-creaf.github.io/meteoland/news/index.html","id":"version-095","dir":"Changelog","previous_headings":"","what":"Version 0.9.5","title":"Version 0.9.5","text":"Update reshapeworldmet adapt changes package worldmet v.0.9.0 Update function downloadSMCcurrentday","code":""},{"path":"https://emf-creaf.github.io/meteoland/news/index.html","id":"version-094","dir":"Changelog","previous_headings":"","what":"Version 0.9.4","title":"Version 0.9.4","text":"CRAN release: 2020-08-27 Update CRS package data. Modification error handling .get_data_aemet. Bug correction functions (,“STFDF”) dates length one.","code":""},{"path":"https://emf-creaf.github.io/meteoland/news/index.html","id":"version-093","dir":"Changelog","previous_headings":"","what":"Version 0.9.3","title":"Version 0.9.3","text":"CRAN release: 2020-06-09 New functions ‘readNetCDFpoints’,‘readNetCDFproj4string’, ‘readNetCDFgridtopology’ ‘readNetCDFdates’. Bug correction byPixels interpolationpixels/interpolationgrid.","code":""},{"path":"https://emf-creaf.github.io/meteoland/news/index.html","id":"version-092","dir":"Changelog","previous_headings":"","what":"Version 0.9.2","title":"Version 0.9.2","text":"CRAN release: 2020-03-31 Clean version","code":""},{"path":"https://emf-creaf.github.io/meteoland/news/index.html","id":"version-090","dir":"Changelog","previous_headings":"","what":"Version 0.9.0","title":"Version 0.9.0","text":"New functions ‘extractdates’ ‘extractvars’ replacing generalizing ‘extractpointdates’. Function ‘summarypoints’ can summarize variables . Unlimited NetCDF time dimension grids station dimension points. Grids/pixels dates allowed Time (unlimited) written last dimension grids, can read first last dimension New functions () transform grids/pixels meteorology point meteorology New function writeemptymeteorologygrid()","code":""},{"path":"https://emf-creaf.github.io/meteoland/news/index.html","id":"version-089","dir":"Changelog","previous_headings":"","what":"Version 0.8.9","title":"Version 0.8.9","text":"New functions download data ‘meteogalicia’ (MG) Improvements function ‘reshapeworldmet’ New (public) functions ‘humidity_relative2specific’ ‘humidity_specific2relative’","code":""},{"path":"https://emf-creaf.github.io/meteoland/news/index.html","id":"version-088","dir":"Changelog","previous_headings":"","what":"Version 0.8.8","title":"Version 0.8.8","text":"New functions ‘writemeteorologypoints’ ‘readmeteorologypoints’ storing/reading point data /netCDF Functions ‘interpolationpoints’ ‘correctionpoints’ can now write result netCDF Function ‘summarypoints’ can now produce summaries reading netCDF Function ‘extractpointdates’ can now extract data reading netCDF","code":""},{"path":"https://emf-creaf.github.io/meteoland/news/index.html","id":"version-087","dir":"Changelog","previous_headings":"","what":"Version 0.8.7","title":"Version 0.8.7","text":"New function ‘readmeteorologygridpoints’ New function ‘writemeteorologygridpixel’ New functions ‘mergegrids’ ‘mergepoints’ Reading multiple grid/pixels files","code":""},{"path":"https://emf-creaf.github.io/meteoland/news/index.html","id":"version-086","dir":"Changelog","previous_headings":"","what":"Version 0.8.6","title":"Version 0.8.6","text":"New function ‘averagearea’ New functions ‘defaultGenerationParams’ ‘weathergeneration’ implementing multisite multivariate weather generator Modification readmeteorologygrid/pixels facilitate reading data netCDF created meteoland","code":""},{"path":"https://emf-creaf.github.io/meteoland/news/index.html","id":"version-085","dir":"Changelog","previous_headings":"","what":"Version 0.8.5","title":"Version 0.8.5","text":"New functions convert SpatialPointsMeteorology, SpatialPixelsMeteorology SpatialGridMeteorology objects packages ‘spacetime’ ‘stars’ Functions read/write NetCDF files reprogrammed improved. Functions extractgridindex extractgridpoints reprogrammed","code":""},{"path":"https://emf-creaf.github.io/meteoland/news/index.html","id":"version-084","dir":"Changelog","previous_headings":"","what":"Version 0.8.4","title":"Version 0.8.4","text":"New function calculate rainfall erosivity","code":""},{"path":"https://emf-creaf.github.io/meteoland/news/index.html","id":"version-083","dir":"Changelog","previous_headings":"","what":"Version 0.8.3","title":"Version 0.8.3","text":"CRAN release: 2019-11-05 Remove dependencies ncdf4.helpers","code":""},{"path":"https://emf-creaf.github.io/meteoland/news/index.html","id":"version-082","dir":"Changelog","previous_headings":"","what":"Version 0.8.2","title":"Version 0.8.2","text":"Documentation converted bookdown reference book. Bug correction function ‘doQmapDeque’","code":""},{"path":"https://emf-creaf.github.io/meteoland/news/index.html","id":"version-081","dir":"Changelog","previous_headings":"","what":"Version 0.8.1","title":"Version 0.8.1","text":"CRAN release: 2019-05-29 Modification ‘radiation_directDiffuseInstant’ ‘radiation_directDiffuseDay’ account topographic effects New function ‘summarypoint’","code":""},{"path":"https://emf-creaf.github.io/meteoland/news/index.html","id":"version-080","dir":"Changelog","previous_headings":"","what":"Version 0.8.0","title":"Version 0.8.0","text":"CRAN release: 2019-04-29 New functions ‘downloadSMCstationlist’, ‘downloadSMCcurrentday’, ‘downloadSMChistorical’ ‘downloadSMCvarmetadata’. Update vignette ‘Meteorology’.","code":""},{"path":"https://emf-creaf.github.io/meteoland/news/index.html","id":"version-079","dir":"Changelog","previous_headings":"","what":"Version 0.7.9","title":"Version 0.7.9","text":"New function reshapeworldmet reshape data downloaded using package ‘worldmet’ New function reshapeweathercan reshape data downloaded using package ‘weathercan’ Transform point coordinate system ‘interpolationpoints’, ‘interpolationpixels’ ‘interpolationgrid’ necessary Check infinite values ‘MeteorologyInterpolationData’ New function ‘correctionpoint’. Bug corrected ‘meteocomplete’. Added conversion specific humidity relative humidity meteocomplete.","code":""},{"path":"https://emf-creaf.github.io/meteoland/news/index.html","id":"version-078","dir":"Changelog","previous_headings":"","what":"Version 0.7.8","title":"Version 0.7.8","text":"Corrected bug MeteorologyInterpolationData SpatialPointsTopography input Updated user guide documentation","code":""},{"path":"https://emf-creaf.github.io/meteoland/news/index.html","id":"version-077","dir":"Changelog","previous_headings":"","what":"Version 0.7.7","title":"Version 0.7.7","text":"CRAN release: 2018-10-22 Empirical quantile mapping according original method (Déqué) Dependency package ‘qmap’ removed","code":""},{"path":"https://emf-creaf.github.io/meteoland/news/index.html","id":"version-076","dir":"Changelog","previous_headings":"","what":"Version 0.7.6","title":"Version 0.7.6","text":"Methods ‘print/head/tail’ updated objects SpatialPointsTopography SpatialPointsMeteorology Subsetting objects SpatialPointsMeteorology, SpatialGridMeteorology SpatialPixelsMeteorology. Coercing objects Spatial…Topography New vignette ‘user guide’ (old one renamed) Adapt Rcpp changes","code":""},{"path":"https://emf-creaf.github.io/meteoland/news/index.html","id":"version-075","dir":"Changelog","previous_headings":"","what":"Version 0.7.5","title":"Version 0.7.5","text":"CRAN release: 2018-08-22 AEMET download using packages httr jsonlite (code adapted https://github.com/SevillaR/aemet) Methods ‘print/show’ added objects class SpatialPointsMeteorology, SpatialGridMeteorology SpatialPixelsMeteorology. Methods ‘print/show’ added objects class SpatialPointsTopography, SpatialGridTopography SpatialPixelsTopography. Methods ‘head/tail’ added objects SpatialPointsTopography SpatialPointsMeteorology Bug correction: Historical download AEMET data returns SunshineHours","code":""},{"path":"https://emf-creaf.github.io/meteoland/news/index.html","id":"version-074","dir":"Changelog","previous_headings":"","what":"Version 0.7.4","title":"Version 0.7.4","text":"Added reference publication Added citation reference. Bug correction: -dimensioned vectors temperature differences (precipitation). Low-level interpolation routines made accessible user Bug correction: builder MeteorologyInterpolationData Bug correction: Missing values downloadAEMEThistorical","code":""},{"path":"https://emf-creaf.github.io/meteoland/news/index.html","id":"version-073","dir":"Changelog","previous_headings":"","what":"Version 0.7.3","title":"Version 0.7.3","text":"New function ‘meteocomplete’. Improvement function ‘meteoplot’ accept data frames daily meteorological data input","code":""},{"path":"https://emf-creaf.github.io/meteoland/news/index.html","id":"version-072","dir":"Changelog","previous_headings":"","what":"Version 0.7.2","title":"Version 0.7.2","text":"Update functions download data AEMET deal encoding Update function ‘SpatialPointsMeteorology’ build objects sets data frames, one per date Update function ‘MeteorologyInterpolationData’ build objects different data structures New function ‘summaryinterpolationdata’ summarize objects class ‘MeteorologyInterpolationData’","code":""},{"path":"https://emf-creaf.github.io/meteoland/news/index.html","id":"version-071","dir":"Changelog","previous_headings":"","what":"Version 0.7.1","title":"Version 0.7.1","text":"CRAN release: 2018-03-10 Bug correction interpolationpixels (export=TRUE) Bug correction correctionpoints.errors (rds input)","code":""},{"path":"https://emf-creaf.github.io/meteoland/news/index.html","id":"version-070","dir":"Changelog","previous_headings":"","what":"Version 0.7.0","title":"Version 0.7.0","text":"New S4 structures: SpatialPixelsTopography SpatialPixelsMeteorology New function interpolationpixels Update functions download data Spanish Agencia Estatal de Meteorologia (AEMET) New function writemeteorologypixels Function correctiongrid removed (correction weather series makes sense point data) New function summarypixels","code":""},{"path":"https://emf-creaf.github.io/meteoland/news/index.html","id":"version-069","dir":"Changelog","previous_headings":"","what":"Version 0.6.9","title":"Version 0.6.9","text":"Allow saturated (> 100% values) relative humidity extracting NetCDF performing bias correction","code":""},{"path":"https://emf-creaf.github.io/meteoland/news/index.html","id":"version-068","dir":"Changelog","previous_headings":"","what":"Version 0.6.8","title":"Version 0.6.8","text":"Modification precipitation interpolation (kernels) Modification radiation calculation (diffuse light slopes direct light low) Modification partitioning direct diffuse radiation","code":""},{"path":"https://emf-creaf.github.io/meteoland/news/index.html","id":"version-067","dir":"Changelog","previous_headings":"","what":"Version 0.6.7","title":"Version 0.6.7","text":"CRAN release: 2017-11-15 Improvements ‘subsample’ function New function ‘radiation_skyLongwaveRadiation’","code":""},{"path":"https://emf-creaf.github.io/meteoland/news/index.html","id":"version-066","dir":"Changelog","previous_headings":"","what":"Version 0.6.6","title":"Version 0.6.6","text":"Export format txt/rds Changed description","code":""},{"path":"https://emf-creaf.github.io/meteoland/news/index.html","id":"version-065","dir":"Changelog","previous_headings":"","what":"Version 0.6.5","title":"Version 0.6.5","text":"Default correction method wind switched ‘quantmap’. Unbias method Tmin Tmax applies bias Tmean (also unbiasing). Quantile mapping method Tmin Tmax applied (Tmin-Tmean) (Tmax-Tmean).","code":""},{"path":"https://emf-creaf.github.io/meteoland/news/index.html","id":"version-064","dir":"Changelog","previous_headings":"","what":"Version 0.6.4","title":"Version 0.6.4","text":"CRAN release: 2017-09-05 Corrected bug correction relative humidity. New function ‘correctionpoints.errors’ evaluate correction errors reference period.","code":""}]
